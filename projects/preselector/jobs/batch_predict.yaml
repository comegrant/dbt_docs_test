resources:
  jobs:
    preselector-simulation-gl:
      name: preselector-simulation-GL-${bundle.target}

      permissions:
        - group_name: data-scientists
          level: CAN_MANAGE_RUN

      job_clusters:
        - job_cluster_key: preselector
          new_cluster:
            num_workers: 1
            spark_version: ${var.cluster_version}
            node_type_id: Standard_DS4_v2
            custom_tags:
              user: "Data scientists"
              tool: "Preselector"
              env: ${bundle.target}
              managed_by: "manually"
            docker_image:
              url: "${var.docker_image_url}"
              basic_auth:
                username: "{{secrets/auth_common/docker-registry-username}}"
                password: "{{secrets/auth_common/docker-registry-password}}"

      schedule:
        quartz_cron_expression: '0 0 2 ? * MON'
        timezone_id: UTC

      tasks:
        - task_key: batch-predict-gl-slack-notification-start
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              body_message: ✅ Preselector forecast job for GL started
              is_error: false

        - task_key: materialization
          job_cluster_key: preselector
          notebook_task:
            notebook_path: materialize.py
            base_parameters:
              environment: "${var.environment}"

        - task_key: batch-predict-gl
          job_cluster_key: preselector
          notebook_task:
            notebook_path: batch_predict.py
            base_parameters:
              company_id: "09ECD4F0-AE58-4539-8E8F-9275B1859A19"
              environment: "${var.environment}"
          depends_on:
            - task_key: materialization

        - task_key: batch-predict-gl-slack-notification-end-fail
          depends_on:
          - task_key: batch-predict-gl
          run_if: AT_LEAST_ONE_FAILED
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              header_message: ❌ Preselector forecast job failed for GL
              body_message: Check Databricks for more details
              is_error: true
              relevant_people: mats, sylvia, grant

        - task_key: batch-predict-gl-slack-notification-end-success
          depends_on:
          - task_key: batch-predict-gl
          run_if: NONE_FAILED
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              body_message: ✅ Preselector forecast job for GL succeeded
              is_error: false

    preselector-simulation-amk:
      name: preselector-simulation-AMK-${bundle.target}

      permissions:
        - group_name: data-scientists
          level: CAN_MANAGE_RUN

      job_clusters:
        - job_cluster_key: preselector
          new_cluster:
            num_workers: 1
            spark_version: ${var.cluster_version}
            node_type_id: Standard_DS4_v2
            custom_tags:
              user: "Data scientists"
              tool: "Preselector"
              env: ${bundle.target}
              managed_by: "manually"
            docker_image:
              url: "${var.docker_image_url}"
              basic_auth:
                username: "{{secrets/auth_common/docker-registry-username}}"
                password: "{{secrets/auth_common/docker-registry-password}}"

      schedule:
        quartz_cron_expression: '0 0 6 ? * MON'
        timezone_id: UTC

      tasks:
        - task_key: batch-predict-amk-slack-notification-start
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              body_message: ✅ Preselector forecast job for AMK started
              is_error: false

        - task_key: materialization
          job_cluster_key: preselector
          notebook_task:
            notebook_path: materialize.py
            base_parameters:
              environment: "${var.environment}"        

        - task_key: batch-predict-amk
          job_cluster_key: preselector
          notebook_task:
            notebook_path: batch_predict.py
            base_parameters:
              company_id: "8A613C15-35E4-471F-91CC-972F933331D7"
              environment: "${var.environment}"
          depends_on:
            - task_key: materialization

        - task_key: batch-predict-amk-slack-notification-end-fail
          depends_on:
          - task_key: batch-predict-amk
          run_if: AT_LEAST_ONE_FAILED
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              header_message: ❌ Preselector forecast job failed for AMK
              body_message: Check Databricks for more details
              is_error: true
              relevant_people: mats, sylvia, grant

        - task_key: batch-predict-amk-slack-notification-end-success
          depends_on:
          - task_key: batch-predict-amk
          run_if: NONE_FAILED
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              body_message: ✅ Preselector forecast job for AMK succeeded
              is_error: false

    preselector-simulation-lmk:
      name: preselector-simulation-LMK-${bundle.target}

      permissions:
        - group_name: data-scientists
          level: CAN_MANAGE_RUN

      job_clusters:
        - job_cluster_key: preselector
          new_cluster:
            num_workers: 1
            spark_version: 14.3.x-scala2.12
            node_type_id: Standard_DS4_v2
            custom_tags:
              user: mats
              tool: preselector
              env: ${bundle.target}
              managed_by: manually
            docker_image:
              url: "${var.docker_image_url}"
              basic_auth:
                username: "{{secrets/auth_common/docker-registry-username}}"
                password: "{{secrets/auth_common/docker-registry-password}}"

      schedule:
        quartz_cron_expression: '0 0 10 ? * MON'
        timezone_id: UTC

      tasks:
        - task_key: batch-predict-lmk-slack-notification-start
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              body_message: ✅ Preselector forecast job for LMK started
              is_error: false

        - task_key: materialization
          job_cluster_key: preselector
          notebook_task:
            notebook_path: materialize.py
            base_parameters:
              environment: "${var.environment}"

        - task_key: batch-predict-lmk
          job_cluster_key: preselector
          notebook_task:
            notebook_path: batch_predict.py
            base_parameters:
              company_id: "6A2D0B60-84D6-4830-9945-58D518D27AC2"
              environment: "${var.environment}"
          depends_on:
            - task_key: materialization

        - task_key: batch-predict-lmk-slack-notification-end-fail
          depends_on:
          - task_key: batch-predict-lmk
          run_if: AT_LEAST_ONE_FAILED
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              header_message: ❌ Preselector forecast job failed for LMK
              body_message: Check Databricks for more details
              is_error: true
              relevant_people: mats, sylvia, grant

        - task_key: batch-predict-lmk-slack-notification-end-success
          depends_on:
          - task_key: batch-predict-lmk
          run_if: NONE_FAILED
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              body_message: ✅ Preselector forecast job for LMK succeeded
              is_error: false

    preselector-simulation-rt:
      name: preselector-simulation-RT-${bundle.target}

      permissions:
        - group_name: data-scientists
          level: CAN_MANAGE_RUN

      job_clusters:
        - job_cluster_key: preselector
          new_cluster:
            num_workers: 1
            spark_version: 14.3.x-scala2.12
            node_type_id: Standard_DS4_v2
            custom_tags:
              user: mats
              tool: preselector
              env: ${bundle.target}
              managed_by: manually
            docker_image:
              url: "${var.docker_image_url}"
              basic_auth:
                username: "{{secrets/auth_common/docker-registry-username}}"
                password: "{{secrets/auth_common/docker-registry-password}}"

      schedule:
        quartz_cron_expression: '0 0 14 ? * MON'
        timezone_id: UTC

      tasks:
        - task_key: batch-predict-rt-slack-notification-start
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              body_message: ✅ Preselector forecast job for RT started
              is_error: false

        - task_key: materialization
          job_cluster_key: preselector
          notebook_task:
            notebook_path: materialize.py
            base_parameters:
              environment: "${var.environment}"

        - task_key: batch-predict-rt
          job_cluster_key: preselector
          notebook_task:
            notebook_path: batch_predict.py
            base_parameters:
              company_id: "5E65A955-7B1A-446C-B24F-CFE576BF52D7"
              environment: "${var.environment}"
          depends_on:
            - task_key: materialization

        - task_key: batch-predict-rt-slack-notification-end-fail
          depends_on:
          - task_key: batch-predict-rt
          run_if: AT_LEAST_ONE_FAILED
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              header_message: ❌ Preselector forecast job failed for RT
              body_message: Check Databricks for more details
              is_error: true
              relevant_people: mats, sylvia, grant

        - task_key: batch-predict-rt-slack-notification-end-success
          depends_on:
          - task_key: batch-predict-rt
          run_if: NONE_FAILED
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              body_message: ✅ Preselector forecast job for RT succeeded
              is_error: false
