FROM databricksruntime/python:15.4-LTS

SHELL ["/bin/bash", "-c"]

# Defaulting to utf-8 to fix a few charset bugs
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

# set the home directory
ENV APP_HOME=/opt
ENV SERVICE_HOME=$APP_HOME/projects/preselector

RUN /databricks/python3/bin/pip install poetry==1.8.2

# Install Microsoft ODBC driver for SQL Server
RUN curl https://packages.microsoft.com/keys/microsoft.asc | tee /etc/apt/trusted.gpg.d/microsoft.asc && \
    curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | tee /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && \
    ACCEPT_EULA=Y apt-get install -y mssql-tools18 unixodbc-dev

# copy source code
WORKDIR $APP_HOME
COPY packages packages

WORKDIR $SERVICE_HOME
COPY projects/preselector/pyproject.toml .
COPY projects/preselector/poetry.lock .

# create a dummy package to satisfy Poetry
RUN mkdir -p preselector && touch preselector/__init__.py

RUN source /databricks/python3/bin/activate \
	&& pip install virtualenv=="20.31.2" \
	&& echo "$(which poetry)" \
	&& poetry config virtualenvs.create false \
	&& poetry install --with=databricks && rm -rf ~/.cache/pypoetry/cache


ENV PYTHONPATH=/databricks/python3/bin
ENV PATH=/databricks/python3/bin:$PATH

# store the git branch and commit hash as env variables
ARG GIT_BRANCH
ARG GIT_COMMIT_HASH
ENV GIT_BRANCH=${GIT_BRANCH}
ENV GIT_COMMIT_HASH=${GIT_COMMIT_HASH}

# copy source code
COPY projects/preselector .
