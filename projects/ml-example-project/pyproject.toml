[tool.poetry]
name = "ml-example-project"
version = "0.1.0"
description = "A simple ML project template"
authors = ["Sylvia Liu <sylvia.liu@cheffelo.com>"]
packages = [{include = "ml_example_project"}]

[tool.poetry.dependencies]
python = "^3.11"
pydantic-settings = "^2.1.0"
ipykernel = "^6.29.5"
constants = {path = "../../packages/constants", develop = true}
databricks-env = {path = "../../packages/databricks-env", develop = true}
slack-connector = {path = "../../packages/slack-connector", develop = true}
pydantic = "^2.10.2"
pytest = "^8.3.4"
databricks-connect = "15.4"
databricks-feature-store = "^0.17.0"
plotly = "^5.24.1"
nbformat = "^5.10.4"
mlflow = "^2.18.0"
scikit-learn = "^1.5.2"
databricks-feature-engineering = "^0.7.0"

[tool.poetry.group.cli.dependencies]
pydantic-argparser = {path = "../../packages/pydantic-argparser", develop = true}

[tool.poetry.group.dev.dependencies]
black = "*"
pre-commit = "*"
pytest = "*"
pytest-asyncio = "*"
ruff = "*"
chef = {path = "../../packages/chef", develop = true}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
chef = 'chef.cli:cli'
