resources:
  jobs:
    attribute-scoring-predict-weekly:
      name: attribute-scoring-predict-weekly-${bundle.target}
      permissions:
        - group_name: data-scientists
          level: CAN_MANAGE_RUN

      job_clusters:
        - job_cluster_key: attribute-scoring-predict-weekly
          new_cluster:
            num_workers: 1
            spark_version: 14.3.x-scala2.12
            node_type_id: Standard_DS4_v2
            custom_tags:
              user: "Data scientists"
              tool: "Attribute scoring"
              env: ${bundle.target}
              managed_by: "manually"
            docker_image:
              url: "${var.docker_image_url}"
              basic_auth:
                username: "{{secrets/auth_common/docker-registry-username}}"
                password: "{{secrets/auth_common/docker-registry-password}}"

      schedule:
        quartz_cron_expression: '0 0 8 ? * MON *'
        timezone_id: Europe/Amsterdam

      email_notifications:
        on_failure:
          - agathe.raaum@cheffelo.com
        on_success:
          - agathe.raaum@cheffelo.com

      tasks:
        - task_key: predict-attribute-scoring-AMK
          job_cluster_key: attribute-scoring-predict-weekly
          notebook_task:
            notebook_path: ./2_predict.py
            base_parameters:
              env: "${var.environment}"
              company: AMK
              start_yyyyww: None
              end_yyyyww: None

        - task_key: predict-attribute-scoring-GL
          job_cluster_key: attribute-scoring-predict-weekly
          run_if: ALL_DONE
          notebook_task:
            notebook_path: ./2_predict.py
            base_parameters:
              env: "${var.environment}"
              company: GL
              start_yyyyww: None
              end_yyyyww: None
          depends_on:
            - task_key: predict-attribute-scoring-AMK

        - task_key: predict-attribute-scoring-RT
          job_cluster_key: attribute-scoring-predict-weekly
          run_if: ALL_DONE
          notebook_task:
            notebook_path: ./2_predict.py
            base_parameters:
              env: "${var.environment}"
              company: RT
              start_yyyyww: None
              end_yyyyww: None
          depends_on:
            - task_key: predict-attribute-scoring-GL

        - task_key: predict-attribute-scoring-LMK
          job_cluster_key: attribute-scoring-predict-weekly
          run_if: ALL_DONE
          notebook_task:
            notebook_path: ./2_predict.py
            base_parameters:
              env: "${var.environment}"
              company: LMK
              start_yyyyww: None
              end_yyyyww: None
          depends_on:
            - task_key: predict-attribute-scoring-RT

        - task_key: slack-notification-success
          depends_on: [
            {task_key: predict-attribute-scoring-AMK},
            {task_key: predict-attribute-scoring-GL},
            {task_key: predict-attribute-scoring-RT},
            {task_key: predict-attribute-scoring-LMK},
          ]
          run_if: ALL_SUCCESS
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
              environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
              header_message: ""
              body_message: ✅ Attribute scoring prediction successful!
              is_error: false
        
        - task_key: slack-notification-failure
          depends_on: [
            {task_key: predict-attribute-scoring-AMK},
            {task_key: predict-attribute-scoring-GL},
            {task_key: predict-attribute-scoring-RT},
            {task_key: predict-attribute-scoring-LMK},
          ]
          run_if: AT_LEAST_ONE_FAILED
          run_job_task:
            job_id: ${var.slack_notification_job_id} #Reads from the variable defined in the databricks.yml file
            job_parameters:
                environment: ${bundle.target} #Reads from the target environment as defined in the databricks.yml file
                header_message: ❌ Attribute scoring prediction failed!
                body_message: Check databricks log for more details...
                is_error: true
                relevant_people: agathe