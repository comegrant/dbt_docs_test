table 'Customer Measures'
	isHidden
	lineageTag: d05b49b2-fb42-46e1-9a85-76404c8a551e

	/// This is a hidden measure that can be used to create other measures.
	/// It will be a count of changes related to agreements, and represent the agreements after the change.
	/// The change could be anything, e.g. status, preferences, subscribed products, loyalty level etc.
	/// Since the change could be anything, the measure is hidden and should be used to create other measures where the change is specified.
	measure 'Number of Agreement Changes to Filtered State' = COUNTROWS('Customer Measures')
		formatString: #,0
		isHidden
		lineageTag: 098c92f8-30b6-4563-a7ec-b556839eceef

	/// This is a hidden measure that can be used to create other measures.
	/// It will be a count of changes related to agreements, and represent the agreements before the change.
	/// The change could be anything, e.g. status, preferences, subscribed products, loyalty level etc.
	/// Since the change could be anything, the measure is hidden and should be used to create other measures where the change is specified.
	measure 'Number of Agreement Changes from Filtered State' =
			CALCULATE(
				COUNTROWS('Customer Measures'),
				USERELATIONSHIP('Customer Measures'[fk_dim_billing_agreements_previous_version],'Billing Agreements'[pk_dim_billing_agreements]),
				USERELATIONSHIP('Customer Measures'[fk_dim_preference_combinations_previous_version],'Preference Combinations'[pk_dim_preference_combinations])
			)
		formatString: #,0
		isHidden
		lineageTag: bb5e3faf-1d2a-4b8e-be86-438d234cebb5

	/// Number of Active Subscribers, i.e. a distinct count of all agreements with status "Active".
	/// It will count the number of active subscribers at the end of the selected period.
	measure 'Number of Active Subscribers' =
			CALCULATE(
				[Number of Subscribers All Statuses],
				'Billing Agreements'[Billing Agreement Status]="Active"
			)
		formatString: #,0
		displayFolder: Active Subscribers
		lineageTag: 97c48411-d8b8-4fa8-aa51-3eea12e119f2

	/// Number of Active Subscribers same period last year.
	measure 'Number of Active Subscribers (PY)' =
			CALCULATE(
				[Number of Active Subscribers],
				'Time Intelligence'[Time Calculation]="PY"
			)

		formatString: #,0
		displayFolder: Active Subscribers
		lineageTag: 19d1851e-5f07-4655-a252-cb0338ba7fdb

	/// Difference between number of active subscribers in the current year
	/// and the same period in the previous year.
	measure 'Number of Active Subscribers (Diff PY)' =
			CALCULATE(
				[Number of Active Subscribers],
				'Time Intelligence'[Time Calculation]="Diff PY"
			)

		formatString: #,0
		isHidden
		displayFolder: Active Subscribers

	/// % change in number of active subscribers
	/// comparing current period to same period last year
	measure 'Number of Active Subscribers (YOY%)' =
			CALCULATE(
				[Number of Active Subscribers],
				'Time Intelligence'[Time Calculation]="YOY%"
			)

		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Active Subscribers

	/// Cumulative sum of active subscribers from the beginning of the year (Year To Date).
	measure 'Number of Active Subscribers (YTD)' =
			CALCULATE(
				[Number of Active Subscribers],
				'Time Intelligence'[Time Calculation]="YTD"
			)
		isHidden
		formatString: #,0
		displayFolder: Active Subscribers

	/// Cumulative sum of number of active subscribers from the beginning of the year up to the current period
	/// for the same period in the previous year (Previous Year to Date).
	measure 'Number of Active Subscribers (PYTD)' =
			CALCULATE(
				[Number of Active Subscribers],
				'Time Intelligence'[Time Calculation]="PYTD"
			)
		isHidden
		formatString: #,0
		displayFolder: Active Subscribers

	/// Number of subscribers included all selected statuses (also included deleted if not filtered otherwise).
	/// This should be used together with the [Billing Agreement Status] filter in the [Billing Agreements] table.
	/// It will count the number of subscribers at the end of the selected period.
	measure 'Number of Subscribers All Statuses' =
			VAR OneStatus = HASONEVALUE('Billing Agreements'[Billing Agreement Status])
			VAR StatusIsBlank = ISBLANK(SELECTEDVALUE('Billing Agreements'[Billing Agreement Status]))
			RETURN
			IF(
			    OneStatus && StatusIsBlank,
			    BLANK(),
			    [Number of Subscribers All Statuses Included Blanks]
			)
		formatString: #,0
		displayFolder: Selected Statuses
		lineageTag: fd14e082-b1f9-477a-8dfc-6ac06324ce11

	/// Number of subscribers included all statuses (also included deleted and blanks).
	measure 'Number of Subscribers All Statuses Included Blanks' =
			CALCULATE(
				[Number of Agreement Changes to Filtered State] - [Number of Agreement Changes from Filtered State],
				ALL('Dates'),
				'Dates'[Date] <= MIN(MAX('Dates'[Date]), TODAY())
			)
		formatString: #,0
		isHidden
		displayFolder: Selected Statuses

	/// Number of subscribers (included all statuses) same period last year.
	measure 'Number of Subscribers All Statuses (PY)' =
			CALCULATE(
				[Number of Subscribers All Statuses],
				'Time Intelligence'[Time Calculation]="PY"
			)
		formatString: #,0
		displayFolder: Selected Statuses
		lineageTag: a840a69a-c3f1-4878-ae41-b99013d1b47d

	/// Difference between number of subscribers (including all statuses) in the current period
	/// and the same period in the previous year.
	measure 'Number of Subscribers All Statuses (Diff PY)' =
			CALCULATE(
				[Number of Subscribers All Statuses],
				'Time Intelligence'[Time Calculation]="Diff PY"
			)
		isHidden
		formatString: #,0
		displayFolder: Selected Statuses

	/// % change in number of subscribers (including all statues)
	/// comparing current period to same period last year
	measure 'Number of Subscribers All Statuses (YOY%)' =
			CALCULATE(
				[Number of Subscribers All Statuses],
				'Time Intelligence'[Time Calculation]="YOY%"
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Selected Statuses


	/// Cumulative sum of number of subscribers (including all statues) from the beginning of the year (year-to-date)
	measure 'Number of Subscribers All Statuses (YTD)' =
			CALCULATE(
				[Number of Subscribers All Statuses],
				'Time Intelligence'[Time Calculation]="YTD"
			)
		isHidden
		formatString: #,0
		displayFolder: Selected Statuses

	/// Cumulative sum of number of subscribers (including all statues) from the beginning of the year up to the current period
	/// for the same period in the previous year (Previous Year to Date).
	measure 'Number of Subscribers All Statuses (PYTD)' =
			CALCULATE(
				[Number of Subscribers All Statuses],
				'Time Intelligence'[Time Calculation]="PYTD"
			)
		isHidden
		formatString: #,0
		displayFolder: Selected Statuses


	/// Number of customers having their first delivery on the corresponding menu week.
	measure 'Number of Customers with First Delivery' =
			CALCULATE(
				COUNTROWS('Customer Measures'),
				'Customer Measures'[has_first_delivery]=TRUE(),
				USERELATIONSHIP(
					'Customer Measures'[fk_dim_dates_first_menu_week],
					'Dates'[pk_dim_dates]
				)
			)
		formatString: #,0
		displayFolder: First Delivery
		lineageTag: 6ab987c5-f8dc-4b42-97cd-427d7b732eb6

	/// Number of customers having their first delivery, same period last year.
	measure 'Number of Customers with First Delivery (PY)' =
			CALCULATE(
				[Number of Customers with First Delivery],
				'Time Intelligence'[Time Calculation]="PY"
			)
		formatString: #,0
		displayFolder: First Delivery
		lineageTag: bca7b0e3-22e6-492d-972f-1a0edd49f9f8

	/// Difference between number of customers with first delivery in the current period
	/// and the same period in the previous year.
	measure 'Number of Customers with First Delivery (Diff PY)' =
			CALCULATE(
				[Number of Customers with First Delivery],
				'Time Intelligence'[Time Calculation]="Diff PY"
			)
		isHidden
		formatString: #,0
		displayFolder: First Delivery

	/// % change in number of customers with first delivery
	/// comparing current period to same period last year
	measure 'Number of Customers with First Delivery (YOY%)' =
			CALCULATE(
				[Number of Customers with First Delivery],
				'Time Intelligence'[Time Calculation]="YOY%"
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: First Delivery


	/// Cumulative sum of number of customers with first delivery from the beginning of the year (year-to-date)
	measure 'Number of Customers with First Delivery (YTD)' =
			CALCULATE(
				[Number of Customers with First Delivery],
				'Time Intelligence'[Time Calculation]="YTD"
			)
		formatString: #,0
		displayFolder: First Delivery
		lineageTag: 359e8c41-e175-4c30-bb88-eb271fba3181

	/// Cumulative sum of number of customers with first delivery from the beginning of the year up to the current period
	/// for the same period in the previous year (Previous Year to Date).
	measure 'Number of Customers with First Delivery (PYTD)' =
			CALCULATE(
				[Number of Customers with First Delivery],
				'Time Intelligence'[Time Calculation]="PYTD"
			)
		formatString: #,0
		displayFolder: First Delivery
		lineageTag: 214a91d8-fc9a-4084-8144-625b9cb7a7f6

	/// Number of new registered agreements on the day they signed up. They do not need to have had a delivery.
	/// This measure will be blank when used on weekly level.
	/// Instead of looking at sign-ups by week, one could use the measure "Number of Sign-ups (7 Days Rolling)"
	measure 'Number of Sign-ups' =
			IF(
				ISFILTERED(Dates[Financial Week]),
				BLANK(),
				CALCULATE(
					COUNTROWS('Customer Measures'),
					'Customer Measures'[is_signup]=TRUE()
				)
			)
		formatString: #,0
		displayFolder: Sign-ups
		lineageTag: 7cdf8cd7-4766-4a7c-acf8-d5b435ac1b1e

	/// Number of new sign-ups same period last year.
	measure 'Number of Sign-ups (PY)' =
			CALCULATE(
				[Number of Sign-ups],
				'Time Intelligence'[Time Calculation]="PY"
			)
		formatString: #,0
		displayFolder: Sign-ups
		lineageTag: 801ee2fa-401a-46de-8c57-f8354b3470b4

	/// Difference between number of sign-ups in
	/// the current period and the same period previous year.
	measure 'Number of Sign-ups (Diff PY)' =
			CALCULATE(
				[Number of Sign-ups],
				'Time Intelligence'[Time Calculation]="Diff PY"
			)
		isHidden
		formatString: #,0
		displayFolder: Sign-ups

	/// % change in sign-ups
	/// comparing current period to same period last year
	measure 'Number of Sign-ups (YOY%)' =
			CALCULATE(
				[Number of Sign-ups],
				'Time Intelligence'[Time Calculation]="YOY%"
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sign-ups

	/// Cumulative sum of number of sign-ups from the beginning of the year (year-to-date)
	measure 'Number of Sign-ups (YTD)' =
			CALCULATE(
				[Number of Sign-ups],
				'Time Intelligence'[Time Calculation]="YTD"
			)
		formatString: #,0
		displayFolder: Sign-ups
		lineageTag: 69492a6f-2f2b-4b14-8d67-ca182e031ee0

	/// Cumulative sum of number of sign-ups from the beginning of the year up to the current period
	/// for the same period in the previous year (Previous Year to Date).
	measure 'Number of Sign-ups (PYTD)' =
			CALCULATE(
				[Number of Sign-ups],
				'Time Intelligence'[Time Calculation]="PYTD"
			)
		formatString: #,0
		displayFolder: Sign-ups
		lineageTag: c9fc05d1-f58a-46ce-a71e-b25dc72992ad

	/// The rolling number of signups for the last 7 days. Including current day.
	measure 'Number of Sign-ups (7 Days Rolling)' =
			CALCULATE(
			[Number of Sign-ups],
			'Time intelligence'[Time Calculation]= "Rolling x days",
			'(Param) Days in Rolling Period'[Days in Rolling Period] = 7)
		formatString: #,0
		displayFolder: Sign-ups

	/// The rolling number of signups for the last 7 days, same period last year.
	measure 'Number of Sign-ups (7 Days Rolling PY)' =
			CALCULATE(
			[Number of Sign-ups],
			'Time intelligence'[Time Calculation]= "Rolling x days (PY)",
			'(Param) Days in Rolling Period'[Days in Rolling Period] = 7)
		formatString: #,0
		displayFolder: Sign-ups

	/// Calculates the year over year percentage change in the rolling number of signups for the last 7 days. Matches exact dates previous year.
	measure 'Number of Sign-ups (Rolling 7 Days YOY%)' =
			CALCULATE(
			[Number of Sign-ups],
			'Time intelligence'[Time Calculation]= "Rolling x days (YOY%)",
			'(Param) Days in Rolling Period'[Days in Rolling Period] = 7)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sign-ups


	/// Number of subscribers changed from active to another status during the selected period.
	/// It will count number of subscribers that was in a active state at the beginning of the selected period
	/// and was in another status at the end of the selected period.
	measure 'Number of Subscribers Changed from Active' =
			SUMX(
				VALUES('Billing Agreements'[Agreement Id]),

				VAR min_updated_at = CALCULATE(
					MIN('Customer Measures'[updated_at]),
					'Customer Measures'[has_updated_status]=TRUE(),
					ALL('Customer Measures'[updated_at]),
					'Customer Measures'[updated_at]>MIN('Dates'[Date])
				)

				VAR max_updated_at = CALCULATE(
					MAX('Customer Measures'[updated_at]),
					'Customer Measures'[has_updated_status]=TRUE(),
					ALL('Customer Measures'[updated_at]),
					'Customer Measures'[updated_at]<=MAX('Dates'[Date])
				)

				VAR CountStart =
					CALCULATE(
						COUNTROWS('Customer Measures'),
						'Customer Measures'[has_updated_status]=TRUE(),
						'Customer Measures'[updated_at] = min_updated_at,
						USERELATIONSHIP(
							'Customer Measures'[fk_dim_billing_agreements_previous_version],
							'Billing Agreements'[pk_dim_billing_agreements]
						),
						USERELATIONSHIP(
							'Customer Measures'[fk_dim_preference_combinations_previous_version],
							'Preference Combinations'[pk_dim_preference_combinations]
						),
						'Billing Agreements'[Billing Agreement Status] = "Active"
					)

				VAR CountEnd =
					CALCULATE(
						COUNTROWS('Customer Measures'),
						'Customer Measures'[has_updated_status]=TRUE(),
						'Customer Measures'[updated_at] = max_updated_at,
						'Billing Agreements'[Billing Agreement Status] <> "Active"
					)

				RETURN
					IF(CountStart>0 && CountEnd>0, 1, 0)
			)
		formatString: #,0
		displayFolder: Active Subscribers
		lineageTag: a950a2a5-a013-47d2-b69e-01e8337bf788

	/// Number of subscribers changing status from active to another status in the same period last year.
	measure 'Number of Subscribers Changed from Active (PY)' =
			CALCULATE(
				[Number of Subscribers Changed from Active],
				'Time Intelligence'[Time Calculation]="PY"
			)
		formatString: #,0
		displayFolder: Active Subscribers

	/// Difference between number of subscribers changing status from active to another status
	/// in the current period and the same period previous year.
	measure 'Number of Subscribers Changed from Active (Diff PY)' =
			CALCULATE(
				[Number of Subscribers Changed from Active],
				'Time Intelligence'[Time Calculation]="Diff PY"
			)
		isHidden
		formatString: #,0
		displayFolder: Active Subscribers

	/// % change in number of subscribers changing status from active to another status
	/// comparing current period to same period last year
	measure 'Number of Subscribers Changed from Active (YOY%)' =
			CALCULATE(
				[Number of Subscribers Changed from Active],
				'Time Intelligence'[Time Calculation]="YOY%"
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Active Subscribers

	/// Cumulative sum of number of subscribers changing status from active to another status
	/// from the beginning of the year (year-to-date)
	measure 'Number of Subscribers Changed from Active (YTD)' =
			CALCULATE(
				[Number of Subscribers Changed from Active],
				'Time Intelligence'[Time Calculation]="YTD"
			)
		isHidden
		formatString: #,0
		displayFolder: Active Subscribers

	/// Cumulative sum of number of subscribers changing status from active to another status
	/// from the beginning of the year up to the current period
	/// for the same period in the previous year (Previous Year to Date).
	measure 'Number of Subscribers Changed from Active (PYTD)' =
			CALCULATE(
				[Number of Subscribers Changed from Active],
				'Time Intelligence'[Time Calculation]="PYTD"
			)
		isHidden
		formatString: #,0
		displayFolder: Active Subscribers

	/// Number of subscribers changed to active from another status during the selected period.
	/// It will count number of subscribers that was not in a active state at the beginning of the selected period
	/// but was active at the end of the selected period.
	measure 'Number of Subscribers Changed to Active' =
			SUMX(
				VALUES('Billing Agreements'[Agreement Id]),

				VAR min_updated_at = CALCULATE(
					MIN('Customer Measures'[updated_at]),
					'Customer Measures'[has_updated_status]=TRUE(),
					ALL('Customer Measures'[updated_at]),
					'Customer Measures'[updated_at]>MIN('Dates'[Date])
				)

				VAR max_updated_at = CALCULATE(
					MAX('Customer Measures'[updated_at]),
					'Customer Measures'[has_updated_status]=TRUE(),
					ALL('Customer Measures'[updated_at]),
					'Customer Measures'[updated_at]<=MAX('Dates'[Date])
				)

				VAR CountStart =
					CALCULATE(
						COUNTROWS('Customer Measures'),
						'Customer Measures'[has_updated_status]=TRUE(),
						'Customer Measures'[updated_at] = min_updated_at,
						USERELATIONSHIP(
							'Customer Measures'[fk_dim_billing_agreements_previous_version],
							'Billing Agreements'[pk_dim_billing_agreements]
						),
						USERELATIONSHIP(
							'Customer Measures'[fk_dim_preference_combinations_previous_version],
							'Preference Combinations'[pk_dim_preference_combinations]
						),
						'Billing Agreements'[Billing Agreement Status] <> "Active"
					)

				VAR CountEnd =
					CALCULATE(
						COUNTROWS('Customer Measures'),
						'Customer Measures'[has_updated_status]=TRUE(),
						'Customer Measures'[updated_at] = max_updated_at,
						'Billing Agreements'[Billing Agreement Status] = "Active"
					)

				RETURN
					IF(CountStart>0 && CountEnd>0, 1, 0)
			)
		formatString: #,0
		displayFolder: Active Subscribers
		lineageTag: 60ba4403-dc9a-4221-b046-d3dea3afa7bb

	/// Number of subscribers changes their status to active in the same period previous year.
	measure 'Number of Subscribers Changed to Active (PY)' =
			CALCULATE(
				[Number of Subscribers Changed to Active],
				'Time Intelligence'[Time Calculation]="PY"
			)
		formatString: #,0
		displayFolder: Active Subscribers

	/// Difference between number of subscribers changing status to active
	/// in the current period and the same period previous year.
	measure 'Number of Subscribers Changed to Active (Diff PY)' =
			CALCULATE(
				[Number of Subscribers Changed to Active],
				'Time Intelligence'[Time Calculation]="Diff PY"
			)
		isHidden
		formatString: #,0
		displayFolder: Active Subscribers

	/// % change in number of subscribers changing status to active
	/// comparing current period to same period last year
	measure 'Number of Subscribers Changed to Active (YOY%)' =
			CALCULATE(
				[Number of Subscribers Changed to Active],
				'Time Intelligence'[Time Calculation]="YOY%"
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Active Subscribers

	/// Cumulative sum of number of subscribers changing status to active
	/// from the beginning of the year (year-to-date)
	measure 'Number of Subscribers Changed to Active (YTD)' =
			CALCULATE(
				[Number of Subscribers Changed to Active],
				'Time Intelligence'[Time Calculation]="YTD"
			)
		isHidden
		formatString: #,0
		displayFolder: Active Subscribers

	/// Cumulative sum of number of subscribers changing status to active
	/// from the beginning of the year up to the current period
	/// for the same period in the previous year (Previous Year to Date).
	measure 'Number of Subscribers Changed to Active (PYTD)' =
			CALCULATE(
				[Number of Subscribers Changed to Active],
				'Time Intelligence'[Time Calculation]="PYTD"
			)
		isHidden
		formatString: #,0
		displayFolder: Active Subscribers

	/// Number of customers who have swapped at least once during the selected period.
	/// To see the definition of a swap, see the measure 'Number of Orders with Swaps'.
	/// If the customer switched out dishes in a week, but never placed the order for the week, it will not be counted as a swap.
	measure 'Number of Swapping Customers' =
						CALCULATE(
			    			[Number of Ordering Customers],
			    			FILTER(
			    			    SELECTCOLUMNS('Billing Agreements',[Agreement Id]),
			    			    'Order Measures'[Number of Orders with Swaps] > 0
			    			)
						)
		formatString: #,0
		displayFolder: Swapping Customers
		lineageTag: ea08cc3e-e123-4ca0-bdca-efbdee4c4503

	/// Number of swapping customers in the same period last year.
	/// 2024 is the first year with available data for this measure.
	/// The data points from 2024 is not 100% reliable, but from 2025 an onwards it is reliable.
	measure 'Number of Swapping Customers (PY)' =
			CALCULATE(
				[Number of Swapping Customers],
				'Time Intelligence'[Time Calculation]="PY"
			)
		formatString: #,0
		displayFolder: Swapping Customers

	/// Difference between number of customers making swaps
	/// in the current year and the same period previous year.
	measure 'Number of Swapping Customers (Diff PY)' =
			CALCULATE(
				[Number of Swapping Customers],
				'Time Intelligence'[Time Calculation]="Diff PY"
			)
		isHidden
		formatString: #,0
		displayFolder: Swapping Customers

	/// % change in number of swapping customers
	/// comparing current period to same period last year
	measure 'Number of Swapping Customers (YOY%)' =
			CALCULATE(
				[Number of Swapping Customers],
				'Time Intelligence'[Time Calculation]="YOY%"
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Swapping Customers

	/// Cumulative sum of number of swapping customers changing status to active
	/// from the beginning of the year (year-to-date)
	measure 'Number of Swapping Customers (YTD)' =
			CALCULATE(
				[Number of Swapping Customers],
				'Time Intelligence'[Time Calculation]="YTD"
			)
		isHidden
		formatString: #,0
		displayFolder: Swapping Customers

	/// Cumulative sum of number of swapping customers from the beginning of the year up to the current period
	/// for the same period in the previous year (Previous Year to Date).
	measure 'Number of Swapping Customers (PYTD)' =
			CALCULATE(
				[Number of Swapping Customers],
				'Time Intelligence'[Time Calculation]="PYTD"
			)
		isHidden
		formatString: #,0
		displayFolder: Swapping Customers

	/// Number of upgrades in the loyalty program. Measure is calculated here but displayed under 'Loyalty Measures'.
	measure 'Number of Loyalty Upgrades' =
			CALCULATE(
				DISTINCTCOUNT('Customer Measures'[billing_agreement_id]),
				'Customer Measures'[has_upgraded_loyalty_level]
			)
		isHidden
		formatString: #,0
		lineageTag: number-of-upgrades

	/// Number of downgrades in the loyalty program. Measure is calculated here but displayed under 'Loyalty Measures'.
	measure 'Number of Loyalty Downgrades' =
			CALCULATE(
				DISTINCTCOUNT('Customer Measures'[billing_agreement_id]),
				'Customer Measures'[has_downgraded_loyalty_level]
			)
		isHidden
		formatString: #,0
		lineageTag: number-of-downgrades

	/// The number of customers with an order in the selected period
	measure 'Number of Ordering Customers' =
			CALCULATE(
				DISTINCTCOUNTNOBLANK('Order Measures'[billing_agreement_id]),
				'Order Types'[Order Type Name] IN {"Recurring", "Order After Registration", "Orders After Cutoff", "Daily Direct Order", "Campaign"},
				'Order Statuses'[Order Status Name] IN {"Finished", "Processing"},
				USERELATIONSHIP(
					'Bridge Billing Agreements Subscribed Products'[fk_dim_billing_agreements],
					'Billing Agreements Deviation'[pk_dim_billing_agreements]
				),
				CROSSFILTER(
					'Bridge Billing Agreements Subscribed Products'[fk_dim_billing_agreements],
					'Billing Agreements'[pk_dim_billing_agreements],
					None
				)
			)
		formatString: #,0
		displayFolder: Ordering Customers
		lineageTag: 3571b433-1c30-49d4-9a71-58d46e446c50

	/// Number of customers who have placed an order in the same period last year.
	measure 'Number of Ordering Customers (PY)' =
			CALCULATE(
				[Number of Ordering Customers],
				'Time Intelligence'[Time Calculation]="PY"
			)
		formatString: #,0
		displayFolder: Ordering Customers

	/// % change in number of ordering customers
	/// comparing current period to same period last year
	/// (CY-PY)/PY
	measure 'Number of Ordering Customers (YOY%)' =
			CALCULATE(
				[Number of Ordering Customers],
				'Time Intelligence'[Time Calculation]="YOY%"
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Ordering Customers

	/// Number of customers (with at least one order) who have had fewer than x orders, in the selected period.
	/// x is by default set to 4, but can be changed to any number, using the parameter "(Param) Number of Orders per Customer Target"
	measure 'Number of Customers with Fewer than X Orders' =
			CALCULATE(
				[Number of Ordering Customers],
				FILTER(
					SELECTCOLUMNS('Billing Agreements',[Agreement Id]),
					[Number of Orders] < '(Param) Number of Orders per Customer Target'[Number of Orders per Customer Target Value]
				)
			)
		formatString: #,0
		displayFolder: Ordering Customers

	/// Number of customers who have had x or more orders in the selected period.
	/// x is by default set to 4, but can be changed to any number, using the parameter "(Param) Number of Orders per Customer Target"
	measure 'Number of Customers with X or More Orders' =
			CALCULATE(
				[Number of Ordering Customers],
				FILTER(
					SELECTCOLUMNS('Billing Agreements',[Agreement Id]),
					[Number of Orders] >= '(Param) Number of Orders per Customer Target'[Number of Orders per Customer Target Value]
				)
			)
		formatString: #,0
		displayFolder: Ordering Customers

	/// Share of customers who have had fewer than x orders in the selected period.
	/// x is by default set to 4, but can be changed to any number, using the parameter "(Param) Number of Orders per Customer Target"
	measure 'Share of Customers with Fewer than X Orders' =
			DIVIDE(
				[Number of Customers with Fewer than X Orders],
				[Number of Ordering Customers],
				BLANK()
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Ordering Customers

	/// Share of customers who have had x or more orders in the selected period.
	/// x is by default set to 4, but can be changed to any number, using the parameter "(Param) Number of Orders per Customer Target"
	measure 'Share of Customers with X or More Orders' =
			DIVIDE(
				[Number of Customers with X or More Orders],
				[Number of Ordering Customers],
				BLANK()
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Ordering Customers

	/// Number of Active Subscribers that have a grocery subscription
	measure 'Number of Active Grocery Subscribers' =
			CALCULATE(
				[Number of Active Subscribers],
				'Billing Agreements'[has_grocery_subscription]=true
			)
		formatString: #,0
		displayFolder: Grocery Subscribers

	/// Number of Active Subscribers that have a grocery subscription, same period last year.
	measure 'Number of Active Grocery Subscribers (PY)' =
			CALCULATE(
				[Number of Active Grocery Subscribers],
				'Time Intelligence'[Time Calculation]="PY"
			)

		formatString: #,0
		displayFolder: Grocery Subscribers

	/// % change in number of active grocery subscribers
	/// comparing current period to same period last year
	measure 'Number of Active Grocery Subscribers (YOY%)' =
			CALCULATE(
				[Number of Active Grocery Subscribers],
				'Time Intelligence'[Time Calculation]="YOY%"
			)

		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Grocery Subscribers

	/// Number of customers who are having a grocery subscription and have placed an order in the selected period.
	/// If the customer removed subscribed product from their order, they would still be counted in this measure.
	/// To only look at customers that ordered a grocery they subscribed to,
	/// look at [Order Measures] and [Number of Orders with Subscribed Groceries].
	measure 'Number of Ordering Grocery Subscribers' =
			CALCULATE(
				[Number of Ordering Customers],
				'Billing Agreements'[has_grocery_subscription]=true
			)
		formatString: #,0
		displayFolder: Grocery Subscribers

	/// Number of ordering grocery subscribers in the same period last year.
	measure 'Number of Ordering Grocery Subscribers (PY)' =
			CALCULATE(
				[Number of Ordering Grocery Subscribers],
				'Time Intelligence'[Time Calculation]="PY"
			)
		formatString: #,0
		displayFolder: Grocery Subscribers

	/// % change in number of ordering grocery subscribers
	/// comparing current period to same period last year
	/// (CY-PY)/PY
	measure 'Number of Ordering Grocery Subscribers (YOY%)' =
			CALCULATE(
				[Number of Ordering Customers],
				'Time Intelligence'[Time Calculation]="YOY%"
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Grocery Subscribers


	/// Number of Grocery Subscribers including all selected agreement statuses (also included deleted).
	/// This should be used together with the [Billing Agreement Status] filter in the [Billing Agreements] table.
	measure 'Number of Grocery Subscribers All Statuses' =
            CALCULATE(
                [Number of Subscribers All Statuses],
                'Billing Agreements'[has_grocery_subscription]=true
            )
		formatString: #,0
		displayFolder: Grocery Subscribers

	/// Number of Subscribers (all selected statuses) that have a grocery subscription, same period last year.
	measure 'Number of Grocery Subscribers All Statuses (PY)' =
			CALCULATE(
				[Number of Grocery Subscribers All Statuses],
				'Time Intelligence'[Time Calculation]="PY"
			)

		formatString: #,0
		displayFolder: Grocery Subscribers

	/// % change in number of grocery subscribers (all selected statuses)
	/// comparing current period to same period last year
	measure 'Number of Grocery Subscribers All Statuses (YOY%)' =
			CALCULATE(
				[Number of Grocery Subscribers All Statuses],
				'Time Intelligence'[Time Calculation]="YOY%"
			)

		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Grocery Subscribers

	column fk_dim_dates
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: 2339b5f4-23a1-4976-8c4e-1118b81acc5d
		summarizeBy: none
		sourceColumn: fk_dim_dates

	column fk_dim_dates_first_menu_week
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: 4604683a-76ce-46e0-aa4e-0e209dce255a
		summarizeBy: none
		sourceColumn: fk_dim_dates_first_menu_week

	column fk_dim_billing_agreements
		dataType: string
		isHidden
		lineageTag: 872cd44f-1a3c-4389-a68a-c9dbafb4c1f1
		summarizeBy: none
		sourceColumn: fk_dim_billing_agreements

	column fk_dim_companies
		dataType: string
		isHidden
		lineageTag: af0a4864-3640-4f3e-9625-8a4056012709
		summarizeBy: none
		sourceColumn: fk_dim_companies

	column fk_dim_periods_since_first_order
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: 397e0242-a70c-41bd-b502-9d0b824930ef
		summarizeBy: none
		sourceColumn: fk_dim_periods_since_first_order

	column fk_dim_billing_agreements_previous_version
		dataType: string
		isHidden
		lineageTag: 199a8f38-e0f7-4d40-b339-3d5614ef0303
		summarizeBy: none
		sourceColumn: fk_dim_billing_agreements_previous_version

	/// Primary key for the preference combinations dimension.
	column fk_dim_preference_combinations
		dataType: string
		isHidden
		isAvailableInMdx: false
		summarizeBy: none
		sourceColumn: fk_dim_preference_combinations

	/// Primary key for the preference combinations dimension.
	column fk_dim_preference_combinations_previous_version
		dataType: string
		isHidden
		isAvailableInMdx: false
		summarizeBy: none
		sourceColumn: fk_dim_preference_combinations_previous_version

	column is_signup
		dataType: boolean
		isHidden
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 547b23be-2626-4226-ab5a-4d1a40d602bf
		summarizeBy: none
		sourceColumn: is_signup

		annotation SummarizationSetBy = Automatic

	column has_first_delivery
		dataType: boolean
		isHidden
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: d2254bd2-67d7-4983-a45b-a51d1bb81f99
		summarizeBy: none
		sourceColumn: has_first_delivery

	column updated_at
		dataType: dateTime
		isHidden
		formatString: General Date
		lineageTag: 4ce62ea5-cd85-4b36-95b5-de4ab6e27869
		summarizeBy: none
		sourceColumn: updated_at

		annotation SummarizationSetBy = Automatic

	column has_updated_preferences
		dataType: boolean
		isHidden
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 7b13bc7d-37e2-48ed-ba57-bbcca1f5e09a
		summarizeBy: none
		sourceColumn: has_updated_preferences

		annotation SummarizationSetBy = Automatic

	column has_updated_subscribed_products
		dataType: boolean
		isHidden
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 4270fc48-232a-4ab6-b4f9-000fe8b8c833
		summarizeBy: none
		sourceColumn: has_updated_subscribed_products

		annotation SummarizationSetBy = Automatic

	column has_updated_status
		dataType: boolean
		isHidden
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 8022d5db-8215-48d5-a56a-d9fe89f3544c
		summarizeBy: none
		sourceColumn: has_updated_status

		annotation SummarizationSetBy = Automatic

	column has_updated_onesub_flag
		dataType: boolean
		isHidden
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 78aa83be-2227-4eea-ab1c-5de847a692e1
		summarizeBy: none
		sourceColumn: has_updated_onesub_flag

		annotation SummarizationSetBy = Automatic

	column billing_agreement_id
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: a7cdedca-7809-42e2-b766-52f21fa31e79
		summarizeBy: none
		sourceColumn: billing_agreement_id

	column has_updated_loyalty_level
		dataType: boolean
		isHidden
		formatString: """TRUE"";""TRUE"";""FALSE"""
		lineageTag: 7b2d0a2b-dfd4-41f1-90d2-f06ad8453859
		summarizeBy: none
		sourceColumn: has_updated_loyalty_level

	column has_upgraded_loyalty_level
		dataType: boolean
		isHidden
		formatString: 0
		summarizeBy: none
		sourceColumn: has_upgraded_loyalty_level

	column has_downgraded_loyalty_level
		dataType: boolean
		isHidden
		formatString: 0
		summarizeBy: none
		sourceColumn: has_downgraded_loyalty_level

	column fk_dim_loyalty_seasons
		dataType: string
		isHidden
		lineageTag: c5e9ea67-ece4-4ed6-99d9-5f06f5540a7a
		summarizeBy: none
		sourceColumn: fk_dim_loyalty_seasons

	partition 'Customer Measures' = m
		mode: directQuery
		source =
				let
					Source = Databricks.Catalogs(Host, HttpPath, [Catalog=null, Database=null, EnableAutomaticProxyDiscovery=null]),
					catalog_Database = Source{[Name=Catalog,Kind="Database"]}[Data],
					gold_Schema = catalog_Database{[Name=Schema,Kind="Schema"]}[Data],
					fact_billing_agreement_updates_Table = gold_Schema{[Name="fact_billing_agreement_updates",Kind="Table"]}[Data]
				in
					fact_billing_agreement_updates_Table
