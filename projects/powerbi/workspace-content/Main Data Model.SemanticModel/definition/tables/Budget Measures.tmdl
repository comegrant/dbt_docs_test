table 'Budget Measures'
    lineageTag: Budget-Measures-Table

    /// Budgeted Average Transaction Value for Orders Ex Vat. 
    /// The number is gross, meaning that it only includes order lines of type 
    /// debit and transportation and not order lines such as discount or credit.
    measure 'ATV Gross Ex Vat (Budget)' = AVERAGE('Budget Measures'[ATV Gross])
        formatString: #,0
  
    /// The number of budgeted orders.
    measure 'Number of Orders (Budget)' = SUM('Budget Measures'[Number Of Orders])
        formatString: #,0

    /// Budgeted gross revenue from orders ex vat.
    /// Is calculated by multiplying Number of Orders with ATV.
    /// The number is gross, meaning that it only includes order lines of type 
    /// debit and transportation and not order lines such as discount or credit.
    measure 'Order Value Gross Ex Vat (Budget)' = 'Budget Measures'[ATV Gross Budget (Budget)] * 'Budget Measures'[Number Of Budget Orders (Budget)]
        formatString: #,0

    /// Absolute increase/decrease in sales compared to budgeted sales
    measure 'Number of Orders (vs Budget)' = 'Budget Measures'[Number of Orders (Budget)] - 'Order Measures'[Number of Orders]
        formatString: #,0.00
        isHidden

    /// Relative increase/decrease in sales compared to budgeted sales
    measure 'Number of Orders (vs Budget %)' = DIVIDE('Budget Measures'[Number of Orders (vs Budget)],'Budget Measures'[Number of Orders (Budget)])
        formatString: 0.00%;-0.00%;0.00%
        isHidden

    /// Absolute increase/decrease in sales revenue compared to budgeted sales revenue
    measure 'Order Value Gross Ex Vat (vs Budget)' = 'Budget Measures'[Order Value Gross Ex Vat (Budget)] - 'Order Measures'[Order Value Gross Ex Vat]
        formatString: #,0.00
        isHidden

    /// Relative increase/decrease in sales revenue compared to budgeted sales revenue
    measure 'Order Value Gross Ex Vat (vs Budget %)' = DIVIDE('Budget Measures'[Order Value Gross Ex Vat (vs Budget)],'Budget Measures'[Order Value Gross Ex Vat (Budget)])
        formatString: 0.00%;-0.00%;0.00%
        isHidden

    /// Absolute increase/decrease in ATV compared to budgeted ATV
    measure 'ATV Gross Ex Vat Ex Vat (vs Budget)' = 'Budget Measures'[ATV Gross Ex Vat (Budget)] - 'Order Measures'[ATV Gross Ex Vat]
        formatString: #,0.00
        isHidden

    /// Relative increase/decrease in ATV compared to budgeted ATV
    measure 'ATV Gross Ex Vat (vs Budget %)' = DIVIDE('Budget Measures'[ATV Gross Ex Vat (vs Budget)],'Budget Measures'[ATV Gross Ex Vat (Budget)])
        formatString: 0.00%;-0.00%;0.00%
        isHidden

    /// The primary key of the fact_budget table
    column pk_fact_budget
        dataType: string
        isHidden
        isAvailableInMdx: false
        summarizeBy: none
        sourceColumn: pk_fact_budget

    /// Unique id for each entry in the budget. 
    /// Granularity is company, financial week and customer segment
    column budget_id
        dataType: string
        isHidden
        isAvailableInMdx: false
        summarizeBy: none
        sourceColumn: budget_id

    /// The corresponding id to which type of budget process the data belongs to (F1, F2, F3, Budget)
    column budget_type_id
        dataType: string
        isHidden
        isAvailableInMdx: false
        summarizeBy: none
        sourceColumn: budget_type_id

    /// The corresponding id to which segment the data belongs to
    column budget_segment_id
        dataType: string
        isHidden
        isAvailableInMdx: false
        summarizeBy: none
        sourceColumn: budget_segment_id

    /// The corresponding id to which company the data belongs to
    column company_id
        dataType: string
        isHidden
        isAvailableInMdx: false
        summarizeBy: none
        sourceColumn: company_id

    /// The year corresponding to the Monday of the same week. 
    /// For example, January 1st, 2025, falls on a Wednesday, 
    /// and the Monday of that week is December 30th, 2024. 
    /// Therefore, the financial quarter for January 1st, 2025, is 4, 
    /// as it follows the quarter of the corresponding Monday.
    column 'Financial Year'
        isHidden
        dataType: int64
        isAvailableInMdx: false
        formatString: 0
        summarizeBy: none
        sourceColumn: financial_year

    /// The week number of the date, adjusted to align with the Monday of the corresponding week. 
    /// A financial week 53 is introduced when necessary to replace ISO week 1 of the following year.   
    column 'Financial Week'
        isHidden
        dataType: int64
        isAvailableInMdx: false
        formatString: 0
        summarizeBy: none
        sourceColumn: financial_week

    /// The gross atv per week and customer segment
    column 'ATV Gross'
        dataType: double
        isHidden
        isAvailableInMdx: false
        summarizeBy: none
        sourceColumn: atv_gross

    /// The number of orders per week per customer segment
    column 'Number Of Orders'
        dataType: int64
        isHidden
        isAvailableInMdx: false
        formatString: 0
        summarizeBy: none
        sourceColumn: number_of_orders

    /// Foreign key connecting the budget dates to dim_dates
    column fk_dim_dates
        dataType: int64
        isHidden
        isAvailableInMdx: false
        formatString: 0
        summarizeBy: none
        sourceColumn: fk_dim_dates

    /// Foreign key connecting the companies table to the budget table
    column fk_dim_companies
        dataType: string
        isHidden
        isAvailableInMdx: false
        summarizeBy: none
        sourceColumn: fk_dim_companies

    /// Foreign key connecting the budget table to the budget_type table
    column fk_dim_budget_types
        dataType: string
        isHidden
        isAvailableInMdx: false
        summarizeBy: none
        sourceColumn: fk_dim_budget_types

    partition 'Budget Measures' = m
        mode: directQuery
        source =
                let
                    Source = Databricks.Catalogs(Host, HttpPath, [Catalog=null, Database=null, EnableAutomaticProxyDiscovery=null]),
                    catalog_Database = Source{[Name=Catalog,Kind="Database"]}[Data],
                    gold_Schema = catalog_Database{[Name=Schema,Kind="Schema"]}[Data],
                    fact_budget_Table = gold_Schema{[Name="fact_budget",Kind="Table"]}[Data]
                in
                    fact_budget_Table
