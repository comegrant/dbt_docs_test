# DOCUMENTATION: https://docs.getdbt.com/reference/model-properties

version: 2

models:
  - name: estimations_log
    description: Showing what would have been ordered for the next 14 weeks if the cutoff was when the estimation was generated

    columns:
      - name: pk_estimations_log
        description: "{{ doc('column__pk_estimations_log') }}"
        data_type: string
        data_tests:
          - not_null
          - unique

      - name: menu_year
        description: "{{doc('column__menu_year')}}"
        data_type: int - not_null

      - name: menu_week
        description: "{{doc('column__menu_week')}}"
        data_type: int

      - name: company_id
        description: "{{doc('column__company_id')}}"
        data_type: string

      - name: product_variation_id
        description: "{{doc('column__product_variation_id')}}"
        data_type: string

      - name: billing_agreement_basket_deviation_origin_id
        description: "{{doc('column__billing_agreement_basket_deviation_origin_id')}}"
        data_type: string
        data_tests:
          - required_values:
              value_list:
                - '{{ var("normal_origin_id") }}'
                - '{{ var("preselector_origin_id") }}'
                - 00000000-0000-0000-0000-000000000000 # Not deviation

              config:
                where: 'estimation_generated_at >= date_trunc("day",date_add(hour,-1,current_timestamp))'

      - name: product_variation_quantity
        description: "{{doc('column__product_variation_quantity')}}"
        data_type: int

      - name: estimation_generated_at
        description: "{{ doc('column__estimation_generated_at') }}"
        data_type: timestamp

      - name: source
        description: "{{ doc('column__source_estimations_log') }}"
        data_type: int


  - name: ingredients_aggregated_by_recipe_portion_id
    description: "Table with aggregated ingredient information for recipe portion ids"

    columns:
      - name: recipe_portion_id
        description: "{{ doc('column__recipe_portion_id') }}"
        data_type: int

      - name: language_id
        description: "{{ doc('column__language_id') }}"
        data_type: int

      - name: number_generic_ingredients
        description: "{{ doc('column__number_generic_ingredients') }}"
        data_type: int

      - name: generic_ingredient_id_list
        description: "{{ doc('column__generic_ingredient_id_list_per_recipe_portion') }}"
        data_type: string

      - name: generic_ingredient_name_list
        description: "{{ doc('column__generic_ingredient_name_list_per_recipe_portion') }}"
        data_type: string

      - name: ingredient_id_list
        description: "{{ doc('column__ingredient_id_list_per_recipe_portion') }}"
        data_type: string

      - name: ingredient_category_id_list
        description: "{{ doc('column__ingredient_category_id_list_per_recipe_portion') }}"
        data_type: string



  - name: main_recipe_last_menu_year_week
    description: "Table containing the main recipe id and the most recent menu year, week for a billing agreement and company"

    columns:
      - name: billing_agreement_id
        description: "{{ doc('column__billing_agreement_id') }}"
        data_type: int

      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string

      - name: main_recipe_id
        description: "{{ doc('column__main_recipe_id') }}"
        data_type: int

      - name: most_recent_menu_year_week
        description: "{{ doc('column__most_recent_menu_year_week_main_recipe') }}"
        data_type: int

  - name: preselector_recipes
    description: "Table containing the weekly preselected recipes for billing agreement ids"

    columns:
      - name: menu_week_monday_date
        description: "{{ doc('column__menu_week_monday_date') }}"
        data_type: date

      - name: menu_week
        description: "{{ doc('column__menu_week') }}"
        data_type: int

      - name: menu_year
        description: "{{ doc('column__menu_year') }}"
        data_type: int

      - name: billing_agreement_basket_id
        description: "{{ doc('column__billing_agreement_basket_id') }}"
        data_type: string

      - name: billing_agreement_id
        description: "{{ doc('column__billing_agreement_id') }}"
        data_type: int

      - name: product_variation_id
        description: "{{ doc('column__product_variation_id') }}"
        data_type: string

      - name: deviation_created_at
        description: "{{ doc('column__source_created_at') }}"
        data_type: timestamp

      - name: deviation_created_by
        description: "{{ doc('column__source_created_by') }}"
        data_type: string

      - name: recipe_id
        description: "{{ doc('column__recipe_id') }}"
        data_type: int


  - name: recipe_ingredients
    description: "Table containing ingredient information for recipe portion ids"

    columns:
      - name: recipe_portion_id
        description: "{{ doc('column__recipe_portion_id') }}"
        data_type: int

      - name: generic_ingredient_id
        description: "{{ doc('column__generic_ingredient_id') }}"
        data_type: int

      - name: language_id
        description: "{{ doc('column__language_id') }}"
        data_type: int

      - name: generic_ingredient_name
        description: "{{ doc('column__generic_ingredient_name') }}"
        data_type: string

      - name: order_ingredient_id
        description: "{{ doc('column__order_ingredient_id') }}"
        data_type: int

      - name: ingredient_id
        description: "{{ doc('column__ingredient_id') }}"
        data_type: int

      - name: ingredient_category_id
        description: "{{ doc('column__ingredient_category_id') }}"
        data_type: int

      - name: is_main_carbohydrate
        description: "{{ doc('column__is_main_carbohydrate') }}"
        data_type: boolean

      - name: is_main_protein
        description: "{{ doc('column__is_main_protein') }}"
        data_type: boolean


  - name: active_basket_deviations_recent_weeks
    description: "Table containing current active basket deviations for recent and all future menu weeks"
    meta:
      owners:
        - "matsmoll"
        - "stephen"

    columns:
      - name: billing_agreement_id
        description: "{{ doc('column__billing_agreement_id') }}"
        data_type: int
        data_tests:
          - not_null

      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null

      - name: menu_week_monday_date
        description: "{{ doc('column__menu_week_monday_date') }}"
        data_type: date
        data_tests:
          - not_null

      - name: menu_week
        description: "{{ doc('column__menu_week') }}"
        data_type: int
        data_tests:
          - not_null

      - name: menu_year
        description: "{{ doc('column__menu_year') }}"
        data_type: int
        data_tests:
          - not_null

      - name: main_recipe_id
        description: "{{ doc('column__main_recipe_id') }}"
        data_type: int
        # Removing tests due to issue on 9th May 2025
        #data_tests:
        #  - not_null

      - name: recipe_name
        description: "{{ doc('column__recipe_name') }}"
        data_type: string
        # Removing tests due to issue on 9th May 2025
        #data_tests:
        #  - not_null

      - name: deviation_created_at
        description: "{{ doc('column__source_created_at') }}"
        data_type: timestamp
        data_tests:
          - not_null

  - name: menu_feedback_recipe_preferences
    description: "Table containing recipe preferences for menu feedback"

    columns:
      - name: main_recipe_id
        description: "{{ doc('column__main_recipe_id') }}"
        data_type: int
        data_tests:
          - not_null

      - name: recipe_main_ingredient_id
        description: "{{ doc('column__recipe_main_ingredient_id') }}"
        data_type: int

      - name: negative_taste_preferences
        description: "{{ doc('column__taste_name_combinations_including_allergens') }}"
        data_type: string

      - name: negative_taste_preferences_ids
        description: "{{ doc('column__taste_preferences_including_allergens_id_list') }}"
        data_type: array

  - name: menu_feedback_agreement_preferences_aggregated
    description: "Table containing aggregated agreement preferences for menu feedback"

    columns:
      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null

      - name: negative_taste_preference_combo_id
        description: "{{ doc('column__negative_taste_preference_combo_id') }}"
        data_type: string
        data_tests:
          - not_null

      - name: negative_taste_preferences
        description: "{{ doc('column__taste_name_combinations_including_allergens') }}"
        data_type: string

      - name: negative_taste_preferences_ids
        description: "{{ doc('column__taste_preferences_including_allergens_id_list') }}"
        data_type: array

      - name: number_of_users
        description: "{{ doc('column__menu_feedback_model__column__number_of_users') }}"
        data_type: int

      - name: users_with_1_portions
        description: "{{ doc('column__users_with_1_portions') }}"
        data_type: int

      - name: users_with_2_portions
        description: "{{ doc('column__users_with_2_portions') }}"
        data_type: int

      - name: users_with_3_portions
        description: "{{ doc('column__users_with_3_portions') }}"
        data_type: int

      - name: users_with_4_portions
        description: "{{ doc('column__users_with_4_portions') }}"
        data_type: int

      - name: users_with_5_portions
        description: "{{ doc('column__users_with_5_portions') }}"
        data_type: int

      - name: users_with_6_portions
        description: "{{ doc('column__users_with_6_portions') }}"
        data_type: int


  - name: attribute_scoring_recipes
    description: "Table containing recipe data for attribute scoring project"

    columns:
      - name: fk_dim_companies
        description: "{{ doc('column__pk_dim_companies') }}"
        data_type: string
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_recipes
        description: "{{ doc('column__pk_dim_recipes') }}"
        data_type: string
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_recipes')
              field: pk_dim_recipes

      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null

      - name: language_id
        description: "{{ doc('column__language_id') }}"
        data_type: int
        data_tests:
          - not_null

      - name: recipe_id
        description: "{{ doc('column__recipe_id') }}"
        data_type: int
        data_tests:
          - unique:
              config:
                severity: warn
          - not_null

      - name: recipe_portion_id
        description: "{{ doc('column__recipe_portion_id') }}"
        data_type: int
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: cooking_time_from
        description: "{{ doc('column__cooking_time_from') }}"
        data_type: int

      - name: cooking_time_to
        description: "{{ doc('column__cooking_time_to') }}"
        data_type: int

      - name: cooking_time_mean
        description: "{{ doc('column__cooking_time_mean') }}"
        data_type: int

      - name: recipe_difficulty_level_id
        description: "{{ doc('column__recipe_difficulty_level_id') }}"
        data_type: int

      - name: recipe_main_ingredient_id
        description: "{{ doc('column__recipe_main_ingredient_id') }}"
        data_type: int

      - name: taxonomy_list
        description: "{{ doc('column__taxonomy_list') }}"
        data_type: array

      - name: number_of_taxonomies
        description: "{{ doc('column__number_of_taxonomies') }}"
        data_type: int

      - name: has_chefs_favorite_taxonomy
        description: "{{ doc('column__has_chefs_favorite_taxonomy') }}"
        data_type: boolean

      - name: has_quick_and_easy_taxonomy
        description: "{{ doc('column__has_quick_and_easy_taxonomy') }}"
        data_type: boolean

      - name: has_vegetarian_taxonomy
        description: "{{ doc('column__has_vegetarian_taxonomy') }}"
        data_type: boolean

      - name: has_low_calorie_taxonomy
        description: "{{ doc('column__has_low_calorie_taxonomy') }}"
        data_type: boolean

      - name: has_family_friendly_taxonomy
        description: "{{ doc('column__has_family_friendly_taxonomy') }}"
        data_type: boolean

      - name: ingredient_id_list
        description: "{{ doc('column__ingredient_id_list') }}"
        data_type: array

      - name: number_of_ingredients
        description: "{{ doc('column__number_of_ingredients') }}"
        data_type: int

      - name: recipe_step_id_list
        description: "{{ doc('column__recipe_step_id_list') }}"
        data_type: array

      - name: number_of_recipe_steps
        description: "{{ doc('column__number_of_recipe_steps') }}"
        data_type: int

  - name: recipe_tagging_recipe_nutritional_facts
    description: "Table containing nutritional facts for recipes"

    columns:
      - name: recipe_id
        description: "{{ doc('column__recipe_id') }}"
        data_type: int
        tests:
          - not_null

      - name: recipe_name
        description: "{{ doc('column__recipe_name') }}"
        data_type: string

      - name: recipe_portion_id
        description: "{{ doc('column__recipe_portion_id') }}"
        data_type: int

      - name: language_id
        description: "{{ doc('column__language_id') }}"
        data_type: int

      - name: portion_size
        description: "{{ doc('column__portion_size') }}"
        data_type: int

      - name: protein_gram_per_portion
        description: "{{ doc('column__protein_gram_per_portion') }}"
        data_type: float

      - name: carbs_gram_per_portion
        description: "{{ doc('column__carbs_gram_per_portion') }}"
        data_type: float

      - name: fat_gram_per_portion
        description: "{{ doc('column__fat_gram_per_portion') }}"
        data_type: float

      - name: sat_fat_gram_per_portion
        description: "{{ doc('column__sat_fat_gram_per_portion') }}"
        data_type: float

      - name: sugar_gram_per_portion
        description: "{{ doc('column__sugar_gram_per_portion') }}"
        data_type: float

      - name: sugar_added_gram_per_portion
        description: "{{ doc('column__sugar_added_gram_per_portion') }}"
        data_type: float

      - name: fiber_gram_per_portion
        description: "{{ doc('column__fiber_gram_per_portion') }}"
        data_type: float

      - name: salt_gram_per_portion
        description: "{{ doc('column__salt_gram_per_portion') }}"
        data_type: float

      - name: salt_added_gram_per_portion
        description: "{{ doc('column__salt_added_gram_per_portion') }}"
        data_type: float

      - name: fg_fresh_gram_per_portion
        description: "{{ doc('column__fg_fresh_gram_per_portion') }}"
        data_type: float

      - name: fg_proc_gram_per_portion
        description: "{{ doc('column__fg_proc_gram_per_portion') }}"
        data_type: float

      - name: total_kcal_per_portion
        description: "{{ doc('column__total_kcal_per_portion') }}"
        data_type: float

  - name: recipe_tagging_recipes
    description: "Table containing data for the recipe tagging project"

    columns:
      - name: recipe_id
        description: "{{ doc('column__recipe_id') }}"
        data_type: int

      - name: recipe_name
        description: "{{ doc('column__recipe_name') }}"
        data_type: string

      - name: recipe_main_ingredient_name_local
        description: "{{ doc('column__recipe_main_ingredient_name_local') }}"
        data_type: string

      - name: language_id
        description: "{{ doc('column__language_id') }}"
        data_type: int

      - name: cooking_time_to
        description: "{{ doc('column__cooking_time_to') }}"
        data_type: int

      - name: taxonomy_name_list
        description: "{{ doc('column__taxonomy_list') }}"
        data_type: string

      - name: generic_ingredient_name_list
        description: "{{ doc('column__generic_ingredient_name_list_per_recipe_portion') }}"
        data_type: string

      - name: preference_name_combinations
        description: "{{ doc('column__preference_name_combinations') }}"
        data_type: string

      - name: is_low_calorie
        description: "{{ doc('column__is_low_calorie') }}"
        data_type: boolean

      - name: is_high_fiber
        description: "{{ doc('column__is_high_fiber') }}"
        data_type: boolean

      - name: is_low_fat
        description: "{{ doc('column__is_low_fat') }}"
        data_type: boolean

      - name: is_low_sugar
        description: "{{ doc('column__is_low_sugar') }}"
        data_type: boolean

  - name: preselector_features
    description: "Table containing recipe features for the preselector"

    columns:
      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null

      - name: menu_year
        description: "{{ doc('column__menu_year') }}"
        data_type: int
        data_tests:
          - not_null

      - name: menu_week
        description: "{{ doc('column__menu_week') }}"
        data_type: int
        data_tests:
          - not_null

      - name: main_recipe_id
        description: "{{ doc('column__main_recipe_id') }}"
        data_type: int
        data_tests:
          - not_null

      - name: recipe_id
        description: "{{ doc('column__recipe_id') }}"
        data_type: int
        data_tests:
          - not_null

      - name: recipe_name
        description: "{{ doc('column__recipe_name') }}"
        data_type: string

      - name: recipe_photo
        description: "{{ doc('column__recipe_photo') }}"
        data_type: string

      - name: recipe_main_ingredient_id
        description: "{{ doc('column__recipe_main_ingredient_id') }}"
        data_type: int

      - name: cooking_time_from
        description: "{{ doc('column__cooking_time_from') }}"
        data_type: int

      - name: cooking_time_to
        description: "{{ doc('column__cooking_time_to') }}"
        data_type: int

      - name: taxonomy_id_list
        description: "{{ doc('column__taxonomy_id_list') }}"
        data_type: array<int>

      - name: cumulated_times_on_menu
        description: "{{ doc('column__cumulated_times_on_menu') }}"
        data_type: int
        data_tests:
          - not_null

      - name: cumulated_number_of_ratings
        description: "{{ doc('column__cumulated_number_of_ratings') }}"
        data_type: int

      - name: cumulated_average_rating
        description: "{{ doc('column__cumulated_average_rating') }}"
        data_type: float


  - name: tofu_order_history
    description: "Table containing total order and flex ordershistory for the tofu model"

    columns:
      - name: menu_year
        description: "{{ doc('column__menu_year') }}"
        data_type: int
        data_tests:
          - not_null

      - name: menu_week
        description: "{{ doc('column__menu_week') }}"
        data_type: int
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1
              max_value: 53
              inclusive: true

      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null

      - name: total_orders
        description: "{{ doc('column__total_orders') }}"
        data_type: int
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0

      - name: total_orders_with_flex
        description: "{{ doc('column__total_orders_with_flex') }}"
        data_type: int
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0

      - name: flex_share
        description: "{{ doc('column__flex_share') }}"
        data_type: float
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
              inclusive: true


  - name: tofu_latest_forecasts
    description: "the latest orders forecasts to be compared with the new tofu forecasts"

    columns:
      - name: forecast_job_run_id
        description: "{{ doc('column__forecast_job_run_id') }}"
        data_type: string
        data_tests:
          - not_null

      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null

      - name: menu_year
        description: "{{ doc('column__menu_year') }}"
        data_type: int
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 2000

      - name: menu_week
        description: "{{ doc('column__menu_week') }}"
        data_type: int
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 1
              max_value: 53
              inclusive: true

      - name: forecast_total_orders
        description: "{{ doc('column__forecast_total_orders') }}"
        data_type: float
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0

      - name: forecast_flex_orders
        description: "{{ doc('column__forecast_flex_orders') }}"
        data_type: int
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0


      - name: forecast_flex_share
        description: "{{ doc('column__forecast_flex_share') }}"
        data_type: float
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
              inclusive: true

  - name: tofu_estimations
    description: "Table containing estimations for the tofu model"

    columns:
      - name: menu_year
        description: "{{ doc('column__menu_year') }}"
        data_type: int
        data_tests:
          - not_null
      - name: menu_week
        description: "{{ doc('column__menu_week') }}"
        data_type: int
        data_tests:
          - not_null
      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null
      - name: estimation_generated_at
        description: "{{ doc('column__estimation_generated_at') }}"
        data_type: datetime
        data_tests:
          - not_null
      - name: cutoff_at_local_time
        description: "{{ doc('column__cutoff_at_local_time') }}"
        data_type: datetime
      - name: num_days_before_cutoff
        description: "{{ doc('column__num_days_before_cutoff') }}"
        data_type: int
      - name: total_orders_estimated
        description: "{{ doc('column__total_orders_estimated') }}"
        data_type: int
        data_tests:
          - not_null
      - name: flex_orders_estimated
        description: "{{ doc('column__flex_orders_estimated') }}"
        data_type: int

  - name: reci_pick_all_recipes
    description: "Table containing all recipes for the reci-pick project"

    columns:
      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null

      - name: main_recipe_id
        description: "{{ doc('column__main_recipe_id') }}"
        data_type: int
        data_tests:
          - not_null

      - name: recipe_name
        description: "{{ doc('column__recipe_name') }}"
        data_type: string

      - name: recipe_main_ingredient_name_english
        description: "{{ doc('column__recipe_main_ingredient_name_english') }}"
        data_type: string

      - name: cooking_time_mean
        description: "{{ doc('column__cooking_time_mean') }}"
        data_type: float
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 200.0
              inclusive: true
              config:
                severity: warn

      - name: recipe_difficulty_level_id
        description: "{{ doc('column__recipe_difficulty_level_id') }}"
        data_type: int

      - name: number_of_recipe_steps
        description: "{{ doc('column__number_of_recipe_steps') }}"
        data_type: int
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 50
              inclusive: true
      - name: number_of_taxonomies
        description: "{{ doc('column__number_of_taxonomies') }}"
        data_type: int
      - name: number_of_ingredients
        description: "{{ doc('column__number_of_ingredients') }}"
        data_type: int
      - name: has_chefs_favorite_taxonomy
        description: "{{ doc('column__has_chefs_favorite_taxonomy') }}"
        data_type: int
      - name: has_quick_and_easy_taxonomy
        description: "{{ doc('column__has_quick_and_easy_taxonomy') }}"
        data_type: int
      - name: has_vegetarian_taxonomy
        description: "{{ doc('column__has_vegetarian_taxonomy') }}"
        data_type: int
      - name: has_low_calorie_taxonomy
        description: "{{ doc('column__has_low_calorie_taxonomy') }}"
        data_type: int
      - name: allergen_preference_id_list
        description: "{{ doc('column__allergen_preference_id_list') }}"
        data_type: array
      - name: allergen_name_combinations
        description: "{{ doc('column__allergen_name_combinations') }}"
        data_type: string

  - name: reci_pick_menu_recipes
    description: "Table containing menu recipes for the reci-pick project"

    columns:
      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null
      - name: menu_year
        description: "{{ doc('column__menu_year') }}"
        data_type: int
        data_tests:
          - not_null
      - name: menu_week
        description: "{{ doc('column__menu_week') }}"
        data_type: int
        data_tests:
          - not_null
      - name: menu_yyyyww
        description: "{{ doc('column__menu_yyyyww') }}"
        data_type: int
        data_tests:
          - not_null
      - name: main_recipe_id
        description: "{{ doc('column__main_recipe_id') }}"
        data_type: int
        data_tests:
          - not_null
      - name: product_id
        description: "{{ doc('column__product_id') }}"
        data_type: int
        data_tests:
          - not_null

  - name: reci_pick_order_history
    description: "Table containing recipe order history for the reci-pick project"

    columns:
      - name: pk_fact_orders
        description: "{{ doc('column__pk_fact_orders') }}"
        data_type: string
        data_tests:
          - not_null
      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null
      - name: language_id
        description: "{{ doc('column__language_id') }}"
        data_type: int
        data_tests:
          - not_null
      - name: billing_agreement_id
        description: "{{ doc('column__billing_agreement_id') }}"
        data_type: int
        data_tests:
          - not_null
      - name: menu_year
        description: "{{ doc('column__menu_year') }}"
        data_type: int
        data_tests:
          - not_null
      - name: menu_week
        description: "{{ doc('column__menu_week') }}"
        data_type: int
        data_tests:
          - not_null
      - name: menu_yyyyww
        description: "{{ doc('column__menu_yyyyww') }}"
        data_type: int
        data_tests:
          - not_null
      - name: is_dish
        description: "{{ doc('column__is_dish') }}"
        data_type: boolean
      - name: is_added_dish
        description: "{{ doc('column__is_added_dish') }}"
        data_type: boolean
      - name: is_removed_dish
        description: "{{ doc('column__is_removed_dish') }}"
        data_type: boolean
      - name: product_variation_id
        description: "{{ doc('column__product_variation_id') }}"
        data_type: int
        data_tests:
          - not_null
      - name: recipe_id
        description: "{{ doc('column__recipe_id') }}"
        data_type: int
        data_tests:
          - not_null
      - name: fk_dim_products
        description: "{{ doc('column__pk_dim_products') }}"
        data_type: string
        data_tests:
          - not_null
      - name: fk_dim_companies
        description: "{{ doc('column__fk_dim_companies') }}"
        data_type: string
        data_tests:
          - not_null
      - name: fk_dim_recipes
        description: "{{ doc('column__pk_dim_recipes') }}"
        data_type: string
        data_tests:
          - not_null
      - name: main_recipe_id
        description: "{{ doc('column__main_recipe_id') }}"
        data_type: int
        data_tests:
          - not_null
      - name: recipe_name
        description: "{{ doc('column__recipe_name') }}"
        data_type: string
        data_tests:
          - not_null:
              config:
                severity: warn
      - name: product_type_id
        description: "{{ doc('column__product_type_id') }}"
        data_type: char(36)
        data_tests:
          - not_null
      - name: product_type_name
        description: "{{ doc('column__product_type_name') }}"
        data_type: string
        data_tests:
          - not_null
      - name: product_variation_name
        description: "{{ doc('column__product_variation_name') }}"
        data_type: string
        data_tests:
          - not_null
      - name: concept_combinations
        description: "{{ doc('column__concept_name_combinations') }}"
        data_type: array
      - name: taste_preference_combinations
        description: "{{ doc('column__taste_name_combinations_including_allergens') }}"
        data_type: string

  - name: reci_pick_concept_combinations
    description: "Table containing concept combinations for the reci-pick project"

    columns:
      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null
      - name: pk_dim_preference_combinations
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        data_type: string
        data_tests:
          - not_null
      - name: concept_preference_id_list
        description: "{{ doc('column__concept_preference_id_list') }}"
        data_type: array
      - name: concept_name_combinations
        description: "{{ doc('column__concept_name_combinations') }}"
        data_type: string

  - name: reci_pick_active_users
    description: "Table containing active users for the reci-pick project, used for prediction"

    columns:
      - name: pk_dim_billing_agreements
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        data_type: string
        data_tests:
          - not_null
      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string
        data_tests:
          - not_null
      - name: billing_agreement_id
        description: "{{ doc('column__billing_agreement_id') }}"
        data_type: int
        data_tests:
          - not_null
      - name: billing_agreement_status_name
        description: "{{ doc('column__billing_agreement_status_name') }}"
        data_type: string
      - name: preference_combination_id
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        data_type: string
      - name: concept_combinations
        description: "{{ doc('column__concept_name_combinations') }}"
        data_type: string
      - name: taste_preference_combinations
        description: "{{ doc('column__taste_name_combinations_including_allergens') }}"
        data_type: string
      - name: allergen_preference_id_list
        description: "{{ doc('column__allergen_preference_id_list') }}"
        data_type: array

  - name: dishes_forecasting_weekly_dishes_variations
    description: "Table containing information about weekly menu variations for dishes"

    columns:
      - name: menu_year
        description: "{{ doc('column__menu_year') }}"
        data_type: int

      - name: menu_week
        description: "{{ doc('column__menu_week') }}"
        data_type: int

      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string

      - name: product_variation_id
        description: "{{ doc('column__product_variation_id') }}"
        data_type: string

      - name: recipe_id
        description: "{{ doc('column__recipe_id') }}"
        data_type: int

      - name: recipe_portion_id
        description: "{{ doc('column__recipe_portion_id') }}"
        data_type: int

      - name: portion_id
        description: "{{ doc('column__portion_id') }}"
        data_type: int

      - name: portion_quantity
        description: "{{ doc('column__portion_size') }}"
        data_type: int

      - name: language_id
        description: "{{ doc('column__language_id') }}"
        data_type: int

      - name: product_type_id
        description: "{{ doc('column__product_variation_id') }}"
        data_type: string

      - name: product_variation_name
        description: "{{ doc('column__product_variation_name') }}"
        data_type: string

      - name: fk_dim_products
        description: "{{ doc('column__pk_dim_products') }}"
        data_type: string

      - name: fk_dim_portions
        description: "{{ doc('column__pk_dim_portions') }}"
        data_type: string

  - name: dishes_forecasting_order_history
    description: "Table containing aggregated information about order history for product variations ids"

    columns:
      - name: company_id
        description: "{{ doc('column__company_id') }}"
        data_type: string

      - name: company_name
        description: "{{ doc('column__company_name') }}"
        data_type: string

      - name: menu_year
        description: "{{ doc('column__menu_year') }}"
        data_type: int

      - name: menu_week
        description: "{{ doc('column__menu_week') }}"
        data_type: int

      - name: menu_week_monday_date
        description: "{{ doc('column__menu_week_monday_date') }}"
        data_type: date

      - name: product_variation_id
        description: "{{ doc('column__product_variation_id') }}"
        data_type: string

      - name: product_variation_quantity
        description: "{{ doc('column__product_variation_quantity_order_history') }}"
        data_type: int

      - name: total_weekly_qty
        description: "{{ doc('column__total_weekly_qty') }}"
        data_type: int

      - name: variation_ratio
        description: "{{ doc('column__variation_ratio') }}"
        data_type: double

  - name: dishes_forecasting_recipe_ingredients
    description: "Table containing information about recipe ingredients for dishes"

    columns:
      - name: recipe_portion_id
        description: "{{ doc('column__recipe_portion_id') }}"
        data_type: int
      - name: language_id
        description: "{{ doc('column__language_id') }}"
        data_type: int
      - name: has_chicken_filet
        description: "{{ doc('column__has_chicken_filet') }}"
        data_type: int
      - name: has_chicken
        description: "{{ doc('column__has_chicken') }}"
        data_type: int
      - name: has_dry_pasta
        description: "{{ doc('column__has_dry_pasta') }}"
        data_type: int
      - name: has_fresh_pasta
        description: "{{ doc('column__has_fresh_pasta') }}"
        data_type: int
      - name: has_white_fish_filet
        description: "{{ doc('column__has_white_fish_filet') }}"
        data_type: int
      - name: has_cod_fillet
        description: "{{ doc('column__has_cod_fillet') }}"
        data_type: int
      - name: has_breaded_cod
        description: "{{ doc('column__has_breaded_cod') }}"
        data_type: int
      - name: has_salmon_filet
        description: "{{ doc('column__has_salmon_filet') }}"
        data_type: int
      - name: has_seafood
        description: "{{ doc('column__has_seafood') }}"
        data_type: int
      - name: has_pork_filet
        description: "{{ doc('column__has_pork_filet') }}"
        data_type: int
      - name: has_pork_cutlet
        description: "{{ doc('column__has_pork_cutlet') }}"
        data_type: int
      - name: has_trout_filet
        description: "{{ doc('column__has_trout_filet') }}"
        data_type: int
      - name: has_parmasan
        description: "{{ doc('column__has_parmasan') }}"
        data_type: int
      - name: has_cheese
        description: "{{ doc('column__has_cheese') }}"
        data_type: int
      - name: has_minced_meat
        description: "{{ doc('column__has_minced_meat') }}"
        data_type: int
      - name: has_burger_patty
        description: "{{ doc('column__has_burger_patty') }}"
        data_type: int
      - name: has_noodles
        description: "{{ doc('column__has_noodles') }}"
        data_type: int
      - name: has_sausages
        description: "{{ doc('column__has_sausages') }}"
        data_type: int
      - name: has_tortilla
        description: "{{ doc('column__has_tortilla') }}"
        data_type: int
      - name: has_pizza_crust
        description: "{{ doc('column__has_pizza_crust') }}"
        data_type: int
      - name: has_bacon
        description: "{{ doc('column__has_bacon') }}"
        data_type: int
      - name: has_wok_sauce
        description: "{{ doc('column__has_wok_sauce') }}"
        data_type: int
      - name: has_asian_sauces
        description: "{{ doc('column__has_asian_sauces') }}"
        data_type: int
      - name: has_salsa
        description: "{{ doc('column__has_salsa') }}"
        data_type: int
      - name: has_flat_bread
        description: "{{ doc('column__has_flat_bread') }}"
        data_type: int
      - name: has_pita
        description: "{{ doc('column__has_pita') }}"
        data_type: int
      - name: has_whole_salad
        description: "{{ doc('column__has_whole_salad') }}"
        data_type: int
      - name: has_shredded_vegetables
        description: "{{ doc('column__has_shredded_vegetables') }}"
        data_type: int
      - name: has_potato
        description: "{{ doc('column__has_potato') }}"
        data_type: int
      - name: has_peas
        description: "{{ doc('column__has_peas') }}"
        data_type: int
      - name: has_rice
        description: "{{ doc('column__has_rice') }}"
        data_type: int
      - name: has_nuts
        description: "{{ doc('column__has_nuts') }}"
        data_type: int
      - name: has_beans
        description: "{{ doc('column__has_beans') }}"
        data_type: int
      - name: has_onion
        description: "{{ doc('column__has_onion') }}"
        data_type: int
      - name: has_citrus
        description: "{{ doc('column__has_citrus') }}"
        data_type: int
      - name: has_sesame
        description: "{{ doc('column__has_sesame') }}"
        data_type: int
      - name: has_herbs
        description: "{{ doc('column__has_herbs') }}"
        data_type: int
      - name: has_fruit
        description: "{{ doc('column__has_fruit') }}"
        data_type: int
      - name: has_cucumber
        description: "{{ doc('column__has_cucumber') }}"
        data_type: int
      - name: has_chili
        description: "{{ doc('column__has_chili') }}"
        data_type: int
      - name: has_pancake
        description: "{{ doc('column__has_pancake') }}"
        data_type: int
  - name: dishes_forecasting_recipes
    description: "Table containing information about recipes for dishes"

    columns:
      - name: recipe_id
        description: "{{ doc('column__recipe_id') }}"
        data_type: int
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: recipe_name
        description: "{{ doc('column__recipe_name') }}"
        data_type: string
      - name: cooking_time_to
        description: "{{ doc('column__cooking_time_to') }}"
        data_type: int
      - name: cooking_time_from
        description: "{{ doc('column__cooking_time_from') }}"
        data_type: int
      - name: recipe_difficulty_level_id
        description: "{{ doc('column__recipe_difficulty_level_id') }}"
        data_type: int
      - name: price_category_level_id
        description: "{{ doc('column__price_category_level_id') }}"
        data_type: int
      - name: recipe_main_ingredient_id
        description: "{{ doc('column__recipe_main_ingredient_id') }}"
        data_type: int
      - name: number_of_recipe_steps
        description: "{{ doc('column__number_of_recipe_steps') }}"
        data_type: int
      - name: number_of_taxonomies
        description: "{{ doc('column__number_of_taxonomies') }}"
        data_type: int
      - name: taxonomy_list
        description: "{{ doc('column__taxonomy_list') }}"
        data_type: string
      - name: has_chefs_favorite_taxonomy
        description: "{{ doc('column__has_chefs_favorite_taxonomy') }}"
        data_type: int
      - name: has_quick_and_easy_taxonomy
        description: "{{ doc('column__has_quick_and_easy_taxonomy') }}"
        data_type: int
      - name: has_vegetarian_taxonomy
        description: "{{ doc('column__has_vegetarian_taxonomy') }}"
        data_type: int
      - name: has_low_calorie_taxonomy
        description: "{{ doc('column__has_low_calorie_taxonomy') }}"
        data_type: int
      - name: has_family_friendly_taxonomy
        description: "{{ doc('column__has_family_friendly_taxonomy') }}"
        data_type: int
