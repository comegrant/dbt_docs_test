version: 2

models:
  - name: fact_orders
    description: "Information about what the customer ordered and changes made to their preselected mealbox."
    latest_version: 1
    config:
      alias: fact_orders
      contract:
        enforced: true

    columns:
      - name: pk_fact_orders
        data_type: string
        description: "{{ doc('column__pk_fact_orders') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: menu_year
        data_type: int
        description: "{{ doc('column__menu_year') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: menu_week
        data_type: int
        description: "{{ doc('column__menu_week') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: menu_week_monday_date
        data_type: date
        description: "{{ doc('column__menu_week_monday_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: product_variation_quantity
        data_type: int
        description: "{{ doc('column__product_variation_quantity') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: vat
        data_type: decimal(10,8)
        description: "{{ doc('column__vat') }}"

      - name: unit_price_ex_vat
        data_type: decimal(20,6)
        description: "{{ doc('column__unit_price_ex_vat') }}"

      - name: unit_price_inc_vat
        data_type: decimal(32,14)
        description: "{{ doc('column__unit_price_inc_vat') }}"

      - name: total_amount_ex_vat
        data_type: decimal(31,6)
        description: "{{ doc('column__total_amount_ex_vat') }}"

      - name: total_amount_inc_vat
        data_type: decimal(38,9)
        description: "{{ doc('column__total_amount_inc_vat') }}"

      - name: order_line_type_name
        data_type: string
        description: "{{ doc('column__order_line_type_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: meal_adjustment_subscription
        data_type: int
        description: "{{ doc('column__meal_adjustment_subscription') }}"

      - name: portion_adjustment_subscription
        data_type: int
        description: "{{ doc('column__portion_adjustment_subscription') }}"

      - name: meals
        data_type: int
        description: "{{ doc('column__meals') }}"

      - name: portions
        data_type: int
        description: "{{ doc('column__portion_size') }}"

      - name: mealbox_servings
        data_type: int
        description: "{{ doc('column__mealbox_servings') }}"

      - name: is_added_dish
        data_type: int
        description: "{{ doc('column__is_added_dish') }}"

      - name: is_removed_dish
        data_type: int
        description: "{{ doc('column__is_removed_dish') }}"

      - name: is_dish
        data_type: boolean
        description: "{{ doc('column__is_dish') }}"

      - name: is_onesub_migration
        data_type: int
        description: "{{ doc('column__is_onesub_migration') }}"

      - name: is_missing_preselector_output
        data_type: int
        description: "{{ doc('column__is_missing_preselector_output') }}"

      - name: is_thrifty_dish
        data_type: int
        description: "{{ doc('column__is_thrifty_dish') }}"

      - name: is_plus_price_dish
        data_type: int
        description: "{{ doc('column__is_plus_price_dish') }}"

      - name: has_recipe_leaflets
        data_type: boolean
        description: "{{ doc('column__has_recipe_leaflets') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: has_delivery
        data_type: boolean
        description: "{{ doc('column__has_delivery') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: has_swap
        data_type: boolean
        description: "{{ doc('column__has_swap') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_adjusted_by_customer
        data_type: boolean
        description: "{{ doc('column__is_adjusted_by_customer') }}"

      - name: recipe_comment
        data_type: string
        description: "{{ doc('column__recipe_comment') }}"

      - name: recipe_rating
        data_type: int
        description: "{{ doc('column__recipe_rating') }}"

      - name: recipe_rating_score
        data_type: double
        description: "{{ doc('column__recipe_rating_score') }}"

      - name: is_not_cooked_dish
        data_type: boolean
        description: "{{ doc('column__is_not_cooked_dish') }}"

      - name: billing_agreement_basket_deviation_origin_id
        data_type: varchar(36)
        description: "..."

      - name: billing_agreement_basket_deviation_origin_id_preselected
        data_type: varchar(36)
        description: "..."

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_order_id
        data_type: varchar(36)
        description: "{{ doc('column__billing_agreement_order_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: ops_order_id
        data_type: bigint
        description: "{{ doc('column__ops_order_id') }}"

      - name: billing_agreement_order_line_id
        data_type: varchar(36)
        description: "{{ doc('column__billing_agreement_order_line_id') }}"

      - name: company_id
        data_type: varchar(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_status_id
        data_type: varchar(36)
        description: "{{ doc('column__order_status_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_type_id
        data_type: varchar(36)
        description: "{{ doc('column__order_type_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: product_variation_id
        data_type: varchar(36)
        description: "{{ doc('column__product_variation_id') }}"

      - name: preselected_product_variation_id
        data_type: varchar(36)
        description: "{{ doc('column__preselected_product_variation_id') }}"

      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"

      - name: preselected_recipe_id
        data_type: int
        description: "{{ doc('column__preselected_recipe_id') }}"

      - name: recipe_rating_id
        data_type: string
        description: "{{ doc('column__recipe_rating_id') }}"

      - name: recipe_comment_id
        data_type: string
        description: "{{ doc('column__recipe_comment_id') }}"

      - name: fk_dim_basket_deviation_origins
        data_type: string
        description: ""
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_basket_deviation_origins')
              field: pk_dim_basket_deviation_origins

      - name: fk_dim_basket_deviation_origins_preselected
        data_type: string
        description: ""
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_basket_deviation_origins')
              field: pk_dim_basket_deviation_origins

      - name: fk_dim_billing_agreements_deviations
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_billing_agreements_ordergen
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_date
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_order_statuses
        data_type: string
        description: "{{ doc('column__pk_dim_order_statuses') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_order_statuses')
              field: pk_dim_order_statuses

      - name: fk_dim_order_types
        data_type: string
        description: "{{ doc('column__pk_dim_order_types') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_order_types')
              field: pk_dim_order_types

      - name: fk_dim_products
        data_type: string
        description: "{{ doc('column__pk_dim_products') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_products')
              field: pk_dim_products

      - name: fk_dim_periods_since_first_menu_week
        data_type: int
        description: "{{ doc('column__fk_dim_periods_since_first_menu_week') }}"

      - name: fk_dim_portions
        data_type: string
        description: "{{ doc('column__pk_dim_portions') }}"
        data_tests:
          - relationships:
              to: ref('dim_portions')
              field: pk_dim_portions

      - name: fk_dim_portions_preselected
        data_type: string
        description: "{{ doc('column__pk_dim_portions') }}"
        data_tests:
          - relationships:
              to: ref('dim_portions')
              field: pk_dim_portions


      - name: fk_dim_products_preselected
        data_type: string
        description: "{{ doc('column__fk_dim_products_preselected') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_products')
              field: pk_dim_products

      - name: fk_dim_recipes
        data_type: string
        description: "{{ doc('column__pk_dim_recipes') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_recipes')
              field: pk_dim_recipes

      - name: fk_dim_recipes_preselected
        data_type: string
        description: "{{ doc('column__fk_dim_recipes_preselected') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_recipes')
              field: pk_dim_recipes

      - name: fk_dim_discounts
        data_type: string
        description: "{{ doc('column__pk_dim_discounts') }}"
        data_tests:
          - relationships:
              to: ref('dim_discounts')
              field: pk_dim_discounts

    versions:
      - v: 1

  - name: dim_order_statuses
    description: ""
    latest_version: 1
    config:
      alias: dim_order_statuses

    versions:
      - v: 1

  - name: dim_order_types
    description: ""
    latest_version: 1
    config:
      alias: dim_order_types

    versions:
      - v: 1

  - name: dim_billing_agreements
    description: ""
    latest_version: 1
    config:
      alias: dim_billing_agreements
      contract:
        enforced: true

    columns:
      - name: pk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: unique
        data_tests:
          - unique

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: varchar(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_preferences_updated_id
        data_type: string
        description: "{{ doc('column__billing_agreement_preferences_updated_id') }}"

      - name: billing_agreement_basket_product_updated_id
        data_type: string
        description: ""

      - name: valid_from
        data_type: timestamp
        description: "{{ doc('column__valid_from') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: valid_to
        data_type: timestamp
        description: "{{ doc('column__valid_to') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_current
        data_type: boolean
        description: "{{ doc('column__is_current') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_status_name
        data_type: string
        description: "{{ doc('column__billing_agreement_status_name') }}"

      - name: payment_method
        data_type: string
        description: "{{ doc('column__payment_method') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_source
        data_type: string
        description: "{{ doc('column__signup_source') }}"

      - name: signup_salesperson
        data_type: string
        description: "{{ doc('column__signup_salesperson') }}"

      - name: signup_at
        data_type: timestamp
        description: "{{ doc('column__signup_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_date
        data_type: date
        description: "{{ doc('column__signup_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_year_day
        data_type: int
        description: "{{ doc('column__signup_year_day') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_month_day
        data_type: int
        description: "{{ doc('column__signup_month_day') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_week_day
        data_type: int
        description: "{{ doc('column__signup_week_day') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_week
        data_type: int
        description: "{{ doc('column__signup_week') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_month
        data_type: string
        description: "{{ doc('column__signup_month') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_quarter
        data_type: int
        description: "{{ doc('column__signup_quarter') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_year
        data_type: int
        description: "{{ doc('column__signup_year') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: first_menu_week_monday_date
        data_type: date
        description: "{{ doc('column__first_menu_week_monday_date') }}"

      - name: first_menu_week_week
        data_type: int
        description: "{{ doc('column__first_menu_week_week') }}"

      - name: first_menu_week_month
        data_type: string
        description: "{{ doc('column__first_menu_week_month') }}"

      - name: first_menu_week_quarter
        data_type: int
        description: "{{ doc('column__first_menu_week_quarter') }}"

      - name: first_menu_week_year
        data_type: int
        description: "{{ doc('column__first_menu_week_year') }}"

      - name: loyalty_level_name
        data_type: string
        description: "{{ doc('column__loyalty_level_name') }}"

      - name: loyalty_level_number
        data_type: int
        description: "{{ doc('column__loyalty_level_number') }}"

      - name: preselector_flag
        data_type: string
        description: "{{ doc('column__preselector_flag') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: onesub_flag
        data_type: string
        description: "{{ doc('column__onesub_flag') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: onesub_beta_flag
        data_type: string
        description: "{{ doc('column__onesub_beta_flag') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: dim_preferences
    description: "Contains all preferences and attributes that can belong to a billing agreement."
    latest_version: 1
    config:
      alias: dim_preferences

    columns:
      - name: pk_dim_preferences
        data_type: string
        description: "{{ doc('column__pk_dim_preferences') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: preference_id
        data_type: char(36)
        description: "{{ doc('column__preference_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: char(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_type_id
        data_type: char(36)
        description: "{{ doc('column__preference_type_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_name_general
        data_type: string
        description: "{{ doc('column__preference_name_general') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_description_general
        data_type: string
        description: "{{ doc('column__preference_description_general') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null


      - name: preference_name
        data_type: string
        description: "{{ doc('column__preference_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_description
        data_type: string
        description: "{{ doc('column__preference_description') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_type_name
        data_type: string
        description: "{{ doc('column__preference_type_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_type_description
        data_type: string
        description: "{{ doc('column__preference_type_description') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_active_preference
        data_type: boolean
        description: "{{ doc('column__is_active_preference') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_allergen
        data_type: boolean
        description: "{{ doc('column__is_allergen') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_onesub_concept_preference
        data_type: boolean
        description: "{{ doc('column__is_onesub_concept_preference') }}"
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: dim_preference_combinations
    description: "Contains all preference combinations for the agreements, as well as a list with only concept preferences\
      \ and a list with only taste preferences."
    latest_version: 1
    config:
      alias: dim_preference_combinations

    columns:
      - name: pk_dim_preference_combinations
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: preference_combinations
        data_type: string
        description: "{{ doc('column__preference_combinations') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_id_combinations
        data_type: string
        description: "{{ doc('column__preference_id_combinations') }}"

      - name: concept_combinations
        data_type: string
        description: "{{ doc('column__concept_combinations') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_id_combinations_concept_type
        data_type: string
        description: "{{ doc('column__preference_id_combinations_concept_type') }}"

      - name: taste_preference_combinations
        data_type: string
        description: "{{ doc('column__taste_preference_combinations') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_id_combinations_taste_type
        data_type: string
        description: "{{ doc('column__preference_id_combinations_taste_type') }}"

      - name: number_of_preferences
        data_type: int
        description: "{{ doc('column__number_of_preferences') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: number_of_concept_preferences
        data_type: int
        description: "{{ doc('column__number_of_concept_preferences') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: number_of_taste_preferences
        data_type: int
        description: "{{ doc('column__number_of_taste_preferences') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

    versions:
      - v: 1


  - name: bridge_billing_agreements_preferences
    description: ""
    latest_version: 1
    config:
      alias: bridge_billing_agreements_preferences
    constraints:
      - type: primary_key
        columns: [pk_bridge_billing_agreements_preferences]

    columns:
      - name: pk_bridge_billing_agreements_preferences
        data_type: string
        description: "{{ doc('column__pk_bridge_billing_agreements_preferences') }}"
        constraints:
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_preferences
        data_type: string
        description: "{{ doc('column__pk_dim_preferences') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_preferences')
              field: pk_dim_preferences

      - name: billing_agreement_preferences_updated_id
        data_type: string
        description: "{{ doc('column__billing_agreement_preferences_updated_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_id
        data_type: string
        description: "{{ doc('column__preference_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: string
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: fact_billing_agreement_updates
    description: "One row per billing agreement update. Contains a key to the billing agreement before and after the update."
    latest_version: 1
    config:
      alias: fact_billing_agreement_updates
      contract:
        enforced: true

    columns:
      - name: pk_fact_billing_agreement_updates
        data_type: string
        description: "{{ doc('column__pk_fact_billing_agreement_updates') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_dates_first_menu_week
        data_type: int
        description: "{{ doc('column__fk_dim_dates_first_menu_week') }}"
        data_tests:
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates
              config:
                ## This agreement has records from 1970 before we have any rows on dim_dates.
                where: "billing_agreement_id <> 528003"

      - name: fk_dim_time
        data_type: string
        description: "{{ doc('column__pk_dim_time') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_time')
              field: pk_dim_time

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__fk_dim_billing_agreements_updated') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_billing_agreements_previous_version
        data_type: string
        description: "{{ doc('column__fk_dim_billing_agreements_previous_version') }}"
        data_tests:
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_periods_since_first_order
        data_type: int
        description: "dimension does not exist yet, so will add description later."
        data_tests:
          - relationships:
              to: ref('dim_periods_since_first_order')
              field: pk_dim_periods_since_first_order

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        data_tests:
          - not_null

      - name: updated_at
        data_type: timestamp
        description: "{{ doc('column__updated_at') }}"
        data_tests:
          - not_null

      - name: first_menu_week_monday_date
        data_type: date
        description: "{{ doc('column__menu_week_monday_date') }}"

      - name: is_signup
        data_type: boolean
        description: "{{ doc('column__is_signup') }}"
        data_tests:
          - not_null

      - name: has_first_delivery
        data_type: boolean
        description: "{{ doc('column__has_first_delivery') }}"
        data_tests:
          - not_null

      - name: has_updated_preferences
        data_type: boolean
        description: "{{ doc('column__has_updated_preferences') }}"
        data_tests:
          - not_null

      - name: has_updated_subscribed_products
        data_type: boolean
        description: "{{ doc('column__has_updated_subscribed_products') }}"
        data_tests:
          - not_null

      - name: has_updated_status
        data_type: boolean
        description: "{{ doc('column__has_updated_status') }}"
        data_tests:
          - not_null

      - name: has_updated_loyalty_level
        data_type: boolean
        description: "{{ doc('column__has_updated_loyalty_level') }}"
        data_tests:
          - not_null

      - name: has_updated_onesub_flag
        data_type: boolean
        description: "{{ doc('column__has_updated_onesub_flag') }}"
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: fact_billing_agreements_weekly
    description: "All billing agreements, included deleted once, exploded to each week."
    latest_version: 1
    config:
      alias: fact_billing_agreements_weekly

    versions:
      - v: 1

  - name: fact_subscription_quiz
    description: "Events relating to when a customer updates their subscription."
    latest_version: 1
    config:
      alias: fact_subscription_quiz

    versions:
      - v: 1

    columns:
      - name: pk_fact_subscription_quiz
        data_type: string
        description: "{{ doc('column__pk_fact_subscription_quiz') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_date_source_created_at_segment
        data_type: bigint
        description: "{{ doc('column__fk_dim_date_source_created_at_segment') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_time_source_created_at_segment
        data_type: string
        description: "{{ doc('column__fk_dim_time_source_created_at_segment') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_time')
              field: pk_dim_time

      - name: has_started_subscription_quiz
        data_type: int
        description: "{{ doc('column__has_started_subscription_quiz') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

      - name: has_completed_subscription_quiz
        data_type: int
        description: "{{ doc('column__has_completed_subscription_quiz') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

  - name: dim_preselector_versions
    description: "Contains different versions of the preselector codebase."
    latest_version: 1
    config:
      alias: dim_preselector_versions
      contract:
        enforced: true

    versions:
      - v: 1
    columns:
      - name: pk_dim_preselector_versions
        data_type: string
        description: "{{ doc('column__pk_dim_preselector_versions') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null
      - name: commit_sha
        data_type: string
        description: "{{ doc('column__model_version_commit_sha') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
      - name: short_commit_sha
        data_type: string
        description: "{{ doc('column__model_version_short_commit_sha') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
      - name: source_model_version_first_used_at
        data_type: timestamp
        description: "{{ doc('column__source_model_version_first_used_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
      - name: source_model_version_latest_used_at
        data_type: timestamp
        description: "{{ doc('column__source_model_version_latest_used_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
      - name: version_number
        data_type: int
        description: "{{ doc('column__preselector_version_number') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

  - name: fact_preselector
    description: |
      A record of successful recipe selections made by the preselector algorithm based on customer preferences, outputs which contain errors are not included.

      This table contains two types of records:
      1. **Dish records**: Individual recipe selections for a customer's menu week
      2. **Mealbox records**: The aggregation of recipes selected for a customer's menu week

      Each customer can have multiple output versions for the same menu week, as they can re-run the preselector for upcoming weeks,
      so the output version helps us track which is the current output version and which are historical outputs.

      The table includes:
      - Request parameters (portions, meals requested)
      - Customer preference data used for selection
      - Quality metrics measuring how well selections match preferences
      - Rotation and variation scores to ensure menu diversity
      - Version tracking to identify the latest selections

    latest_version: 1
    config:
      alias: fact_preselector
      contract:
        enforced: true

    columns:
      - name: pk_fact_preselector
        data_type: string
        description: "{{ doc('column__pk_fact_preselector') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: preselector_output_id
        data_type: string
        description: "{{ doc('column__preselector_output_id') }}"
        data_tests:
          - not_null

      - name: created_at
        data_type: timestamp
        description: "{{ doc('column__created_at_preselector_output') }}"
        data_tests:
          - not_null

      - name: menu_week_output_version
        data_type: int
        description: "{{ doc('column__menu_week_output_version') }}"
        data_tests:
          - not_null

      - name: is_most_recent_output
        data_type: int
        description: "{{ doc('column__is_most_recent_output') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: varchar(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: product_variation_id
        data_type: string
        description: "{{ doc('column__product_variation_id') }}"
        data_tests:
          - not_null:
              where: "is_dish = true"

      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        data_tests:
          - not_null:
              where: "is_dish = true"

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null:
              where: "is_dish = true"

      - name: main_recipe_id
        data_type: int
        description: "{{ doc('column__main_recipe_id') }}"
        data_tests:
          - not_null:
              where: "is_dish = true"

      - name: main_recipe_ids
        data_type: array<int>
        description: "{{ doc('column__main_recipe_ids') }}"
        data_tests:
          - not_null:
              where: "is_dish = false"

      - name: concept_preference_ids
        data_type: array<string>
        description: "{{ doc('column__concept_preference_list') }}"
        data_tests:
          - not_null

      - name: taste_preference_ids
        data_type: array<string>
        description: "{{ doc('column__taste_preference_list') }}"
        data_tests:
          - not_null

      - name: menu_year
        data_type: int
        description: "{{ doc('column__menu_year') }}"
        data_tests:
          - not_null

      - name: menu_week
        data_type: int
        description: "{{ doc('column__menu_week') }}"
        data_tests:
          - not_null

      - name: menu_week_monday_date
        data_type: date
        description: "{{ doc('column__menu_week_monday_date') }}"
        data_tests:
          - not_null

      - name: portions
        data_type: int
        description: "{{ doc('column__requested_portions') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6]
              quote: false

      - name: meals
        data_type: int
        description: "{{ doc('column__requested_meals') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: [2, 3, 4, 5]
              quote: false

      - name: has_data_processing_consent
        data_type: boolean
        description: "{{ doc('column__has_data_processing_consent') }}"
        data_tests:
          - not_null

      - name: taste_preference_compliancy_code
        data_type: int
        description: "{{ doc('column__taste_preference_compliancy_code') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3]
              quote: false

      - name: recipe_main_ingredient_name_english
        data_type: string
        description: "{{ doc('column__recipe_main_ingredient_name_english') }}"
        data_tests:
          - not_null:
              where: "is_dish = true"
              config:
                # Some recipes have no english main ingredient, this isn't an error
                # but it's good to be aware of
                severity: warn

      - name: model_version_commit_sha
        data_type: string
        description: "{{ doc('column__model_version_commit_sha') }}"
        data_tests:
          - not_null

      - name: error_cooking_time_mean
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_beef_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_chef_choice_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_chicken_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_cod_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_family_friendly_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_gluten_free_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_grain_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_lactose_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_lamb_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_low_calorie
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_mixed_meat_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_other_carbo_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_other_protein_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_pasta_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_pork_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_roede_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_salmon_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_seafood_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_shrimp_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_soft_bread_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_spicy_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_tuna_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_vegan_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_vegetables_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_vegetarian_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_cost_of_food
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_energy
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_fat
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_fat_saturated
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_number_of_ratings
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_ordered_ago
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_family_friendly_probability
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_intra_week_similarity
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_protein
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_rank
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_ratings
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_veg_fruit
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_repeated_proteins_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: error_repeated_carbohydrates_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: sum_error_main_ingredients
        data_type: double
        description: "{{ doc('column__sum_error_main_ingredients') }}"
        data_tests:
          - not_null

      - name: repeat_weeks
        data_type: bigint
        description: "{{ doc('column__repeat_weeks') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 15

      - name: menu_week_window
        data_type: bigint
        description: "{{ doc('column__menu_week_window') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 15

      - name: repeat_weeks_percentage
        data_type: double
        description: "{{ doc('column__repeat_weeks_percentage') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: rotation_score
        data_type: double
        description: "{{ doc('column__rotation_score') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: rotation_score_group
        data_type: string
        description: "{{ doc('column__rotation_score_group') }}"
        data_tests:
          - accepted_values:
              values: ["Very High", "High", "Medium", "Low", "Very Low"]

      - name: rotation_score_group_number
        data_type: int
        description: "{{ doc('column__rotation_score_group_number') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 6

      - name: number_of_unique_main_ingredients
        data_type: int
        description: "{{ doc('column__number_of_unique_main_ingredients') }}"

      - name: main_ingredient_variation_score
        data_type: double
        description: "{{ doc('column__main_ingredient_variation_score') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
              where: "main_ingredient_variation_score is not null"

      - name: main_ingredient_variation_score_group
        data_type: string
        description: "{{ doc('column__main_ingredient_variation_score_group') }}"
        data_tests:
          - accepted_values:
              values: ["Very High", "High", "Medium", "Low", "Very Low"]
              where: "main_ingredient_variation_score_group is not null"

      - name: main_ingredient_variation_score_group_number
        data_type: int
        description: "{{ doc('column__main_ingredient_variation_score_group_number') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 6

      - name: combined_rotation_variation_score
        data_type: double
        description: "{{ doc('column__combined_rotation_variation_score') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: combined_rotation_variation_score_group
        data_type: string
        description: "{{ doc('column__combined_rotation_variation_score_group') }}"
        data_tests:
          - accepted_values:
              values: ["Very High", "High", "Medium", "Low", "Very Low"]

      - name: combined_rotation_variation_score_group_number
        data_type: int
        description: "{{ doc('column__combined_rotation_variation_score_group_number') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 6

      - name: is_dish
        data_type: boolean
        description: "{{ doc('column__is_dish_preselector_output') }}"
        data_tests:
          - not_null

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        data_tests:
          - not_null:
              config:
                # If fact preselector is run a while later than dim_billing_agreements,
                # there will be new customers getting output which don't
                # exist in dim_billing_agreements this is not an error, but
                # it's good to be aware of
                severity: warn
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_products
        data_type: string
        description: "{{ doc('column__pk_dim_products') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_products')
              field: pk_dim_products

      - name: fk_dim_recipes
        data_type: string
        description: "{{ doc('column__pk_dim_recipes') }}"
        data_tests:
          - relationships:
              to: ref('dim_recipes')
              field: pk_dim_recipes

      - name: fk_dim_portions
        data_type: string
        description: "{{ doc('column__pk_dim_portions') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_portions')
              field: pk_dim_portions

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__fk_dim_dates_menu_week_monday_date') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_dates_created_at
        data_type: int
        description: "{{ doc('column__fk_dim_dates_created_at_preselector_output') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_time_created_at
        data_type: int
        description: "{{ doc('column__fk_dim_time_created_at_preselector_output') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_time')
              field: pk_dim_time

      - name: fk_dim_preselector_versions
        data_type: string
        description: "{{ doc('column__pk_dim_preselector_versions') }}"
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_preselector_versions')
              field: pk_dim_preselector_versions

    versions:
      - v: 1

  - name: fact_recipe_billing_agreement_compliancy
    description: "Information about the compliancy between billing agreements and recipes"
    latest_version: 1
    config:
      alias: fact_recipe_billing_agreement_compliancy
      contract:
        enforced: true

    versions:
      - v: 1

    columns:
      - name: pk_fact_recipe_billing_agreement_compliancy
        data_type: string
        description: "{{ doc('column__pk_fact_recipe_billing_agreement_compliancy') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_recipes
        data_type: string
        description: "{{ doc('column__pk_dim_recipes') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_recipes')
              field: pk_dim_recipes

      - name: fk_dim_portions
        data_type: string
        description: "{{ doc('column__pk_dim_portions') }}"
        data_tests:
          - relationships:
              to: ref('dim_portions')
              field: pk_dim_portions

      - name: menu_week_monday_date
        data_type: date
        description: "{{ doc('column__menu_week_monday_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: varchar(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_preference_combination_id
        data_type: string
        description: "{{ doc('column__pk_preference_combination_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: portion_id
        data_type: int
        description: "{{ doc('column__portion_id') }}"

      - name: recipe_preference_combination_id
        data_type: string
        description: "{{ doc('column__pk_preference_combination_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: compliancy_level
        data_type: int
        description: "{{ doc('column__compliancy_level') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

  - name: fact_billing_agreement_consents
    description: "Overview of the consents made by customers. Has is_accepted_consent = true if accepted and false if removed.\
      \ If no consent has ever been made no row will exist for the customer."
    latest_version: 1
    config:
      alias: fact_billing_agreement_consents
    contract:
      enforced: true

    columns:
      - name: pk_fact_billing_agreement_consents
        data_type: string
        description: "{{ doc('column__pk_fact_billing_agreement_consents') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: is_accepted_consent
        data_type: boolean
        description: "{{ doc('column__is_accepted_consent') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: valid_from
        data_type: timestamp
        description: "{{ doc('column__valid_from') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: varchar(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: consent_id
        data_type: varchar(36)
        description: "{{ doc('column__consent_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_consent_types
        data_type: string
        description: "{{ doc('column__pk_dim_consent_types') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_consent_types')
              field: pk_dim_consent_types

    versions:
      - v: 1

  - name: dim_consent_types
    description: "Different types of consents a customer can accept or reject"
    latest_version: 1
    config:
      alias: dim_consent_types
    contract:
      enforced: true
    columns:
      - name: pk_dim_consent_types
        data_type: string
        description: "{{ doc('column__pk_dim_consent_types') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: consent_category_name
        data_type: string
        description: "{{ doc('column__consent_category_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: consent_name
        data_type: string
        description: "{{ doc('column__consent_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: consent_id
        data_type: char(36)
        description: "{{ doc('column__consent_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: consent_category_id
        data_type: char(36)
        description: "{{ doc('column__consent_category_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: fact_loyalty_orders
    description: "Information about loyalty orders and the associated loyalty points spent on them."
    latest_version: 1
    config:
      alias: fact_loyalty_orders
      contract:
        enforced: true

    versions:
      - v: 1
    columns:
      - name: pk_fact_loyalty_orders
        data_type: string
        description: "{{ doc('column__pk_fact_loyalty_orders') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: loyalty_order_id
        data_type: string
        description: "{{ doc('column__loyalty_order_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_order_line_id
        data_type: string
        description: "{{ doc('column__loyalty_order_line_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_order_status_id
        data_type: int
        description: "{{ doc('column__loyalty_order_status_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_week_monday_date
        data_type: date
        description: "{{ doc('column__order_week_monday_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_year
        data_type: int
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_week
        data_type: int
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: string
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: product_variation_id
        data_type: string
        description: "{{ doc('column__product_variation_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: product_variation_quantity
        data_type: int
        description: "{{ doc('column__product_variation_quantity') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: unit_point_price
        data_type: int
        description: "{{ doc('column__unit_point_price') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: total_point_price
        data_type: int
        description: "{{ doc('column__total_point_price') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: fk_dim_loyalty_order_statuses
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_order_statuses') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_loyalty_order_statuses')
              field: pk_dim_loyalty_order_statuses

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_products
        data_type: string
        description: "{{ doc('column__pk_dim_products') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_products')
              field: pk_dim_products


  - name: dim_loyalty_order_statuses
    description: "Dimension table for loyalty order statuses."
    latest_version: 1
    config:
      alias: dim_loyalty_order_statuses
      contract:
        enforced: true

    versions:
      - v: 1
    columns:
      - name: pk_dim_loyalty_order_statuses
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_order_statuses') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: loyalty_order_status_id
        data_type: int
        description: "{{ doc('column__loyalty_order_status_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_order_status_name
        data_type: string
        description: "{{ doc('column__loyalty_order_status_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

  - name: dim_all_preference_combinations
    description: "Contains preference combinations and their corresponding names and ids"
    latest_version: 1
    config:
      alias: dim_all_preference_combinations

    versions:
      - v: 1

    columns:
      - name: pk_preference_combination_id
        data_type: string
        description: "{{ doc('column__pk_preference_combination_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - unique

      - name: all_preference_id_list
        data_type: array
        description: "{{ doc('column__all_preference_id_list') }}"

      - name: allergen_preference_id_list
        data_type: array
        description: "{{ doc('column__allergen_preference_id_list') }}"

      - name: concept_preference_id_list
        data_type: array
        description: "{{ doc('column__concept_preference_id_list') }}"

      - name: taste_preferences_excluding_allergens_id_list
        data_type: array
        description: "{{ doc('column__taste_preferences_excluding_allergens_id_list') }}"

      - name: taste_preferences_including_allergens_id_list
        data_type: array
        description: "{{ doc('column__taste_preferences_including_allergens_id_list') }}"

      - name: preference_name_combinations
        data_type: string
        description: "{{ doc('column__preference_name_combinations') }}"

      - name: allergen_name_combinations
        data_type: string
        description: "{{ doc('column__allergen_name_combinations') }}"

      - name: concept_name_combinations
        data_type: string
        description: "{{ doc('column__concept_name_combinations') }}"

      - name: taste_name_combinations_excluding_allergens
        data_type: string
        description: "{{ doc('column__taste_name_combinations_excluding_allergens') }}"

      - name: taste_name_combinations_including_allergens
        data_type: string
        description: "{{ doc('column__taste_name_combinations_including_allergens') }}"

      - name: number_of_preferences
        data_type: int
        description: "{{ doc('column__number_of_preferences') }}"

      - name: number_of_allergen_preferences
        data_type: int
        description: "{{ doc('column__number_of_allergen_preferences') }}"

      - name: number_of_concept_preferences
        data_type: int
        description: "{{ doc('column__number_of_concept_preferences') }}"

      - name: number_of_taste_preferences_excluding_allergens
        data_type: int
        description: "{{ doc('column__number_of_taste_preferences_excluding_allergens') }}"

      - name: number_of_taste_preferences_including_allergens
        data_type: int
        description: "{{ doc('column__number_of_taste_preferences_including_allergens') }}"

  - name: dim_loyalty_events
    description: "Table of loyalty event names. Loyalty events explain a change to an agreement's loyalty points."
    latest_version: 1
    config:
      alias: dim_loyalty_events
      contract:
        enforced: true

    versions:
      - v: 1
    columns:
      - name: pk_dim_loyalty_events
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_events') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: loyalty_event_id
        data_type: string
        description: "{{ doc('column__loyalty_event_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_event_name
        data_type: string
        description: "{{ doc('column__loyalty_event_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null


  - name: fact_loyalty_points
    description: "Information about loyalty points transactions, explaining how customers are receiving or spending loyalty\
      \ points."
    latest_version: 1
    config:
      alias: fact_loyalty_points
      contract:
        enforced: true

    versions:
      - v: 1
    columns:
      - name: pk_fact_loyalty_points
        data_type: string
        description: "{{ doc('column__pk_fact_loyalty_points') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: loyalty_points_id
        data_type: string
        description: "{{ doc('column__loyalty_points_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_points_parent_id
        data_type: string
        description: "{{ doc('column__loyalty_points_parent_id') }}"

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"

      - name: loyalty_event_id
        data_type: string
        description: "{{ doc('column__loyalty_event_id') }}"

      - name: loyalty_order_id
        data_type: string
        description: "{{ doc('column__loyalty_order_id') }}"

      - name: transaction_reason
        data_type: string
        description: "{{ doc('column__transaction_reason') }}"

      - name: transaction_points
        data_type: int
        description: "{{ doc('column__transaction_points') }}"

      - name: remaining_points
        data_type: int
        description: "{{ doc('column__remaining_points') }}"

      - name: billing_agreement_order_id
        data_type: string
        description: "{{ doc('column__billing_agreement_order_id') }}"

      - name: company_id
        data_type: string
        description: "{{ doc('column__company_id') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: points_expiration_date
        data_type: timestamp
        description: "{{ doc('column__points_expiration_date') }}"

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_loyalty_events
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_events') }}"
        data_tests:
          - relationships:
              to: ref('dim_loyalty_events')
              field: pk_dim_loyalty_events

      - name: fk_dim_dates_transaction
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_dates_points_expiration
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        data_tests:
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

  - name: dim_loyalty_seasons
    columns:
      - name: pk_dim_loyalty_seasons
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_seasons') }}"
        constraints:
          - type: primary_key
        data_tests:
          - unique
          - not_null

      - name: company_id
        data_type: string
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_season_name
        data_type: string
        description: "{{ doc('column__loyalty_season_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_season_year
        data_type: int
        description: "{{ doc('column__loyalty_season_year') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_season_quarter
        data_type: int
        description: "{{ doc('column__loyalty_season_quarter') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_season_start_date
        data_type: date
        description: "{{ doc('column__loyalty_season_start_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_season_end_date
        data_type: date
        description: "{{ doc('column__loyalty_season_end_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

  - name: dim_discounts
    description: "Contains information on all discounts which customers can add to their account"
    latest_version: 1
    config:
      alias: dim_discounts
      contract:
        enforced: true

    versions:
      - v: 1

    columns:
      - name: pk_dim_discounts
        data_type: string
        description: "{{ doc('column__pk_dim_discounts') }}"
        constraints:
          - type: primary_key
          - type: unique
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: discount_id
        data_type: char(36)
        description: "{{ doc('column__discount_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_usage_type_id
        data_type: int
        description: "{{ doc('column__discount_usage_type_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_type_id
        data_type: int
        description: "{{ doc('column__discount_type_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_amount_type_id
        data_type: int
        description: "{{ doc('column__discount_amount_type_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_category_id
        data_type: char(36)
        description: "{{ doc('column__discount_category_id') }}"
        data_tests:
          - not_null:
              config:
                severity: error
                error_if: ">1020"  # Only NULL for discounts before 2021-09-22 (migration)
                warn_if: ">1020"

      - name: discount_channel_id
        data_type: char(36)
        description: "{{ doc('column__discount_channel_id') }}"

      - name: discount_sub_category_id
        data_type: char(36)
        description: "{{ doc('column__discount_sub_category_id') }}"

      - name: discount_coupon_type_id
        data_type: int
        description: "{{ doc('column__discount_coupon_type_id') }}"
        data_tests:
          - not_null:
              config:
                severity: error
                error_if: ">152"  # Only NULL for discounts before 2021-09-22 (migration)
                warn_if: ">152"

      - name: discount_title
        data_type: string
        description: "{{ doc('column__discount_title') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_partner_invoice_reference
        data_type: string
        description: "{{ doc('column__discount_partner_invoice_reference') }}"

      - name: customer_usage_limit
        data_type: int
        description: "{{ doc('column__customer_usage_limit') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_amount
        data_type: decimal(20,10)
        description: "{{ doc('column__discount_amount') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_partner_price
        data_type: decimal(20,10)
        description: "{{ doc('column__discount_partner_price') }}"

      - name: is_active_discount
        data_type: boolean
        description: "{{ doc('column__is_active_discount') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_coupon_code_required
        data_type: boolean
        description: "{{ doc('column__is_coupon_code_required') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_cumulative_discount
        data_type: boolean
        description: "{{ doc('column__is_cumulative_discount') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_valid_on_direct_order
        data_type: boolean
        description: "{{ doc('column__is_valid_on_direct_order') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_registration_discount
        data_type: boolean
        description: "{{ doc('column__is_registration_discount') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_disabled_on_freeze
        data_type: boolean
        description: "{{ doc('column__is_disabled_on_freeze') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_highest_price_discount
        data_type: boolean
        description: "{{ doc('column__is_highest_price_discount') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_channel_name
        data_type: string
        description: "{{ doc('column__discount_channel_name') }}"

      - name: discount_category_name
        data_type: string
        description: "{{ doc('column__discount_category_name') }}"
        data_tests:
          - not_null:
              config:
                severity: error
                error_if: ">1020"  # Only NULL for discounts before 2021-09-22 (migration)
                warn_if: ">1020"

      - name: discount_sub_category_name
        data_type: string
        description: "{{ doc('column__discount_sub_category_name') }}"
