version: 2

models:
  - name: fact_orders
    description: "Information about what the customer ordered and changes made to their preselected mealbox."
    latest_version: 1
    config:
      alias: fact_orders
      contract:
        enforced: true

    columns:
      - name: pk_fact_orders
        data_type: string
        description: "{{ doc('column__pk_fact_orders') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: menu_year
        data_type: int
        description: "{{ doc('column__menu_year') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: menu_week
        data_type: int
        description: "{{ doc('column__menu_week') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: menu_week_monday_date
        data_type: date
        description: "{{ doc('column__menu_week_monday_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: menu_week_financial_date
        data_type: date
        description: "{{ doc('column__menu_week_financial_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
  
      - name: fact_updated_at
        data_type: timestamp
        description: "{{ doc('column__fact_updated_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: product_variation_quantity
        data_type: int
        description: "{{ doc('column__product_variation_quantity') }}"

      - name: product_variation_quantity_subscription
        data_type: int
        description: "{{ doc('column__product_variation_quantity_subscription') }}"

      - name: total_amount_ex_vat_subscription
        data_type: decimal(20,6)
        description: "{{ doc('column__total_amount_ex_vat_subscription') }}"

      - name: vat
        data_type: decimal(10,8)
        description: "{{ doc('column__vat') }}"

      - name: unit_price_ex_vat
        data_type: decimal(20,6)
        description: "{{ doc('column__unit_price_ex_vat') }}"

      - name: unit_price_inc_vat
        data_type: decimal(32,14)
        description: "{{ doc('column__unit_price_inc_vat') }}"

      - name: total_amount_ex_vat
        data_type: decimal(31,6)
        description: "{{ doc('column__total_amount_ex_vat') }}"

      - name: total_amount_inc_vat
        data_type: decimal(38,9)
        description: "{{ doc('column__total_amount_inc_vat') }}"

      - name: order_line_type_name
        data_type: string
        description: "{{ doc('column__order_line_type_name') }}"

      - name: order_line_details
        data_type: string
        description: "{{ doc('column__order_line_details') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: meals
        data_type: int
        description: "{{ doc('column__meals') }}"

      - name: meals_subscription
        data_type: int
        description: "{{ doc('column__meals') }}"

      - name: meals_mealbox
        data_type: int
        description: "{{ doc('column__meals_mealbox') }}"

      - name: meals_mealbox_subscription
        data_type: int
        description: "{{ doc('column__meals_mealbox_subscription') }}"

      - name: portions
        data_type: int
        description: "{{ doc('column__portion_size') }}"
  
      - name: portions_subscription
        data_type: int
        description: "{{ doc('column__portion_size') }}"

      - name: mealbox_portions
        data_type: int
        description: "{{ doc('column__mealbox_portions') }}"

      - name: portions_mealbox_subscription
        data_type: int
        description: "{{ doc('column__portions_mealbox_subscription') }}"

      - name: mealbox_servings
        data_type: int
        description: "{{ doc('column__mealbox_servings') }}"

      - name: mealbox_servings_subscription
        data_type: int
        description: "{{ doc('column__mealbox_servings') }}"

      - name: meal_adjustment_subscription
        data_type: int
        description: "{{ doc('column__meal_adjustment_subscription') }}"

      - name: portion_adjustment_subscription
        data_type: int
        description: "{{ doc('column__portion_adjustment_subscription') }}"

      - name: sum_added_dish
        data_type: bigint
        description: "{{ doc('column__sum_added_dish') }}"

      - name: sum_removed_dish
        data_type: bigint
        description: "{{ doc('column__sum_removed_dish') }}"

      - name: is_added_dish
        data_type: int
        description: "{{ doc('column__is_added_dish') }}"

      - name: is_removed_dish
        data_type: int
        description: "{{ doc('column__is_removed_dish') }}"

      - name: is_dish
        data_type: boolean
        description: "{{ doc('column__is_dish') }}"

      - name: is_preselected_dish
        data_type: boolean
        description: "{{ doc('column__is_preselected_dish') }}"

      - name: is_thrifty_dish
        data_type: int
        description: "{{ doc('column__is_thrifty_dish') }}"

      - name: is_plus_price_dish
        data_type: int
        description: "{{ doc('column__is_plus_price_dish') }}"

      - name: is_mealbox
        data_type: boolean
        description: "{{ doc('column__is_mealbox') }}"

      - name: is_subscribed_mealbox
        data_type: boolean
        description: "{{ doc('column__is_subscribed_mealbox') }}"

      - name: is_grocery
        data_type: boolean
        description: "{{ doc('column__is_grocery') }}"

      - name: is_subscribed_grocery
        data_type: boolean
        description: "{{ doc('column__is_subscribed_grocery') }}"

      - name: is_onesub_migration
        data_type: int
        description: "{{ doc('column__is_onesub_migration') }}"

      - name: is_missing_preselector_output
        data_type: int
        description: "{{ doc('column__is_missing_preselector_output') }}"

      - name: has_swap
        data_type: boolean
        description: "{{ doc('column__has_swap') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: has_normal_order_type
        data_type: boolean
        description: "{{ doc('column__has_normal_order_type') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: has_finished_order_status
        data_type: boolean
        description: "{{ doc('column__has_finished_order_status') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: has_subscription_order_type
        data_type: boolean
        description: "{{ doc('column__has_subscription_order_type') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: has_recipe_leaflets
        data_type: boolean
        description: "{{ doc('column__has_recipe_leaflets') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: recipe_comment
        data_type: string
        description: "{{ doc('column__recipe_comment') }}"

      - name: recipe_rating
        data_type: int
        description: "{{ doc('column__recipe_rating') }}"

      - name: recipe_rating_score
        data_type: double
        description: "{{ doc('column__recipe_rating_score') }}"

      - name: is_not_cooked_dish
        data_type: boolean
        description: "{{ doc('column__is_not_cooked_dish') }}"

      - name: total_ingredient_weight
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_weight') }}"

      - name: total_ingredient_weight_whole_units
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_weight_whole_units') }}"

      - name: total_ingredient_planned_cost
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_planned_cost') }}"

      - name: total_ingredient_planned_cost_whole_units
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_planned_cost_whole_units') }}"

      - name: total_ingredient_expected_cost
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_expected_cost') }}"

      - name: total_ingredient_expected_cost_whole_units
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_expected_cost_whole_units') }}"

      - name: total_ingredient_actual_cost
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_actual_cost') }}"

      - name: total_ingredient_actual_cost_whole_units
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_actual_cost_whole_units') }}"

      - name: total_ingredient_co2_emissions
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_co2_emissions') }}"

      - name: total_ingredient_co2_emissions_whole_units
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_co2_emissions_whole_units') }}"

      - name: total_ingredient_weight_with_co2_data
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_weight_with_co2_data') }}"

      - name: total_ingredient_weight_with_co2_data_whole_units
        data_type: decimal(38,2)
        description: "{{ doc('column__total_ingredient_weight_with_co2_data_whole_units') }}"

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_basket_deviation_origin_id
        data_type: string
        description: "{{ doc('column__billing_agreement_basket_deviation_origin_id') }}"

      - name: billing_agreement_order_id
        data_type: varchar(36)
        description: "{{ doc('column__billing_agreement_order_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: ops_order_id
        data_type: bigint
        description: "{{ doc('column__ops_order_id') }}"

      - name: billing_agreement_order_line_id
        data_type: varchar(36)
        description: "{{ doc('column__billing_agreement_order_line_id') }}"

      - name: company_id
        data_type: varchar(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_status_id
        data_type: varchar(36)
        description: "{{ doc('column__order_status_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_type_id
        data_type: varchar(36)
        description: "{{ doc('column__order_type_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: portion_id
        data_type: int
        description: "{{ doc('column__portion_id') }}"

      - name: portion_id_subscription
        data_type: int
        description: "{{ doc('column__portion_id') }}"
    
      - name: portion_id_mealbox
        data_type: int
        description: "{{ doc('column__portion_id_mealbox') }}"

      - name: portion_id_mealbox_subscription
        data_type: int
        description: "{{ doc('column__portion_id_mealbox_subscription') }}"

      - name: orders_subscriptions_match_key 
        data_type: string
        description: "{{ doc('column__orders_subscriptions_match_key') }}"

      - name: product_variation_id
        data_type: varchar(36)
        description: "{{ doc('column__product_variation_id') }}"

      - name: product_variation_id_subscription
        data_type: varchar(36)
        description: "{{ doc('column__product_variation_id') }}"

      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"

      - name: recipe_id_subscription
        data_type: int
        description: "{{ doc('column__recipe_id') }}"

      - name: recipe_portion_id
        data_type: int
        description: "{{ doc('column__recipe_portion_id') }}"

      - name: recipe_rating_id
        data_type: string
        description: "{{ doc('column__recipe_rating_id') }}"

      - name: recipe_comment_id
        data_type: string
        description: "{{ doc('column__recipe_comment_id') }}"

      - name: fk_dim_billing_agreements_subscription
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_billing_agreements_ordergen
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_companies')
            to_columns: [pk_dim_companies]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_customer_journey_segments
        data_type: string
        description: "{{ doc('column__pk_dim_customer_journey_segments') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_customer_journey_segments')
            to_columns: [pk_dim_customer_journey_segments]
        data_tests:
          - relationships:
              to: ref('dim_customer_journey_segments')
              field: pk_dim_customer_journey_segments

      - name: fk_dim_date
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_order_statuses
        data_type: string
        description: "{{ doc('column__pk_dim_order_statuses') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_order_statuses')
            to_columns: [pk_dim_order_statuses]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_order_statuses')
              field: pk_dim_order_statuses

      - name: fk_dim_order_types
        data_type: string
        description: "{{ doc('column__pk_dim_order_types') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_order_types')
            to_columns: [pk_dim_order_types]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_order_types')
              field: pk_dim_order_types

      - name: fk_dim_order_line_details
        data_type: string
        description: "{{ doc('column__pk_dim_order_line_details') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_order_line_details')
            to_columns: [pk_dim_order_line_details]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_order_line_details')
              field: pk_dim_order_line_details
    
      - name: fk_dim_meals
        data_type: int
        description: "{{ doc('column__pk_dim_meals') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_meals')
            to_columns: [pk_dim_meals]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_meals')
              field: pk_dim_meals

      - name: fk_dim_meals_subscription
        data_type: int
        description: "{{ doc('column__pk_dim_meals') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_meals')
            to_columns: [pk_dim_meals]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_meals')
              field: pk_dim_meals

      - name: fk_dim_meals_mealbox
        data_type: int
        description: "{{ doc('column__pk_dim_meals') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_meals')
            to_columns: [pk_dim_meals]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_meals')
              field: pk_dim_meals

      - name: fk_dim_meals_mealbox_subscription
        data_type: int
        description: "{{ doc('column__pk_dim_meals') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_meals')
            to_columns: [pk_dim_meals]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_meals')
              field: pk_dim_meals

      - name: fk_dim_products
        data_type: string
        description: "{{ doc('column__pk_dim_products') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_products')
            to_columns: [pk_dim_products]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_products')
              field: pk_dim_products
              config:
                # TODO: Two known cases where the ordered product variation does not exist in Dim Products
                severity: error
                error_if: ">2"

      - name: fk_dim_periods_since_first_menu_week
        data_type: int
        description: "{{ doc('column__fk_dim_periods_since_first_menu_week') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_periods_since')
            to_columns: [pk_dim_periods_since]

      - name: fk_dim_loyalty_seasons
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_seasons') }}"
        data_tests:
          - relationships:
              to: ref('dim_loyalty_seasons')
              field: pk_dim_loyalty_seasons

      - name: fk_dim_portions
        data_type: string
        description: "{{ doc('column__pk_dim_portions') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_portions')
            to_columns: [pk_dim_portions]
        data_tests:
          - relationships:
              to: ref('dim_portions')
              field: pk_dim_portions
  
      - name: fk_dim_portions_subscription
        data_type: string
        description: "{{ doc('column__pk_dim_portions') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_portions')
            to_columns: [pk_dim_portions]
        data_tests:
          - relationships:
              to: ref('dim_portions')
              field: pk_dim_portions
  
      - name: fk_dim_portions_mealbox
        data_type: string
        description: "{{ doc('column__pk_dim_portions') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_portions')
            to_columns: [pk_dim_portions]
        data_tests:
          - relationships:
              to: ref('dim_portions')
              field: pk_dim_portions

      - name: fk_dim_portions_mealbox_subscription
        data_type: string
        description: "{{ doc('column__pk_dim_portions') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_portions')
            to_columns: [pk_dim_portions]
        data_tests:
          - relationships:
              to: ref('dim_portions')
              field: pk_dim_portions


      - name: fk_dim_products_subscription
        data_type: string
        description: "{{ doc('column__fk_dim_products_subscription') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_products')
            to_columns: [pk_dim_products]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_products')
              field: pk_dim_products

      - name: fk_dim_recipes
        data_type: string
        description: "{{ doc('column__pk_dim_recipes') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_recipes')
            to_columns: [pk_dim_recipes]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_recipes')
              field: pk_dim_recipes

      - name: fk_dim_recipes_subscription
        data_type: string
        description: "{{ doc('column__fk_dim_recipes_subscription') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_recipes')
            to_columns: [pk_dim_recipes]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_recipes')
              field: pk_dim_recipes

      - name: fk_dim_preference_combinations
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_discounts
        data_type: string
        description: "{{ doc('column__pk_dim_discounts') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_discounts')
            to_columns: [pk_dim_discounts]
        data_tests:
          - relationships:
              to: ref('dim_discounts')
              field: pk_dim_discounts

      - name: fk_dim_transportation
        data_type: string
        description: "{{ doc('column__pk_dim_transportation') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_transportation')
            to_columns: [pk_dim_transportation]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_transportation')
              field: pk_dim_transportation

      - name: fk_dim_partnerships
        data_type: string
        description: "{{ doc('column__pk_dim_partnerships') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_partnerships')
            to_columns: [pk_dim_partnerships]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_partnerships')
              field: pk_dim_partnerships

    versions:
      - v: 1

  - name: dim_order_statuses
    description: ""
    latest_version: 1
    config:
      alias: dim_order_statuses
      contract:
        enforced: true

    columns:
      - name: pk_dim_order_statuses
        data_type: string
        description: "{{ doc('column__pk_dim_order_statuses') }}"
        constraints:
          - type: not_null
          - type: primary_key
        data_tests:
          - unique

      - name: order_status_id
        data_type: string
        description: "{{ doc('column__order_status_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_status_name
        data_type: string
        description: "{{ doc('column__order_status_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: can_be_cancelled
        data_type: boolean
        description: "{{ doc('column__can_be_cancelled') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: dim_order_types
    description: ""
    latest_version: 1
    config:
      alias: dim_order_types
      contract:
        enforced: true

    columns:
      - name: pk_dim_order_types
        data_type: string
        description: "{{ doc('column__pk_dim_order_types') }}"
        constraints:
          - type: not_null
          - type: primary_key
        data_tests:
          - unique

      - name: order_type_id
        data_type: string
        description: "{{ doc('column__order_type_id') }}"
        data_tests:
          - not_null

      - name: order_type_name
        data_type: string
        description: "{{ doc('column__order_type_name') }}"
        data_tests:
          - not_null

      - name: is_direct_order
        data_type: boolean
        description: "{{ doc('column__is_direct_order') }}"
        data_tests:
          - not_null

      - name: allows_anonymous
        data_type: boolean
        description: "{{ doc('column__allows_anonymous') }}"
        data_tests:
          - not_null

      - name: is_direct_payment
        data_type: boolean
        description: "{{ doc('column__is_direct_payment') }}"
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: dim_billing_agreements
    description: ""
    latest_version: 1
    config:
      alias: dim_billing_agreements
      contract:
        enforced: true

    columns:
      - name: pk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
          - type: primary_key
        data_tests:
          - unique

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: varchar(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_preferences_updated_id
        data_type: string
        description: "{{ doc('column__billing_agreement_preferences_updated_id') }}"

      - name: preference_combination_id
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"

      - name: billing_agreement_basket_product_updated_id
        data_type: string
        description: ""

      - name: valid_from
        data_type: timestamp
        description: "{{ doc('column__valid_from') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: valid_to
        data_type: timestamp
        description: "{{ doc('column__valid_to') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_current
        data_type: boolean
        description: "{{ doc('column__is_current') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_status_name
        data_type: string
        description: "{{ doc('column__billing_agreement_status_name') }}"

      - name: payment_method
        data_type: string
        description: "{{ doc('column__payment_method') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_source
        data_type: string
        description: "{{ doc('column__signup_source') }}"

      - name: signup_salesperson
        data_type: string
        description: "{{ doc('column__signup_salesperson') }}"

      - name: signup_at
        data_type: timestamp
        description: "{{ doc('column__signup_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_date
        data_type: date
        description: "{{ doc('column__signup_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_year_day
        data_type: int
        description: "{{ doc('column__signup_year_day') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_month_day
        data_type: int
        description: "{{ doc('column__signup_month_day') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_week_day
        data_type: int
        description: "{{ doc('column__signup_week_day') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_week
        data_type: int
        description: "{{ doc('column__signup_week') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_month
        data_type: string
        description: "{{ doc('column__signup_month') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_month_number
        data_type: int
        description: "{{ doc('column__signup_month_number') }}"
        data_tests:
          - not_null

      - name: signup_quarter
        data_type: int
        description: "{{ doc('column__signup_quarter') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: signup_year
        data_type: int
        description: "{{ doc('column__signup_year') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: first_menu_week_monday_date
        data_type: date
        description: "{{ doc('column__first_menu_week_monday_date') }}"

      - name: first_menu_week_week
        data_type: int
        description: "{{ doc('column__first_menu_week_week') }}"

      - name: first_menu_week_month
        data_type: string
        description: "{{ doc('column__first_menu_week_month') }}"

      - name: first_menu_week_month_number
        data_type: int
        description: "{{ doc('column__first_menu_week_month_number') }}"

      - name: first_menu_week_quarter
        data_type: int
        description: "{{ doc('column__first_menu_week_quarter') }}"

      - name: first_menu_week_year
        data_type: int
        description: "{{ doc('column__first_menu_week_year') }}"

      - name: reactivation_date
        data_type: date
        description: "{{ doc('column__reactivation_date') }}"

      - name: reactivation_week
        data_type: int
        description: "{{ doc('column__reactivation_week') }}"

      - name: reactivation_month
        data_type: string
        description: "{{ doc('column__reactivation_month') }}"

      - name: reactivation_month_number
        data_type: int
        description: "{{ doc('column__reactivation_month_number') }}"

      - name: reactivation_quarter  
        data_type: int
        description: "{{ doc('column__reactivation_quarter') }}"

      - name: reactivation_year
        data_type: int
        description: "{{ doc('column__reactivation_quarter') }}"

      - name: loyalty_level_name_brand
        data_type: string
        description: "{{ doc('column__loyalty_level_name_brand') }}"

      - name: loyalty_level_name_english
        data_type: string
        description: "{{ doc('column__loyalty_level_name_english') }}"

      - name: loyalty_level_number
        data_type: int
        description: "{{ doc('column__loyalty_level_number') }}"

      - name: has_grocery_subscription
        data_type: boolean
        description: "{{ doc('column__has_grocery_subscription') }}"

      - name: onesub_flag
        data_type: string
        description: "{{ doc('column__onesub_flag') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: onesub_beta_flag
        data_type: string
        description: "{{ doc('column__onesub_beta_flag') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
      
      - name: partnership_name
        data_type: string
        description: "{{ doc('column__partnership_name') }}"

    versions:
      - v: 1

  - name: dim_preferences
    description: "Contains all preferences and attributes that can belong to a billing agreement."
    latest_version: 1
    config:
      alias: dim_preferences
      contract:
        enforced: true

    columns:
      - name: pk_dim_preferences
        data_type: string
        description: "{{ doc('column__pk_dim_preferences') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: preference_id
        data_type: char(36)
        description: "{{ doc('column__preference_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: char(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_type_id
        data_type: char(36)
        description: "{{ doc('column__preference_type_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_name
        data_type: string
        description: "{{ doc('column__preference_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_description
        data_type: string
        description: "{{ doc('column__preference_description') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null


      - name: preference_name_brand
        data_type: string
        description: "{{ doc('column__preference_name_brand') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_description_brand
        data_type: string
        description: "{{ doc('column__preference_description_brand') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_type_name
        data_type: string
        description: "{{ doc('column__preference_type_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_type_description
        data_type: string
        description: "{{ doc('column__preference_type_description') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_active_preference
        data_type: boolean
        description: "{{ doc('column__is_active_preference') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_allergen
        data_type: boolean
        description: "{{ doc('column__is_allergen') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_onesub_concept_preference
        data_type: boolean
        description: "{{ doc('column__is_onesub_concept_preference') }}"
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: bridge_billing_agreements_preferences
    description: ""
    latest_version: 1
    config:
      alias: bridge_billing_agreements_preferences
    constraints:
      - type: primary_key
        columns: [pk_bridge_billing_agreements_preferences]

    columns:
      - name: pk_bridge_billing_agreements_preferences
        data_type: string
        description: "{{ doc('column__pk_bridge_billing_agreements_preferences') }}"
        constraints:
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_preferences
        data_type: string
        description: "{{ doc('column__pk_dim_preferences') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_preferences')
            to_columns: [pk_dim_preferences]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_preferences')
              field: pk_dim_preferences

      - name: billing_agreement_preferences_updated_id
        data_type: string
        description: "{{ doc('column__billing_agreement_preferences_updated_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: preference_id
        data_type: string
        description: "{{ doc('column__preference_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: string
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: fact_billing_agreement_updates
    description: "One row per billing agreement update. Contains a key to the billing agreement before and after the update."
    latest_version: 1
    config:
      alias: fact_billing_agreement_updates
      contract:
        enforced: true

    columns:
      - name: pk_fact_billing_agreement_updates
        data_type: string
        description: "{{ doc('column__pk_fact_billing_agreement_updates') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_dates_first_menu_week
        data_type: int
        description: "{{ doc('column__fk_dim_dates_first_menu_week') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates
              config:
                ## This agreement has records from 1970 before we have any rows on dim_dates.
                where: "billing_agreement_id <> 528003"

      - name: fk_dim_time
        data_type: string
        description: "{{ doc('column__pk_dim_time') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_time')
            to_columns: [pk_dim_time]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_time')
              field: pk_dim_time

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__fk_dim_billing_agreements_updated') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_billing_agreements_previous_version
        data_type: string
        description: "{{ doc('column__fk_dim_billing_agreements_previous_version') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_preference_combinations
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_preference_combinations_previous_version
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_companies')
            to_columns: [pk_dim_companies]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_loyalty_seasons
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_seasons') }}"
        data_tests:
          - relationships:
              to: ref('dim_loyalty_seasons')
              field: pk_dim_loyalty_seasons

      - name: fk_dim_periods_since_first_order
        data_type: int
        description: "dimension does not exist yet, so will add description later."
        constraints:
          - type: foreign_key
            to: ref('dim_periods_since')
            to_columns: [pk_dim_periods_since]
        data_tests:
          - relationships:
              to: ref('dim_periods_since')
              field: pk_dim_periods_since

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        data_tests:
          - not_null

      - name: updated_at
        data_type: timestamp
        description: "{{ doc('column__updated_at') }}"
        data_tests:
          - not_null

      - name: first_menu_week_monday_date
        data_type: date
        description: "{{ doc('column__menu_week_monday_date') }}"

      - name: is_signup
        data_type: boolean
        description: "{{ doc('column__is_signup') }}"
        data_tests:
          - not_null

      - name: has_first_delivery
        data_type: boolean
        description: "{{ doc('column__has_first_delivery') }}"
        data_tests:
          - not_null

      - name: has_updated_preferences
        data_type: boolean
        description: "{{ doc('column__has_updated_preferences') }}"
        data_tests:
          - not_null

      - name: has_updated_subscribed_products
        data_type: boolean
        description: "{{ doc('column__has_updated_subscribed_products') }}"
        data_tests:
          - not_null

      - name: has_updated_status
        data_type: boolean
        description: "{{ doc('column__has_updated_status') }}"
        data_tests:
          - not_null

      - name: has_updated_loyalty_level
        data_type: boolean
        description: "{{ doc('column__has_updated_loyalty_level') }}"
        data_tests:
          - not_null

      - name: has_upgraded_loyalty_level
        data_type: boolean
        description: "{{ doc('column__has_upgraded_loyalty_level') }}"
        data_tests:
          - not_null

      - name: has_downgraded_loyalty_level
        data_type: boolean
        description: "{{ doc('column__has_downgraded_loyalty_level') }}"
        data_tests:
          - not_null


      - name: has_updated_onesub_flag
        data_type: boolean
        description: "{{ doc('column__has_updated_onesub_flag') }}"
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: fact_billing_agreements_daily
    description: "All billing agreements, excluded deleted once, exploded to each day."
    latest_version: 1
    config:
      alias: fact_billing_agreements_daily

    versions:
      - v: 1

  - name: view_fact_billing_agreements
    description: "View on fact_billing_agreements_daily. Daily if last 30 days, otherwise weekly."
    latest_version: 1
    config:
      alias: view_fact_billing_agreements
      materialized: view

    versions:
      - v: 1

  - name: fact_subscription_quiz
    description: "Events relating to when a customer updates their subscription."
    meta:
      owners:
        - "stephen"
    latest_version: 1
    config:
      alias: fact_subscription_quiz

    versions:
      - v: 1

    columns:
      - name: pk_fact_subscription_quiz
        data_type: string
        description: "{{ doc('column__pk_fact_subscription_quiz') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_preference_combinations
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_companies')
            to_columns: [pk_dim_companies]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_date_source_created_at_segment
        data_type: bigint
        description: "{{ doc('column__fk_dim_date_source_created_at_segment') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_time_source_created_at_segment
        data_type: string
        description: "{{ doc('column__fk_dim_time_source_created_at_segment') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_time')
            to_columns: [pk_dim_time]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_time')
              field: pk_dim_time

      - name: has_started_subscription_quiz
        data_type: int
        description: "{{ doc('column__has_started_subscription_quiz') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

      - name: has_completed_subscription_quiz
        data_type: int
        description: "{{ doc('column__has_completed_subscription_quiz') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

  - name: dim_preselector_versions
    description: "Contains different versions of the preselector codebase."
    meta:
      owners:
        - "stephen"
    latest_version: 1
    config:
      alias: dim_preselector_versions
      contract:
        enforced: true

    versions:
      - v: 1
    columns:
      - name: pk_dim_preselector_versions
        data_type: string
        description: "{{ doc('column__pk_dim_preselector_versions') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null
      - name: commit_sha
        data_type: string
        description: "{{ doc('column__model_version_commit_sha') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
      - name: short_commit_sha
        data_type: string
        description: "{{ doc('column__model_version_short_commit_sha') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
      - name: source_model_version_first_used_at
        data_type: timestamp
        description: "{{ doc('column__source_model_version_first_used_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
      - name: source_model_version_latest_used_at
        data_type: timestamp
        description: "{{ doc('column__source_model_version_latest_used_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null
      - name: version_number
        data_type: int
        description: "{{ doc('column__preselector_version_number') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

  - name: fact_preselector
    description: |
      A record of successful recipe selections made by the preselector algorithm based on customer preferences, outputs which contain errors are not included.

      This table contains two types of records:
      1. **Dish records**: Individual recipe selections for a customer's menu week
      2. **Mealbox records**: The aggregation of recipes selected for a customer's menu week

      Each customer can have multiple output versions for the same menu week, as they can re-run the preselector for upcoming weeks,
      so the output version helps us track which is the current output version and which are historical outputs.

      The table includes:
      - Request parameters (portions, meals requested)
      - Customer preference data used for selection
      - Quality metrics measuring how well selections match preferences
      - Rotation and variation scores to ensure menu diversity
      - Version tracking to identify the latest selections

    meta:
      owners:
        - "stephen"
        - "marie"

    latest_version: 1
    config:
      alias: fact_preselector
      contract:
        enforced: true

    columns:
      - name: pk_fact_preselector
        data_type: string
        description: "{{ doc('column__pk_fact_preselector') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: preselector_output_id
        data_type: string
        description: "{{ doc('column__preselector_output_id') }}"
        data_tests:
          - not_null

      - name: created_at
        data_type: timestamp
        description: "{{ doc('column__created_at_preselector_output') }}"
        data_tests:
          - not_null

      - name: menu_week_output_version
        data_type: int
        description: "{{ doc('column__menu_week_output_version') }}"
        data_tests:
          - not_null

      - name: is_most_recent_output
        data_type: int
        description: "{{ doc('column__is_most_recent_output') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: varchar(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: product_variation_id
        data_type: string
        description: "{{ doc('column__product_variation_id') }}"
        data_tests:
          - not_null:
              where: "is_dish = true"

      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        data_tests:
          - not_null:
              where: "is_dish = true"

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null:
              where: "is_dish = true"

      - name: main_recipe_id
        data_type: int
        description: "{{ doc('column__main_recipe_id') }}"
        data_tests:
          - not_null:
              where: "is_dish = true"

      - name: main_recipe_ids
        data_type: array<int>
        description: "{{ doc('column__main_recipe_ids') }}"
        data_tests:
          - not_null:
              where: "is_dish = false"

      - name: concept_preference_ids
        data_type: array<string>
        description: "{{ doc('column__concept_preference_list') }}"
        data_tests:
          - not_null

      - name: taste_preference_ids
        data_type: array<string>
        description: "{{ doc('column__taste_preference_list') }}"
        data_tests:
          - not_null

      - name: menu_year
        data_type: int
        description: "{{ doc('column__menu_year') }}"
        data_tests:
          - not_null

      - name: menu_week
        data_type: int
        description: "{{ doc('column__menu_week') }}"
        data_tests:
          - not_null

      - name: menu_week_monday_date
        data_type: date
        description: "{{ doc('column__menu_week_monday_date') }}"
        data_tests:
          - not_null

      - name: menu_week_financial_date
        data_type: date
        description: "{{ doc('column__menu_week_financial_date') }}"
        data_tests:
          - not_null

      - name: portions
        data_type: int
        description: "{{ doc('column__requested_portions') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6]
              quote: false

      - name: meals
        data_type: int
        description: "{{ doc('column__requested_meals') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: [2, 3, 4, 5]
              quote: false

      - name: has_data_processing_consent
        data_type: boolean
        description: "{{ doc('column__has_data_processing_consent') }}"
        data_tests:
          - not_null

      - name: taste_preference_compliancy_code
        data_type: int
        description: "{{ doc('column__taste_preference_compliancy_code') }}"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3]
              quote: false

      - name: recipe_main_ingredient_name_english
        data_type: string
        description: "{{ doc('column__recipe_main_ingredient_name_english') }}"
        data_tests:
          - not_null:
              where: "is_dish = true"
              config:
                # Some recipes have no english main ingredient, this isn't an error
                # but it's good to be aware of
                severity: warn

      - name: model_version_commit_sha
        data_type: string
        description: "{{ doc('column__model_version_commit_sha') }}"
        data_tests:
          - not_null

      - name: error_cooking_time_mean
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_beef_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_chef_choice_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_chicken_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_cod_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_family_friendly_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_gluten_free_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_grain_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_lactose_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_lamb_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_low_calorie
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_mixed_meat_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_other_carbo_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_other_protein_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_pasta_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_pork_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_roede_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_salmon_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_seafood_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_shrimp_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_soft_bread_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_spicy_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_tuna_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_vegan_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_vegetables_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_is_vegetarian_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_cost_of_food
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_energy
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_fat
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_fat_saturated
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_number_of_ratings
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_ordered_ago
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_family_friendly_probability
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_intra_week_similarity
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_protein
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_rank
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_ratings
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_mean_veg_fruit
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 100

      - name: error_repeated_proteins_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: error_repeated_carbohydrates_percentage
        data_type: double
        description: "{{ doc('column__preselector_error_vector') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: sum_error_main_ingredients
        data_type: double
        description: "{{ doc('column__sum_error_main_ingredients') }}"
        data_tests:
          - not_null

      - name: repeat_weeks
        data_type: bigint
        description: "{{ doc('column__repeat_weeks') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 15

      - name: menu_week_window
        data_type: bigint
        description: "{{ doc('column__menu_week_window') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 15

      - name: repeat_weeks_percentage
        data_type: double
        description: "{{ doc('column__repeat_weeks_percentage') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: rotation_score
        data_type: double
        description: "{{ doc('column__rotation_score') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: rotation_score_group
        data_type: string
        description: "{{ doc('column__rotation_score_group') }}"
        data_tests:
          - accepted_values:
              values: ["Very High", "High", "Medium", "Low", "Very Low"]

      - name: rotation_score_group_number
        data_type: int
        description: "{{ doc('column__rotation_score_group_number') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 6

      - name: number_of_unique_main_ingredients
        data_type: int
        description: "{{ doc('column__number_of_unique_main_ingredients') }}"

      - name: main_ingredient_variation_score
        data_type: double
        description: "{{ doc('column__main_ingredient_variation_score') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
              where: "main_ingredient_variation_score is not null"

      - name: main_ingredient_variation_score_group
        data_type: string
        description: "{{ doc('column__main_ingredient_variation_score_group') }}"
        data_tests:
          - accepted_values:
              values: ["Very High", "High", "Medium", "Low", "Very Low"]
              where: "main_ingredient_variation_score_group is not null"

      - name: main_ingredient_variation_score_group_number
        data_type: int
        description: "{{ doc('column__main_ingredient_variation_score_group_number') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 6

      - name: combined_rotation_variation_score
        data_type: double
        description: "{{ doc('column__combined_rotation_variation_score') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1

      - name: combined_rotation_variation_score_group
        data_type: string
        description: "{{ doc('column__combined_rotation_variation_score_group') }}"
        data_tests:
          - accepted_values:
              values: ["Very High", "High", "Medium", "Low", "Very Low"]

      - name: combined_rotation_variation_score_group_number
        data_type: int
        description: "{{ doc('column__combined_rotation_variation_score_group_number') }}"
        data_tests:
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 6

      - name: is_dish
        data_type: boolean
        description: "{{ doc('column__is_dish_preselector_output') }}"
        data_tests:
          - not_null

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null:
              config:
                # If fact preselector is run a while later than dim_billing_agreements,
                # there will be new customers getting output which don't
                # exist in dim_billing_agreements this is not an error, but
                # it's good to be aware of
                severity: warn
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_preference_combinations
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_companies')
            to_columns: [pk_dim_companies]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_products
        data_type: string
        description: "{{ doc('column__pk_dim_products') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_products')
            to_columns: [pk_dim_products]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_products')
              field: pk_dim_products

      - name: fk_dim_recipes
        data_type: string
        description: "{{ doc('column__pk_dim_recipes') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_recipes')
            to_columns: [pk_dim_recipes]
        data_tests:
          - relationships:
              to: ref('dim_recipes')
              field: pk_dim_recipes

      - name: fk_dim_portions
        data_type: string
        description: "{{ doc('column__pk_dim_portions') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_portions')
            to_columns: [pk_dim_portions]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_portions')
              field: pk_dim_portions

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__fk_dim_dates_menu_week_monday_date') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_dates_created_at
        data_type: int
        description: "{{ doc('column__fk_dim_dates_created_at_preselector_output') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_time_created_at
        data_type: string
        description: "{{ doc('column__fk_dim_time_created_at_preselector_output') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_time')
            to_columns: [pk_dim_time]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_time')
              field: pk_dim_time

      - name: fk_dim_preselector_versions
        data_type: string
        description: "{{ doc('column__pk_dim_preselector_versions') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preselector_versions')
            to_columns: [pk_dim_preselector_versions]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_preselector_versions')
              field: pk_dim_preselector_versions

    versions:
      - v: 1

  - name: fact_recipe_billing_agreement_compliancy
    description: "Information about the compliancy between billing agreements and recipes"
    latest_version: 1
    config:
      enabled: false
      alias: fact_recipe_billing_agreement_compliancy
      contract:
        enforced: true

    versions:
      - v: 1

    columns:
      - name: pk_fact_recipe_billing_agreement_compliancy
        data_type: string
        description: "{{ doc('column__pk_fact_recipe_billing_agreement_compliancy') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_companies')
            to_columns: [pk_dim_companies]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_preference_combinations_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_preference_combinations_recipes
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_recipes
        data_type: string
        description: "{{ doc('column__pk_dim_recipes') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_recipes')
            to_columns: [pk_dim_recipes]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_recipes')
              field: pk_dim_recipes

      - name: fk_dim_portions
        data_type: string
        description: "{{ doc('column__pk_dim_portions') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_portions')
            to_columns: [pk_dim_portions]
        data_tests:
          - relationships:
              to: ref('dim_portions')
              field: pk_dim_portions

      - name: menu_week_monday_date
        data_type: date
        description: "{{ doc('column__menu_week_monday_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: varchar(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_preference_combination_id
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: portion_id
        data_type: int
        description: "{{ doc('column__portion_id') }}"

      - name: recipe_preference_combination_id
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: compliancy_level
        data_type: int
        description: "{{ doc('column__compliancy_level') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

  - name: fact_billing_agreement_consents
    description: "Overview of the consents made by customers. Has is_accepted_consent = true if accepted and false if removed.\
      \ If no consent has ever been made no row will exist for the customer."
    latest_version: 1
    config:
      alias: fact_billing_agreement_consents
    contract:
      enforced: true

    columns:
      - name: pk_fact_billing_agreement_consents
        data_type: string
        description: "{{ doc('column__pk_fact_billing_agreement_consents') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: is_accepted_consent
        data_type: boolean
        description: "{{ doc('column__is_accepted_consent') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: valid_from
        data_type: timestamp
        description: "{{ doc('column__valid_from') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: varchar(36)
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: consent_id
        data_type: varchar(36)
        description: "{{ doc('column__consent_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_preference_combinations
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_companies')
            to_columns: [pk_dim_companies]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_consent_types
        data_type: string
        description: "{{ doc('column__pk_dim_consent_types') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_consent_types')
            to_columns: [pk_dim_consent_types]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_consent_types')
              field: pk_dim_consent_types

    versions:
      - v: 1

  - name: dim_consent_types
    description: "Different types of consents a customer can accept or reject"
    latest_version: 1
    config:
      alias: dim_consent_types
    contract:
      enforced: true
    columns:
      - name: pk_dim_consent_types
        data_type: string
        description: "{{ doc('column__pk_dim_consent_types') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: consent_category_name
        data_type: string
        description: "{{ doc('column__consent_category_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: consent_name
        data_type: string
        description: "{{ doc('column__consent_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: consent_id
        data_type: char(36)
        description: "{{ doc('column__consent_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: consent_category_id
        data_type: char(36)
        description: "{{ doc('column__consent_category_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: fact_loyalty_orders
    description: "Information about loyalty orders and the associated loyalty points spent on them."
    latest_version: 1
    config:
      alias: fact_loyalty_orders
      contract:
        enforced: true

    versions:
      - v: 1
    columns:
      - name: pk_fact_loyalty_orders
        data_type: string
        description: "{{ doc('column__pk_fact_loyalty_orders') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: loyalty_order_id
        data_type: string
        description: "{{ doc('column__loyalty_order_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_order_line_id
        data_type: string
        description: "{{ doc('column__loyalty_order_line_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_order_status_id
        data_type: int
        description: "{{ doc('column__loyalty_order_status_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_week_monday_date
        data_type: date
        description: "{{ doc('column__order_week_monday_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_year
        data_type: int
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: order_week
        data_type: int
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: company_id
        data_type: string
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: product_variation_id
        data_type: string
        description: "{{ doc('column__product_variation_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: product_variation_quantity
        data_type: int
        description: "{{ doc('column__product_variation_quantity') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: unit_point_price
        data_type: int
        description: "{{ doc('column__unit_point_price') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: total_point_price
        data_type: int
        description: "{{ doc('column__total_point_price') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: fk_dim_loyalty_order_statuses
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_order_statuses') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_loyalty_order_statuses')
            to_columns: [pk_dim_loyalty_order_statuses]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_loyalty_order_statuses')
              field: pk_dim_loyalty_order_statuses

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_preference_combinations
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_companies')
            to_columns: [pk_dim_companies]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_products
        data_type: string
        description: "{{ doc('column__pk_dim_products') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_products')
            to_columns: [pk_dim_products]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_products')
              field: pk_dim_products

      - name: fk_dim_loyalty_seasons
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_seasons') }}"
        data_tests:
          - relationships:
              to: ref('dim_loyalty_seasons')
              field: pk_dim_loyalty_seasons

  - name: dim_loyalty_order_statuses
    description: "Dimension table for loyalty order statuses."
    latest_version: 1
    config:
      alias: dim_loyalty_order_statuses
      contract:
        enforced: true

    versions:
      - v: 1
    columns:
      - name: pk_dim_loyalty_order_statuses
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_order_statuses') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: loyalty_order_status_id
        data_type: int
        description: "{{ doc('column__loyalty_order_status_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_order_status_name
        data_type: string
        description: "{{ doc('column__loyalty_order_status_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

  - name: dim_preference_combinations
    description: "Contains preference combinations and their corresponding names and ids"
    latest_version: 1
    config:
      alias: dim_preference_combinations
      contract:
        enforced: true

    versions:
      - v: 1

    columns:
      - name: pk_dim_preference_combinations
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - not_null
          - unique

      - name: preference_combination_id
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        data_tests:
          - not_null
          - unique

      - name: all_preference_id_list
        data_type: array<string>
        description: "{{ doc('column__all_preference_id_list') }}"

      - name: allergen_preference_id_list
        data_type: array<string>
        description: "{{ doc('column__allergen_preference_id_list') }}"

      - name: concept_preference_id_list
        data_type: array<string>
        description: "{{ doc('column__concept_preference_id_list') }}"

      - name: taste_preferences_excluding_allergens_id_list
        data_type: array<string>
        description: "{{ doc('column__taste_preferences_excluding_allergens_id_list') }}"

      - name: taste_preferences_including_allergens_id_list
        data_type: array<string>
        description: "{{ doc('column__taste_preferences_including_allergens_id_list') }}"

      - name: preference_name_combinations
        data_type: string
        description: "{{ doc('column__preference_name_combinations') }}"

      - name: allergen_name_combinations
        data_type: string
        description: "{{ doc('column__allergen_name_combinations') }}"

      - name: concept_name_combinations
        data_type: string
        description: "{{ doc('column__concept_name_combinations') }}"

      - name: taste_name_combinations_excluding_allergens
        data_type: string
        description: "{{ doc('column__taste_name_combinations_excluding_allergens') }}"

      - name: taste_name_combinations_including_allergens
        data_type: string
        description: "{{ doc('column__taste_name_combinations_including_allergens') }}"

      - name: number_of_preferences
        data_type: int
        description: "{{ doc('column__number_of_preferences') }}"

      - name: number_of_allergen_preferences
        data_type: int
        description: "{{ doc('column__number_of_allergen_preferences') }}"

      - name: number_of_concept_preferences
        data_type: int
        description: "{{ doc('column__number_of_concept_preferences') }}"

      - name: number_of_taste_preferences_excluding_allergens
        data_type: int
        description: "{{ doc('column__number_of_taste_preferences_excluding_allergens') }}"

      - name: number_of_taste_preferences_including_allergens
        data_type: int
        description: "{{ doc('column__number_of_taste_preferences_including_allergens') }}"

  - name: dim_loyalty_events
    description: "Table of loyalty event names. Loyalty events explain a change to an agreement's loyalty points."
    latest_version: 1
    config:
      alias: dim_loyalty_events
      contract:
        enforced: true

    versions:
      - v: 1
    columns:
      - name: pk_dim_loyalty_events
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_events') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: loyalty_event_id
        data_type: string
        description: "{{ doc('column__loyalty_event_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_event_name
        data_type: string
        description: "{{ doc('column__loyalty_event_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null


  - name: fact_loyalty_points
    description: "Information about loyalty points transactions, explaining how customers are receiving or spending loyalty\
      \ points."
    latest_version: 1
    config:
      alias: fact_loyalty_points
      contract:
        enforced: true

    versions:
      - v: 1
    columns:
      - name: pk_fact_loyalty_points
        data_type: string
        description: "{{ doc('column__pk_fact_loyalty_points') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: loyalty_points_id
        data_type: string
        description: "{{ doc('column__loyalty_points_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_points_parent_id
        data_type: string
        description: "{{ doc('column__loyalty_points_parent_id') }}"

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"

      - name: loyalty_event_id
        data_type: string
        description: "{{ doc('column__loyalty_event_id') }}"

      - name: loyalty_order_id
        data_type: string
        description: "{{ doc('column__loyalty_order_id') }}"

      - name: transaction_reason
        data_type: string
        description: "{{ doc('column__transaction_reason') }}"

      - name: transaction_points
        data_type: int
        description: "{{ doc('column__transaction_points') }}"

      - name: level_multiplier
        data_type: decimal(3,1)
        description: "{{ doc('column__point_multiplier_spendable') }}"

      - name: level_booster_points
        data_type: int
        description: "{{ doc('column__level_booster_points') }}"

      - name: loyalty_level_number
        data_type: int
        description: "{{ doc('column__loyalty_level_number') }}"

      - name: remaining_points
        data_type: int
        description: "{{ doc('column__remaining_points') }}"

      - name: billing_agreement_order_id
        data_type: string
        description: "{{ doc('column__billing_agreement_order_id') }}"

      - name: company_id
        data_type: string
        description: "{{ doc('column__company_id') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: points_expiration_date
        data_type: timestamp
        description: "{{ doc('column__points_expiration_date') }}"

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_preference_combinations
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_loyalty_events
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_events') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_loyalty_events')
            to_columns: [pk_dim_loyalty_events]
        data_tests:
          - relationships:
              to: ref('dim_loyalty_events')
              field: pk_dim_loyalty_events

      - name: fk_dim_dates_transaction
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_dates_points_expiration
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: not_null
          - type: foreign_key
            to: ref('dim_companies')
            to_columns: [pk_dim_companies]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies

      - name: fk_dim_loyalty_seasons
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_seasons') }}"
        data_tests:
          - relationships:
              to: ref('dim_loyalty_seasons')
              field: pk_dim_loyalty_seasons
              
  - name: dim_loyalty_seasons
    columns:
      - name: pk_dim_loyalty_seasons
        data_type: string
        description: "{{ doc('column__pk_dim_loyalty_seasons') }}"
        constraints:
          - type: primary_key
        data_tests:
          - unique
          - not_null

      - name: company_id
        data_type: string
        description: "{{ doc('column__company_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_season_name
        data_type: string
        description: "{{ doc('column__loyalty_season_name') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_season_year
        data_type: int
        description: "{{ doc('column__loyalty_season_year') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_season_quarter
        data_type: int
        description: "{{ doc('column__loyalty_season_quarter') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_season_start_date
        data_type: date
        description: "{{ doc('column__loyalty_season_start_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: loyalty_season_end_date
        data_type: date
        description: "{{ doc('column__loyalty_season_end_date') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null


  - name: dim_addresses
    description: "Contains the postal code and whether or not the address is geo restricted (0 if the address can receive deliveries, 1 otherwise) for all current shipping addresses."
    columns: 
      - name: pk_dim_addresses
        data_type: string
        description: "{{ doc('column__pk_dim_addresses') }}"
        constraints:
          - type: primary_key
        data_tests:
          - not_null
          - unique
      
      - name: shipping_address_id
        data_type: string
        description: "{{ doc('column__shipping_address_id') }}"
        data_tests:
          - not_null
          - unique
  
      - name: postal_code
        data_type: string
        description: "{{ doc('column__postal_code') }}"
        data_tests:
          - not_null

      - name: is_geo_restricted
        data_type: boolean
        description: "{{ doc('column__is_geo_restricted') }}"
        data_tests:
          - not_null


  - name: dim_discounts
    description: "Contains information on all discounts which customers can add to their account"
    latest_version: 1
    config:
      alias: dim_discounts
      contract:
        enforced: true

    columns:
      - name: pk_dim_discounts
        data_type: string
        description: "{{ doc('column__pk_dim_discounts') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: discount_id
        data_type: char(36)
        description: "{{ doc('column__discount_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_usage_type_id
        data_type: int
        description: "{{ doc('column__discount_usage_type_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_type_id
        data_type: int
        description: "{{ doc('column__discount_type_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_amount_type_id
        data_type: int
        description: "{{ doc('column__discount_amount_type_id') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_category_id
        data_type: char(36)
        description: "{{ doc('column__discount_category_id') }}"
        data_tests:
          - not_null:
              config:
                severity: error
                error_if: ">1020"  # Only NULL for discounts before 2021-09-22 (migration)
                warn_if: ">1020"

      - name: discount_channel_id
        data_type: char(36)
        description: "{{ doc('column__discount_channel_id') }}"

      - name: discount_sub_category_id
        data_type: char(36)
        description: "{{ doc('column__discount_sub_category_id') }}"

      - name: discount_coupon_type_id
        data_type: int
        description: "{{ doc('column__discount_coupon_type_id') }}"
        data_tests:
          - not_null:
              config:
                severity: error
                error_if: ">152"  # Only NULL for discounts before 2021-09-22 (migration)
                warn_if: ">152"

      - name: discount_title
        data_type: string
        description: "{{ doc('column__discount_title') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_partner_invoice_reference
        data_type: string
        description: "{{ doc('column__discount_partner_invoice_reference') }}"

      - name: customer_usage_limit
        data_type: int
        description: "{{ doc('column__customer_usage_limit') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_amount
        data_type: decimal(20,10)
        description: "{{ doc('column__discount_amount') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_partner_price
        data_type: decimal(20,10)
        description: "{{ doc('column__discount_partner_price') }}"

      - name: is_active_discount
        data_type: boolean
        description: "{{ doc('column__is_active_discount') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_coupon_code_required
        data_type: boolean
        description: "{{ doc('column__is_coupon_code_required') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_cumulative_discount
        data_type: boolean
        description: "{{ doc('column__is_cumulative_discount') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_valid_on_direct_order
        data_type: boolean
        description: "{{ doc('column__is_valid_on_direct_order') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_registration_discount
        data_type: boolean
        description: "{{ doc('column__is_registration_discount') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_disabled_on_freeze
        data_type: boolean
        description: "{{ doc('column__is_disabled_on_freeze') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: is_highest_price_discount
        data_type: boolean
        description: "{{ doc('column__is_highest_price_discount') }}"
        constraints:
          - type: not_null
        data_tests:
          - not_null

      - name: discount_channel_name
        data_type: string
        description: "{{ doc('column__discount_channel_name') }}"

      - name: discount_category_name
        data_type: string
        description: "{{ doc('column__discount_category_name') }}"
        data_tests:
          - not_null:
              config:
                severity: error
                error_if: ">1020"  # Only NULL for discounts before 2021-09-22 (migration)
                warn_if: ">1020"

      - name: discount_sub_category_name
        data_type: string
        description: "{{ doc('column__discount_sub_category_name') }}"

      - name: discount_chain_order
        data_type: int
        description: "{{ doc('column__discount_chain_order') }}"

      - name: discount_parent_id
        data_type: string
        description: "{{ doc('column__discount_parent_id') }}"

      - name: is_discount_chain
        data_type: boolean
        description: "{{ doc('column__is_discount_chain') }}"
        
    versions:
      - v: 1

  - name: dim_order_line_details
    description: >
      Information about Order Line Details. First level is credit, debit, transport and so on.
      Whereas next level is plus price dish, thrifty dish, groceries etc.
      Can be used to determine which type of order line that contributes to revenue.
    latest_version: 1
    config:
      alias: dim_order_line_details
      contract:
        enforced: true

    columns:
      - name: pk_dim_order_line_details
        data_type: string
        description: "{{ doc('column__pk_dim_order_line_details') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: order_line_type_name
        data_type: string
        description: "{{ doc('column__order_line_type_name') }}"

      - name: order_line_details
        data_type: string
        description: "{{ doc('column__order_line_details') }}"
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: bridge_preference_combinations_preferences
    description: "Bridge table between dim_preference_combinations and dim_preferences"
    latest_version: 1
    config:
      alias: bridge_preference_combinations_preferences
      contract:
        enforced: true

    columns:
      - name: pk_bridge_preference_combinations_preferences
        data_type: string
        description: "{{ doc('column__pk_bridge_preference_combinations_preferences') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_dim_preference_combinations
        data_type: string
        description: "{{ doc('column__pk_dim_preference_combinations') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preference_combinations')
            to_columns: [pk_dim_preference_combinations]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_preference_combinations')
              field: pk_dim_preference_combinations

      - name: fk_dim_preferences
        data_type: string
        description: "{{ doc('column__pk_dim_preferences') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_preferences')
            to_columns: [pk_dim_preferences]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_preferences')
              field: pk_dim_preferences

      - name: preference_id_list
        data_type: array<string>
        description: "{{ doc('column__preference_id_list') }}"
        data_tests:
          - not_null

      - name: preference_id
        data_type: string
        description: "{{ doc('column__preference_id') }}"
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: dim_customer_journey_segments
    description: "Customer journey segments table that is used to categorize customers and prospects based on their behavior in the past 8 weeks"
    latest_version: 1
    config:
      alias: dim_customer_journey_segments
      contract:
        enforced: true

    columns:
      - name: pk_dim_customer_journey_segments
        data_type: string
        description: "{{ doc('column__pk_dim_customer_journey_segments') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: customer_journey_main_segment_id
        data_type: int
        description: "{{ doc('column__customer_journey_main_segment_id') }}"
        data_tests:
          - not_null

      - name: customer_journey_sub_segment_id
        data_type: int
        description: "{{ doc('column__customer_journey_sub_segment_id') }}"
        data_tests:
          - not_null

      - name: customer_journey_main_segment_name
        data_type: string
        description: "{{ doc('column__customer_journey_main_segment_name') }}"
        data_tests:
          - not_null

      - name: customer_journey_sub_segment_name
        data_type: string
        description: "{{ doc('column__customer_journey_sub_segment_name') }}"
        data_tests:
          - not_null

      - name: customer_journey_main_segment_description
        data_type: string
        description: "{{ doc('column__customer_journey_main_segment_description') }}"
        data_tests:
          - not_null

      - name: customer_journey_sub_segment_description
        data_type: string
        description: "{{ doc('column__customer_journey_sub_segment_description') }}"
        data_tests:
          - not_null

    versions:
      - v: 1

  - name: fact_partnership_points
    description: "Table of all partnership points earned by customers on Cheffelo orders. Partnership points can only be earned by customers acquired through a partnership, e.g. SAS Partnership."
    config:
      alias: fact_partnership_points
      contract:
        enforced: true

    columns:
      - name: pk_fact_partnership_points
        data_type: string
        description: "{{ doc('column__pk_fact_partnership_points') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: billing_agreement_partnership_loyalty_point_id
        data_type: char(36)
        description: "{{ doc('column__billing_agreement_partnership_loyalty_point_id') }}"
        data_tests:
          - not_null
          - unique

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        data_tests:
          - not_null

      - name: billing_agreement_order_id
        data_type: char(36)
        description: "{{ doc('column__billing_agreement_order_id') }}"
        data_tests:
          - not_null

      - name: company_partnership_id
        data_type: char(36)
        description: "{{ doc('column__company_partnership_id') }}"
        data_tests:
          - not_null

      - name: partnership_rule_id
        data_type: char(36)
        description: "{{ doc('column__partnership_rule_id') }}"
        data_tests:
          - not_null

      - name: transaction_points
        data_type: int
        description: "{{ doc('column__transaction_points_partnership') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: fk_dim_partnerships
        data_type: string
        description: "{{ doc('column__pk_dim_partnerships') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_partnerships')
            to_columns: [pk_dim_partnerships]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_partnerships')
              field: pk_dim_partnerships

      - name: fk_dim_billing_agreements
        data_type: string
        description: "{{ doc('column__pk_dim_billing_agreements') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_billing_agreements')
            to_columns: [pk_dim_billing_agreements]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_billing_agreements')
              field: pk_dim_billing_agreements

      - name: fk_dim_dates
        data_type: int
        description: "{{ doc('column__pk_dim_dates') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_dates')
            to_columns: [pk_dim_dates]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: pk_dim_dates

      - name: fk_dim_companies
        data_type: string
        description: "{{ doc('column__pk_dim_companies') }}"
        constraints:
          - type: foreign_key
            to: ref('dim_companies')
            to_columns: [pk_dim_companies]
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_companies')
              field: pk_dim_companies


  - name: dim_partnerships
    description: "Table of all partnership rules that determine how many partnership points are earned and when they are earned by cutomers. Partnership points can only be earned by customers acquired through a partnership, e.g. SAS Partnership."
    config:
      alias: dim_partnerships
      contract:
        enforced: true

    columns:
      - name: pk_dim_partnerships
        data_type: string
        description: "{{ doc('column__pk_dim_partnerships') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: company_partnership_id
        data_type: char(36)
        description: "{{ doc('column__company_partnership_id') }}"
        data_tests:
          - not_null

      - name: partnership_rule_id
        data_type: char(36)
        description: "{{ doc('column__partnership_rule_id') }}"
        data_tests:
          - not_null

      - name: company_id
        data_type: char(36)
        description: "{{ doc('column__company_id') }}"
        data_tests:
          - not_null

      - name: partnership_id
        data_type: char(36)
        description: "{{ doc('column__partnership_id') }}"
        data_tests:
          - not_null

      - name: partnership_name
        data_type: string
        description: "{{ doc('column__partnership_name') }}"
        data_tests:
          - not_null

      - name: partnership_rule_name
        data_type: string
        description: "{{ doc('column__partnership_rule_name') }}"
        data_tests:
          - not_null

      - name: partnership_rule_description
        data_type: string
        description: "{{ doc('column__partnership_rule_description') }}"
        data_tests:
          - not_null

  - name: bridge_fact_orders_dim_partnerships
    description: "Bridge table connecting fact orders to dim partnerships. It is possible to have multiple rules that apply and earn partnership points for a single order."
    config:
      alias: bridge_fact_orders_dim_partnerships
      contract:
        enforced: true

    columns:

      - name: pk_bridge_fact_orders_dim_partnerships
        data_type: string
        description: "{{ doc('column__pk_bridge_fact_orders_dim_partnerships') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: fk_fact_orders
        data_type: string
        description: "{{ doc('column__pk_fact_orders') }}"
        constraints:
          - type: foreign_key
            to: ref('fact_orders')
            to_columns: [pk_fact_orders]
        data_tests:
          - not_null
          - relationships:
              to: ref('fact_orders')
              field: pk_fact_orders

      - name: fk_dim_partnerships
        data_type: string
        description: "{{ doc('column__pk_fact_orders') }}"
        constraints:
          - type: foreign_key
            to: ref('fact_orders')
            to_columns: [pk_fact_orders]
        data_tests:
          - not_null
          - relationships:
              to: ref('fact_orders')
              field: pk_fact_orders
