# DOCUMENTATION: https://docs.getdbt.com/reference/model-properties

version: 2

models:
  - name: pim__ingredient_status_codes
    description: "Contains the different statuses an ingredient can have."

    columns:
      - name: ingredient_status_code_id
        data_type: int
        description: "{{ doc('column__ingredient_status_code_id') }}"
        data_tests:
          - unique
          - not_null

      - name: ingredient_status_name
        data_type: string
        description: "{{ doc('column__ingredient_status_name') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__weekly_purchase_order_lines
    description: "Contains information on order lines for weekly purchase orders."

    columns:
      - name: purchase_order_line_id
        data_type: char(36)
        description: "{{ doc('column__purchase_order_line_id') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: purchase_order_id
        data_type: char(36)
        description: "{{ doc('column__purchase_order_id') }}"
        data_tests:
          - not_null

      - name: ingredient_id
        data_type: int
        description: "{{ doc('column__ingredient_id') }}"
        data_tests:
          - not_null

      - name: purchase_order_line_status_id
        data_type: int
        description: "{{ doc('column__purchase_order_line_status_id') }}"
        data_tests:
          - not_null

      - name: original_ingredient_quantity
        data_type: decimal(34,3)
        description: "{{ doc('column__original_ingredient_quantity') }}"

      - name: ingredient_purchasing_cost
        data_type: decimal(19,4)
        description: "{{ doc('column__ingredient_purchasing_cost') }}"
        data_tests:
          - not_null

      - name: vat
        data_type: decimal(10,8)
        description: "{{ doc('column__vat') }}"

      - name: total_purchasing_cost
        data_type: decimal(18,0)
        description: "{{ doc('column__total_purchasing_cost') }}"

      - name: extra_ingredient_quantity
        data_type: decimal(18,0)
        description: "{{ doc('column__extra_ingredient_quantity') }}"

      - name: total_ingredient_quantity
        data_type: decimal(18,0)
        description: "{{ doc('column__total_ingredient_quantity') }}"

      - name: take_from_storage_ingredient_quantity
        data_type: decimal(18,0)
        description: "{{ doc('column__take_from_storage_ingredient_quantity') }}"
        data_tests:
          - not_null

      - name: received_ingredient_quantity
        data_type: int
        description: "{{ doc('column__received_ingredient_quantity') }}"
        data_tests:
          - not_null

      - name: purchase_delivery_date
        data_type: timestamp
        description: "{{ doc('column__purchase_delivery_date') }}"

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__weekly_purchase_orders
    description: "Contains information on weekly purchase orders."

    columns:
      - name: purchase_order_id
        data_type: string
        description: "{{ doc('column__purchase_order_id') }}"
        constraints:
          - type: primary_key
          - type: not_null
        data_tests:
          - unique
          - not_null

      - name: ingredient_supplier_id
        data_type: int
        description: "{{ doc('column__ingredient_supplier_id') }}"
        data_tests:
          - not_null

      - name: purchasing_company_id
        data_type: char(36)
        description: "{{ doc('column__purchasing_company_id') }}"
        data_tests:
          - not_null

      - name: purchase_order_status_id
        data_type: int
        description: "{{ doc('column__purchase_order_status_id') }}"
        data_tests:
          - not_null

      - name: distribution_center_id
        data_type: char(36)
        description: "{{ doc('column__distribution_center_id') }}"
        data_tests:
          - not_null:
              config:
                severity: error
                error_if: ">9074" # orders < 2020 can be without distribution center id
                warn_if: ">9074"

      - name: menu_week
        data_type: int
        description: "{{ doc('column__menu_week') }}"
        data_tests:
          - not_null

      - name: menu_year
        data_type: int
        description: "{{ doc('column__menu_year') }}"
        data_tests:
          - not_null

      - name: is_special_purchase_order
        data_type: boolean
        description: "{{ doc('column__is_special_purchase_order') }}"
        data_tests:
          - not_null

      - name: production_date
        data_type: date
        description: "{{ doc('column__production_date') }}"

      - name: purchase_delivery_date
        data_type: timestamp
        description: "{{ doc('column__purchase_delivery_date') }}"
        data_tests:
          - not_null

      - name: purchase_order_date
        data_type: timestamp
        description: "{{ doc('column__purchase_order_date') }}"

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__ingredient_prices
    description: "Contains information on the planning purchasing price of ingredients."
    config:
      contract:
        enforced: true

    columns:
      - name: ingredient_price_id
        data_type: char(36)
        description: "{{ doc('column__ingredient_price_id') }}"
        data_tests:
          - unique
          - not_null

      - name: ingredient_id
        data_type: int
        description: "{{ doc('column__ingredient_id') }}"
        data_tests:
          - not_null

      - name: ingredient_price_type_id
        data_type: int
        description: "{{ doc('column__ingredient_price_type_id') }}"
        data_tests:
          - not_null

      - name: ingredient_unit_cost
        data_type: decimal(19,4)
        description: "{{ doc('column__ingredient_unit_cost') }}"
        data_tests:
          - not_null

      - name: ingredient_unit_cost_markup
        data_type: decimal(19,4)
        description: "{{ doc('column__ingredient_unit_cost_markup') }}"

      - name: ingredient_price_valid_from
        data_type: date
        description: "{{ doc('column__ingredient_price_valid_from') }}"
        data_tests:
          - not_null

      - name: ingredient_price_valid_to
        data_type: date
        description: "{{ doc('column__ingredient_price_valid_to') }}"

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"
        data_tests:
          - not_null

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"
        data_tests:
          - not_null

  - name: pim__procurement_cycles
    description: "Holds information on distribution center and company used for ingredient orders."
    config:
      contract:
        enforced: true

    columns:
      - name: company_id
        data_type: char(36)
        description: "{{ doc('column__company_id') }}"

      - name: purchasing_company_id
        data_type: char(36)
        description: "{{ doc('column__purchasing_company_id') }}"
        data_tests:
          - not_null

      - name: distribution_center_id
        data_type: char(36)
        description: "{{ doc('column__distribution_center_id') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"
        data_tests:
          - not_null

  - name: pim__recipe_favorite_types
    description: "Holds information about the different types of favoriting that is possible to select on the frontend."
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_favorite_type_id
        data_type: int
        description: "{{ doc('column__recipe_favorite_type_id') }}"
        data_tests:
          - unique
          - not_null

      - name: recipe_favorite_type_name
        data_type: string
        description: "{{ doc('column__recipe_favorite_type_name') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"
        data_tests:
          - not_null

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"
        data_tests:
          - not_null

  - name: pim__recipe_favorites
    description: "Contains information about recipes that have been hearted and disliked by customers"
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_favorite_id
        data_type: varchar(36)
        description: "{{ doc('column__recipe_favorite_id') }}"
        data_tests:
          - unique
          - not_null

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        data_tests:
          - not_null

      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        data_tests:
          - not_null

      - name: main_recipe_id
        data_type: int
        description: "{{ doc('column__main_recipe_id') }}"
        data_tests:
          - not_null

      - name: recipe_favorite_type_id
        data_type: int
        description: "{{ doc('column__recipe_favorite_type_id') }}"
        data_tests:
          - not_null

      - name: is_active_reaction
        data_type: boolean
        description: "{{ doc('column__is_active_reaction') }}"
        data_tests:
          - not_null

      - name: valid_from
        data_type: timestamp
        description: "{{ doc('column__valid_from') }}"
        data_tests:
          - not_null

      - name: valid_to
        data_type: timestamp
        description: "{{ doc('column__valid_to') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

  - name: pim__menu_recipes
    description: "Bridge table to link menus and recipes"
    config:
      contract:
        enforced: true

    columns:
      - name: menu_recipe_id
        data_type: int
        description: "{{ doc('column__menu_recipe_id') }}"
        data_tests:
          - unique
          - not_null

      - name: menu_id
        data_type: int
        description: "{{ doc('column__menu_id') }}"
        data_tests:
          - not_null

      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        data_tests:
          - not_null

      - name: menu_recipe_order
        data_type: smallint
        description: "{{ doc('column__menu_recipe_order') }}"
        data_tests:
          - not_null

  - name: pim__menu_variations
    description: "This table links menus to variations. Hence there is one row per menu_id and product_variation_id."
    config:
      contract:
        enforced: true

    columns:
      - name: menu_variation_id
        data_type: int
        description: "{{ doc('column__menu_variation_id') }}"
        data_tests:
          - unique
          - not_null

      - name: menu_id
        data_type: int
        description: "{{ doc('column__menu_id') }}"
        data_tests:
          - not_null

      - name: portion_id
        data_type: int
        description: "{{ doc('column__portion_id') }}"
        data_tests:
          - not_null

      - name: product_variation_id
        data_type: char(36)
        description: "{{ doc('column__product_variation_id') }}"
        data_tests:
          - not_null

      - name: menu_number_days
        data_type: smallint
        description: "{{ doc('column__menu_number_days') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

  - name: pim__menus
    description: "All menus per weekly menu. Each menu relates to a product."
    config:
      contract:
        enforced: true
    columns:
      - name: menu_id
        data_type: int
        description: "{{ doc('column__menu_id') }}"
        data_tests:
          - unique
          - not_null

      - name: weekly_menu_id
        data_type: int
        description: "{{ doc('column__weekly_menu_id') }}"
        data_tests:
          - not_null

      - name: product_id
        data_type: char(36)
        description: "{{ doc('column__product_id') }}"
        data_tests:
          - not_null

      - name: menu_status_code_id
        data_type: int
        description: "{{ doc('column__pim_status_code_id') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: is_selected_menu
        data_type: boolean
        description: "{{ doc('column__is_selected_menu') }}"

      - name: is_locked_recipe
        data_type: boolean
        description: "{{ doc('column__is_locked_recipe') }}"

  - name: pim__portions
    description: "All the different portions that exists"
    config:
      contract:
        enforced: true

    columns:
      - name: portion_id
        data_type: int
        description: "{{ doc('column__portion_id') }}"
        data_tests:
          - unique
          - not_null

      - name: main_portion_id
        data_type: int
        description: "{{ doc('column__main_portion_id') }}"

      - name: portion_status_code_id
        data_type: int
        description: "{{ doc('column__portion_status_code_id') }}"
        data_tests:
          - not_null

      - name: portion_size
        data_type: int
        description: "{{ doc('column__portion_size') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__recipe_portions
    description: "Links recipes to the possible portion variations"
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_portion_id
        data_type: int
        description: "{{ doc('column__recipe_portion_id') }}"
        data_tests:
          - unique
          - not_null

      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        data_tests:
          - not_null

      - name: portion_id
        data_type: int
        description: "{{ doc('column__portion_id') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__weekly_menus
    description: >
      This table holds information about each menu week (delivery week). There is one row per company per week\
      of the year.
    config:
      contract:
        enforced: true

    columns:
      - name: weekly_menu_id
        data_type: int
        description: "{{ doc('column__weekly_menu_id') }}"
        data_tests:
          - unique
          - not_null

      - name: company_id
        data_type: char(36)
        description: "{{ doc('column__company_id') }}"
        data_tests:
          - not_null

      - name: weekly_menu_status_code_id
        data_type: int
        description: "{{ doc('column__pim_status_code_id') }}"
        data_tests:
          - not_null

      - name: menu_week
        data_type: smallint
        description: "{{ doc('column__menu_week') }}"
        data_tests:
          - not_null

      - name: menu_year
        data_type: smallint
        description: "{{ doc('column__menu_year') }}"
        data_tests:
          - not_null

      - name: menu_week_monday_date
        data_type: date
        description: "{{ doc('column__menu_week_monday_date') }}"
        data_tests:
          - not_null

      - name: ingredient_purchase_date
        data_type: date
        description: "..."
        data_tests:
          - not_null

  - name: pim__recipes
    description: >
      All recipes that has ever been created for the menu weeks.
      Recipes exist both for all dishes and sometimes for other product types such as standalone products and groceries.
      The recipe_id for a dish should never occur in several menu weeks
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        data_tests:
          - unique
          - not_null

      - name: recipe_metadata_id
        data_type: int
        description: "{{ doc('column__recipe_metadata_id') }}"
        data_tests:
          - unique
          - not_null

      - name: main_recipe_id
        data_type: int
        description: "{{ doc('column__main_recipe_id') }}"

      - name: recipe_status_code_id
        data_type: int
        description: "{{ doc('column__recipe_status_code_id') }}"
        data_tests:
          - not_null

      - name: main_recipe_created_by
        data_type: varchar(50)
        description: "{{ doc('column__main_recipe_created_by') }}"

      - name: main_recipe_created_at
        data_type: timestamp
        description: "{{ doc('column__main_recipe_created_at') }}"

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"

      - name: source_updated_by
        data_type: varchar(50)
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

      - name: main_recipe_variation_suffix
        data_type: string
        description: "{{ doc('column__main_recipe_variation_suffix') }}"
        data_tests:
          - not_null

      - name: main_recipe_variation_id
        data_type: string
        description: "{{ doc('column__main_recipe_variation_id') }}"

      - name: recipe_average_rating
        data_type: decimal(6,4)
        description: "{{ doc('column__recipe_average_rating') }}"

      - name: recipe_shelf_life_days
        data_type: int
        description: "{{ doc('column__recipe_shelf_life_days') }}"
        data_tests:
          - not_null

      - name: is_in_recipe_universe
        data_type: boolean
        description: "{{ doc('column__is_in_recipe_universe') }}"
        data_tests:
          - not_null

  - name: pim__recipe_companies
    description: "Table that maps recipe_ids to companies. A recipe_id can be used across companies."
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        data_tests:
          - not_null

      - name: company_id
        data_type: char(36)
        description: "{{ doc('column__company_id') }}"
        data_tests:
          - not_null

  - name: pim__recipe_metadata
    description: "Metadata for recipes that are not specific for any languages."
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_metadata_id
        data_type: int
        description: "{{ doc('column__recipe_metadata_id') }}"
        data_tests:
          - unique
          - not_null

      - name: recipe_main_ingredient_id
        data_type: int
        description: "{{ doc('column__recipe_main_ingredient_id') }}"

      - name: recipe_difficulty_level_id
        data_type: int
        description: "{{ doc('column__recipe_difficulty_level_id') }}"
        data_tests:
          - not_null

      - name: cooking_time_from
        data_type: smallint
        description: "{{ doc('column__cooking_time_from') }}"
        data_tests:
          - not_null

      - name: cooking_time_to
        data_type: smallint
        description: "{{ doc('column__cooking_time_to') }}"
        data_tests:
          - not_null

      - name: recipe_photo
        data_type: string
        description: "{{ doc('column__recipe_photo') }}"

      - name: cooking_time
        data_type: string
        description: "{{ doc('column__cooking_time') }}"
        data_tests:
          - not_null

      - name: has_recipe_photo
        data_type: boolean
        description: "{{ doc('column__has_recipe_photo') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__recipe_metadata_translations
    description: "Metadata for recipes that are specific to each language."
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_metadata_id
        data_type: int
        description: "{{ doc('column__recipe_metadata_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: recipe_name
        data_type: string
        description: "{{ doc('column__recipe_name') }}"
        data_tests:
          - not_null

      - name: recipe_photo_caption
        data_type: string
        description: "{{ doc('column__recipe_photo_caption') }}"

      - name: roede_calculation_text
        data_type: string
        description: "{{ doc('column__roede_calculation_text') }}"

      - name: recipe_extra_photo_caption
        data_type: string
        description: "{{ doc('column__recipe_extra_photo_caption') }}"

      - name: recipe_general_text
        data_type: string
        description: "{{ doc('column__recipe_general_text') }}"

      - name: recipe_description
        data_type: string
        description: "{{ doc('column__recipe_description') }}"

      - name: recipe_name_headline
        data_type: string
        description: "{{ doc('column__recipe_name_headline') }}"

      - name: recipe_name_subheadline
        data_type: string
        description: "{{ doc('column__recipe_name_subheadline') }}"

  - name: pim__recipe_difficulty_level_translations
    description: ""

  - name: pim__recipe_main_ingredient_translations
    description: ""

  - name: pim__recipe_main_ingredients
    description: ""

    columns:
      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"

      - name: source_created_at
        data_type: string
        description: "{{ doc('column__source_created_at') }}"

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: string
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__taxonomy_translations
    description: "Table mapping taxonomy ids to their names in different languages"
    config:
      contract:
        enforced: true

    columns:
      - name: taxonomy_id
        data_type: int
        description: "{{ doc('column__taxonomy_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: taxonomy_name
        data_type: string
        description: "{{ doc('column__taxonomy_name') }}"
        data_tests:
          - not_null

  - name: pim__taxonomies
    description: "Table with taxonomy information"
    config:
      contract:
        enforced: true

    columns:
      - name: taxonomy_id
        data_type: int
        description: "{{ doc('column__taxonomy_id') }}"
        data_tests:
          - unique
          - not_null

      - name: taxonomy_type_id
        data_type: int
        description: "{{ doc('column__taxonomy_type_id') }}"
        data_tests:
          - not_null

      - name: taxonomy_status_code_id
        data_type: int
        description: "{{ doc('column__pim_status_code_id') }}"
        data_tests:
          - not_null

      - name: country_id
        data_type: char(36)
        description: "{{ doc('column__country_id') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

      - name: is_external_taxonomy
        data_type: boolean
        description: "{{ doc('column__is_external_taxonomy') }}"
        data_tests:
          - not_null

  - name: pim__recipe_taxonomies
    description: "Table mapping a recipe id to its taxonomy ids"
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"

      - name: taxonomy_id
        data_type: int
        description: "{{ doc('column__taxonomy_id') }}"

  - name: pim__generic_ingredient_translations
    description: "Table mapping generic ingredient ids to their names in different languages"
    config:
      contract:
        enforced: true

    columns:
      - name: generic_ingredient_id
        data_type: int
        description: "{{ doc('column__generic_ingredient_id') }}"

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"

      - name: generic_ingredient_name
        data_type: string
        description: "{{ doc('column__generic_ingredient_name') }}"

  - name: pim__chef_ingredient_sections
    description: "Table mapping chef ingredient sections to recipe portions"
    config:
      contract:
        enforced: true

    columns:
      - name: chef_ingredient_section_id
        data_type: int
        description: "{{ doc('column__chef_ingredient_section_id') }}"

      - name: recipe_portion_id
        data_type: int
        description: "{{ doc('column__recipe_portion_id') }}"

  - name: pim__chef_ingredients
    description: "Table containing chef ingredient information (an instance of generic ingredient)"
    config:
      contract:
        enforced: true

    columns:
      - name: chef_ingredient_id
        data_type: int
        description: "{{ doc('column__chef_ingredient_id') }}"

      - name: chef_ingredient_section_id
        data_type: int
        description: "{{ doc('column__chef_ingredient_section_id') }}"

      - name: recipe_ingredient_id
        data_type: int
        description: "{{ doc('column__recipe_ingredient_id') }}"

      - name: generic_ingredient_id
        data_type: int
        description: "{{ doc('column__generic_ingredient_id') }}"

  - name: pim__ingredient_category_translations
    description: "Table mapping ingredient category ids to their names in different languages"
    config:
      contract:
        enforced: true

    columns:
      - name: ingredient_category_id
        data_type: int
        description: "{{ doc('column__ingredient_category_id') }}"

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"

      - name: ingredient_category_name
        data_type: string
        description: "{{ doc('column__ingredient_category_name') }}"

      - name: ingredient_category_description
        data_type: string
        description: "{{ doc('column__ingredient_category_description') }}"

  - name: pim__ingredients
    description: "Table with ingredient information"
    config:
      contract:
        enforced: true

    columns:
      - name: ingredient_id
        data_type: int
        description: "{{ doc('column__ingredient_id') }}"
        data_tests:
          - not_null

      - name: ingredient_supplier_id
        data_type: int
        description: "{{ doc('column__ingredient_supplier_id') }}"
        data_tests:
          - not_null

      - name: ingredient_category_id
        data_type: int
        description: "{{ doc('column__ingredient_category_id') }}"
        data_tests:
          - not_null

      - name: ingredient_status_code_id
        data_type: int
        description: "{{ doc('column__pim_status_code_id') }}"
        data_tests:
          - not_null

      - name: ingredient_internal_reference
        data_type: string
        description: "{{ doc('column__ingredient_internal_reference') }}"
        data_tests:
          - not_null

      - name: ingredient_content_list
        data_type: string
        description: "{{ doc('column__ingredient_content_list') }}"

      - name: ingredient_type_id
        data_type: string
        description: "{{ doc('column__ingredient_type_id') }}"

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

      - name: ingredient_net_weight
        data_type: decimal(34,2)
        description: "{{ doc('column__ingredient_net_weight') }}"

      - name: unit_label_id
        data_type: int
        description: "{{ doc('column__unit_label_id') }}"

      - name: pack_type_id
        data_type: int
        description: "{{ doc('column__pack_type_id') }}"

      - name: epd_id_number
        data_type: decimal(34,2)
        description: "{{ doc('column__epd_id_number') }}"

      - name: ingredient_manufacturer_supplier_id
        data_type: int
        description: "{{ doc('column__ingredient_manufacturer_supplier_id') }}"

      - name: has_customer_photo
        data_type: boolean
        description: "{{ doc('column__has_customer_photo') }}"

      - name: has_internal_photo
        data_type: boolean
        description: "{{ doc('column__has_internal_photo') }}"

      - name: has_packaging_photo
        data_type: boolean
        description: "{{ doc('column__has_packaging_photo') }}"

      - name: is_cold_storage
        data_type: boolean
        description: "{{ doc('column__is_cold_storage') }}"

      - name: is_consumer_cold_storage
        data_type: boolean
        description: "{{ doc('column__is_consumer_cold_storage') }}"

      - name: is_fragile_ingredient
        data_type: boolean
        description: "{{ doc('column__is_fragile_ingredient') }}"

      - name: is_organic_ingredient
        data_type: boolean
        description: "{{ doc('column__is_organic_ingredient') }}"

      - name: is_special_packing
        data_type: boolean
        description: "{{ doc('column__is_special_packing') }}"

      - name: is_to_register_batch_number
        data_type: boolean
        description: "{{ doc('column__is_to_register_batch_number') }}"

      - name: is_to_register_expiration_date
        data_type: boolean
        description: "{{ doc('column__is_to_register_expiration_date') }}"

      - name: is_to_register_ingredient_weight
        data_type: boolean
        description: "{{ doc('column__is_to_register_ingredient_weight') }}"

      - name: is_to_register_temperature
        data_type: boolean
        description: "{{ doc('column__is_to_register_temperature') }}"

      - name: ingredient_gross_weight
        data_type: decimal(34,2)
        description: "{{ doc('column__ingredient_gross_weight') }}"

      - name: ingredient_shelf_life
        data_type: decimal(34,2)
        description: "{{ doc('column__ingredient_shelf_life') }}"

      - name: distribution_packages_per_pallet
        data_type: int
        description: "{{ doc('column__distribution_packages_per_pallet') }}"

      - name: ingredient_distribution_packaging_size
        data_type: int
        description: "{{ doc('column__ingredient_distribution_packaging_size') }}"

      - name: ingredient_co2_emissions_per_kg
        data_type: decimal(34,4)
        description: "{{ doc('column__ingredient_co2_emissions_per_kg') }}"

      - name: ingredient_co2_emissions_per_unit
        data_type: decimal(34,4)
        description: "{{ doc('column__ingredient_co2_emissions_per_unit') }}"

      - name: has_co2_data
        data_type: boolean
        description: "{{ doc('column__has_co2_data') }}"

      - name: ingredient_packaging_depth
        data_type: int
        description: "{{ doc('column__ingredient_packaging_depth') }}"

      - name: ingredient_packaging_height
        data_type: int
        description: "{{ doc('column__ingredient_packaging_height') }}"

      - name: ingredient_packaging_width
        data_type: int
        description: "{{ doc('column__ingredient_packaging_width') }}"

      - name: ingredient_size
        data_type: int
        description: "{{ doc('column__ingredient_size') }}"

      - name: ean_code_consumer_packaging
        data_type: string
        description: "{{ doc('column__ean_code_consumer_packaging') }}"

      - name: ean_code_distribution_packaging
        data_type: string
        description: "{{ doc('column__ean_code_distribution_packaging') }}"

      - name: ingredient_brand
        data_type: string
        description: "{{ doc('column__ingredient_brand') }}"

      - name: ingredient_external_reference
        data_type: string
        description: "{{ doc('column__ingredient_external_reference') }}"

  - name: pim__recipe_ingredients
    description: "Table connecting ingredient to a specific recipe variation"
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_ingredient_id
        data_type: int
        description: "{{ doc('column__recipe_ingredient_id') }}"

      - name: ingredient_internal_reference
        data_type: string
        description: "{{ doc('column__ingredient_internal_reference') }}"

      - name: is_main_protein
        data_type: boolean
        description: "{{ doc('column__is_main_protein') }}"

      - name: is_main_carbohydrate
        data_type: boolean
        description: "{{ doc('column__is_main_carbohydrate') }}"

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

      - name: nutrition_units
        data_type: decimal(6,2)
        description: "{{ doc('column__nutrition_units') }}"

      - name: recipe_ingredient_quantity
        data_type: decimal(6,2)
        description: "{{ doc('column__recipe_ingredient_quantity') }}"

  - name: pim__ingredient_categories
    description: "Table with ingredient category information"
    config:
      contract:
        enforced: true

    columns:
      - name: ingredient_category_id
        data_type: int
        description: "{{ doc('column__ingredient_category_id') }}"

      - name: ingredient_category_status_code_id
        data_type: int
        description: "{{ doc('column__pim_status_code_id') }}"

      - name: parent_category_id
        data_type: int
        description: "{{ doc('column__parent_category_id') }}"

      - name: country_id
        data_type: char(36)
        description: "{{ doc('column__country_id') }}"

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__recipe_ratings
    description: "Reported ratings (1-5) by the customer on purchased recipes"
    config:
      contract:
        enforced: true
    data_tests:
      - unique:
          column_name: "(billing_agreement_id || '-' || recipe_id)"
          where: "billing_agreement_id != 0"

    columns:
      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        data_tests:
          - not_null

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        data_tests:
          - not_null

      - name: recipe_rating
        data_type: int
        description: "{{ doc('column__recipe_rating') }}"

      - name: recipe_rating_score
        data_type: double
        description: "{{ doc('column__recipe_rating_score') }}"

      - name: is_not_cooked_dish
        data_type: boolean
        description: "{{ doc('column__is_not_cooked_dish') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: varchar(100)
        description: "{{ doc('column__source_created_by') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: varchar(100)
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__recipe_comments
    description: "Free text comments by the customer on purchased recipes"
    config:
      contract:
        enforced: true
    data_tests:
      - unique:
          column_name: "(billing_agreement_id || '-' || recipe_id)"
          where: "billing_agreement_id != 0"

    columns:
      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        data_tests:
          - not_null

      - name: billing_agreement_id
        data_type: int
        description: "{{ doc('column__billing_agreement_id') }}"
        data_tests:
          - not_null

      - name: recipe_comment
        data_type: string
        description: "{{ doc('column__recipe_comment') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: varchar(100)
        description: "{{ doc('column__source_created_by') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: varchar(100)
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__recipe_translations
    description: "Additional internal or customer facing text information accompanying the recipes. See also pim__recipe_metadata_translations."
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_id
        data_type: int
        description: "{{ doc('column__recipe_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: recipe_comment
        data_type: string
        description: "{{ doc('column__recipe_comment') }}"

      - name: recipe_chef_tip
        data_type: string
        description: "{{ doc('column__recipe_chef_tip') }}"

  - name: pim__portion_translations
    description: "Additional text information to the portion sizes"
    config:
      contract:
        enforced: true

    columns:
      - name: portion_id
        data_type: int
        description: "{{ doc('column__portion_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: portion_name
        data_type: string
        description: "{{ doc('column__portion_name') }}"
        data_tests:
          - not_null

  - name: pim__taxonomy_types
    description: "Table of taxonomy type information"
    config:
      contract:
        enforced: true

    columns:
      - name: taxonomy_type_id
        data_type: int
        description: "{{ doc('column__taxonomy_type_id') }}"
        data_tests:
          - not_null
          - unique

      - name: taxonomy_type_name
        data_type: string
        description: "{{ doc('column__taxonomy_type_name') }}"
        data_tests:
          - not_null

  - name: pim__status_code_translations
    description: "Table mapping status code ids to their names in different languages"
    config:
      contract:
        enforced: true

    columns:
      - name: status_code_id
        data_type: int
        description: "{{ doc('column__pim_status_code_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: status_code_name
        data_type: string
        description: "{{ doc('column__status_code_name') }}"
        data_tests:
          - not_null

      - name: status_code_description
        data_type: string
        description: "{{ doc('column__status_code_description') }}"

  - name: pim__allergy_preferences
    description: "Table connecting allergy ids to preference ids"
    config:
      contract:
        enforced: true

    columns:
      - name: allergy_id
        data_type: int
        description: "{{ doc('column__allergy_id') }}"
        data_tests:
          - not_null

      - name: preference_id
        data_type: string
        description: "{{ doc('column__preference_id') }}"
        data_tests:
          - not_null

  - name: pim__ingredient_allergies
    description: "Table connecting ingredient ids to allergy ids"
    config:
      contract:
        enforced: true

    columns:
      - name: ingredient_id
        data_type: int
        description: "{{ doc('column__ingredient_id') }}"
        data_tests:
          - not_null

      - name: allergy_id
        data_type: int
        description: "{{ doc('column__allergy_id') }}"
        data_tests:
          - not_null

      - name: has_trace_of
        data_type: boolean
        description: "{{ doc('column__has_trace_of') }}"
        data_tests:
          - not_null

  - name: pim__ingredient_category_preferences
    description: "Table connecting ingredient category ids to preference ids"
    config:
      contract:
        enforced: true

    columns:
      - name: ingredient_category_id
        data_type: int
        description: "{{ doc('column__ingredient_category_id') }}"
        data_tests:
          - not_null

      - name: preference_id
        data_type: string
        description: "{{ doc('column__preference_id') }}"
        data_tests:
          - not_null

  - name: pim__ingredient_translations
    description: "Table mapping ingredient ids to their names in different languages"
    config:
      contract:
        enforced: true

    columns:
      - name: ingredient_id
        data_type: int
        description: "{{ doc('column__ingredient_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: ingredient_name
        data_type: string
        description: "{{ doc('column__ingredient_name') }}"
        data_tests:
          - not_null

  - name: pim__allergy_translations
    description: "Table mapping allergy ids to their names in different languages"
    config:
      contract:
        enforced: true

    columns:
      - name: allergy_id
        data_type: int
        description: "{{ doc('column__allergy_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: allergy_name
        data_type: string
        description: "{{ doc('column__allergy_name') }}"
        data_tests:
          - not_null

  - name: pim__recipe_step_translations
    description: "Table mapping recipe step ids to their descriptions in different languages"
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_step_id
        data_type: int
        description: "{{ doc('column__recipe_step_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: recipe_step_description
        data_type: string
        description: "{{ doc('column__recipe_step_description') }}"

  - name: pim__ingredient_nutrient_facts
    description: "Table mapping ingredient ids to their nutritional values"
    config:
      contract:
        enforced: true

    columns:
      - name: ingredient_nutrient_fact_id
        data_type: int
        description: "{{ doc('column__ingredient_nutrient_fact_id') }}"
        data_tests:
          - not_null

      - name: ingredient_id
        data_type: int
        description: "{{ doc('column__ingredient_id') }}"
        data_tests:
          - not_null

      - name: ingredient_nutritional_value
        data_type: decimal
        description: "{{ doc('column__ingredient_nutritional_value') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__generic_ingredients
    description: "Table of generic ingredients information"
    config:
      contract:
        enforced: true

    columns:
      - name: generic_ingredient_id
        data_type: int
        description: "{{ doc('column__generic_ingredient_id') }}"
        data_tests:
          - not_null

      - name: generic_ingredient_status_code_id
        data_type: int
        description: "{{ doc('column__pim_status_code_id') }}"
        data_tests:
          - not_null

      - name: nutrition_calculation
        data_type: boolean
        description: "{{ doc('column__nutrition_calculation') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__nutrient_fact_translations
    description: "Table mapping nutrient fact ids to their names in different languages"
    config:
      contract:
        enforced: true

    columns:
      - name: ingredient_nutrient_fact_id
        data_type: int
        description: "{{ doc('column__ingredient_nutrient_fact_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: ingredient_nutrient_fact_name
        data_type: string
        description: "{{ doc('column__ingredient_nutrient_fact_name') }}"
        data_tests:
          - not_null

  - name: pim__ingredient_suppliers
    description: "Contains information on the suppliers of ingredients."

    columns:
      - name: ingredient_supplier_id
        data_type: int
        description: "{{ doc('column__ingredient_supplier_id') }}"
        data_tests:
          - not_null

      - name: ingredient_supplier_status_code_id
        data_type: int
        description: "{{ doc('column__ingredient_supplier_status_code_id') }}"
        data_tests:
          - not_null

      - name: country_id
        data_type: string
        description: "{{ doc('column__country_id') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

      - name: ingredient_supplier_name
        data_type: string
        description: "{{ doc('column__ingredient_supplier_name') }}"
        data_tests:
          - not_null

  - name: pim__weekly_ingredients
    description: "Contains the ingredients for each menu variation to be purchased for each week."

    columns:
      - name: weekly_ingredient_id
        data_type: string
        description: "{{ doc('column__weekly_ingredient_id') }}"
        data_tests:
          - not_null

      - name: menu_year
        data_type: int
        description: "{{ doc('column__menu_year') }}"
        data_tests:
          - not_null

      - name: menu_week
        data_type: int
        description: "{{ doc('column__menu_week') }}"
        data_tests:
          - not_null

      - name: menu_variation_id
        data_type: int
        description: "{{ doc('column__menu_variation_id') }}"
        data_tests:
          - not_null

      - name: ingredient_id
        data_type: int
        description: "{{ doc('column__ingredient_id') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

      # Test for not_null gives warning, but there are 339 rows with NULL up until 2019-03-11. DATA-1383 to create a better test.
      - name: weekly_ingredient_quantity
        data_type: decimal(34,3)
        description: "{{ doc('column__weekly_ingredient_quantity') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: is_fetched_from_recipes
        data_type: boolean
        description: "{{ doc('column__is_fetched_from_recipes') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

      - name: is_active_weekly_ingredient
        data_type: boolean
        description: "{{ doc('column__is_active_weekly_ingredient') }}"
        data_tests:
          - not_null:
              config:
                severity: warn

  - name: pim__price_categories
    description: "Table defining the price category, and the additional price, of a dish based on its total ingredient cost."
    config:
      contract:
        enforced: true

    columns:
      - name: company_id
        data_type: char(36)
        description: "{{ doc('column__company_id') }}"
        data_tests:
          - not_null

      - name: portion_id
        data_type: int
        description: "{{ doc('column__portion_id') }}"
        data_tests:
          - not_null

      - name: price_category_level_id
        data_type: int
        description: "{{ doc('column__price_category_level_id') }}"
        data_tests:
          - not_null

      - name: min_ingredient_cost_inc_vat
        data_type: int
        description: "{{ doc('column__min_ingredient_cost_inc_vat') }}"

      - name: max_ingredient_cost_inc_vat
        data_type: int
        description: "{{ doc('column__max_ingredient_cost_inc_vat') }}"

      - name: suggested_price_inc_vat
        data_type: decimal(6,2)
        description: "{{ doc('column__suggested_price_inc_vat') }}"
        data_tests:
          - not_null

      - name: price_category_level_name
        data_type: string
        description: "{{ doc('column__price_category_level_name') }}"
        data_tests:
          - not_null

      - name: valid_from
        data_type: timestamp
        description: "{{ doc('column__valid_from') }}"
        data_tests:
          - not_null

      - name: valid_to
        data_type: timestamp
        description: "{{ doc('column__valid_to') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__unit_labels
    description: ""
    config:
      contract:
        enforced: true

    columns:
      - name: unit_label_id
        data_type: int
        description: "{{ doc('column__unit_label_id') }}"
        data_tests:
          - not_null

      - name: unit_label_status_code_id
        data_type: int
        description: "{{ doc('column__unit_label_status_code_id') }}"
        data_tests:
          - not_null

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__unit_label_translations
    description: ""
    config:
      contract:
        enforced: true

    columns:
      - name: unit_label_id
        data_type: int
        description: "{{ doc('column__unit_label_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: unit_label_short_name
        data_type: string
        description: "{{ doc('column__unit_label_short_name') }}"

      - name: unit_label_short_name_plural
        data_type: string
        description: "{{ doc('column__unit_label_short_name_plural') }}"

      - name: unit_label_full_name
        data_type: string
        description: "{{ doc('column__unit_label_full_name') }}"

  - name: pim__quick_comments
    description: "Quick comment versioning table. Mostly ingested to get company_id."
    config:
      contract:
        enforced: true

    columns:
      - name: quick_comment_id
        data_type: string
        description: "{{ doc('column__quick_comment_id') }}"
        data_tests:
          - unique
          - not_null

      - name: company_id
        data_type: string
        description: "{{ doc('column__company_id') }}"
        data_tests:
          - not_null

      - name: is_frontend_enabled
        data_type: boolean
        description: "{{ doc('column__is_frontend_enabled') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

  - name: pim__quick_comment_translations
    description: "Table storing the text of quick comments in local language and english"
    config:
      contract:
        enforced: true

    columns:
      - name: quick_comment_translation_id
        data_type: string
        description: "{{ doc('column__quick_comment_translation_id') }}"
        data_tests:
          - unique
          - not_null

      - name: quick_comment_id
        data_type: string
        description: "{{ doc('column__quick_comment_id') }}"
        data_tests:
          - not_null

      - name: language_id
        data_type: int
        description: "{{ doc('column__language_id') }}"
        data_tests:
          - not_null

      - name: quick_comment_text
        data_type: string
        description: "{{ doc('column__quick_comment_text') }}"
        data_tests:
          - not_null

  - name: pim__rating_quick_comment_configuration
    description: "Number of stars in the review for which a quick comment is suggested to the user."
    config:
      contract:
        enforced: true

    columns:
      - name: rating_quick_comment_configuration_id
        data_type: string
        description: "{{ doc('column__rating_quick_comment_configuration_id') }}"
        data_tests:
          - unique
          - not_null

      - name: quick_comment_id
        data_type: string
        description: "{{ doc('column__quick_comment_id') }}"
        data_tests:
          - not_null

      - name: number_of_stars
        data_type: int
        description: "{{ doc('column__number_of_stars') }}"
        data_tests:
          - not_null

  - name: pim__recipe_rating_quick_comments
    description: "IDs of quick comments associated to reviews."
    config:
      contract:
        enforced: true

    columns:
      - name: recipe_review_id
        data_type: string
        description: "{{ doc('column__recipe_review_id') }}"
        data_tests:
          - not_null

      - name: quick_comment_id
        data_type: string
        description: "{{ doc('column__quick_comment_id') }}"
        data_tests:
          - not_null

  - name: pim__ingredient_types
    description: ""
    config:
      contract:
        enforced: true

    columns:
      - name: ingredient_type_id
        data_type: string
        description: "{{ doc('column__ingredient_type_id') }}"

      - name: source_created_by
        data_type: string
        description: "{{ doc('column__source_created_by') }}"
        data_tests:
          - not_null

      - name: source_created_at
        data_type: timestamp
        description: "{{ doc('column__source_created_at') }}"
        data_tests:
          - not_null

      - name: source_updated_by
        data_type: string
        description: "{{ doc('column__source_updated_by') }}"

      - name: source_updated_at
        data_type: timestamp
        description: "{{ doc('column__source_updated_at') }}"

      - name: ingredient_type_name
        data_type: string
        description: "{{ doc('column__ingredient_type_name') }}"
