[tool.poetry]
name = "data_contracts"
version = "0.1.0"
description = "A set of data contracts that ML project expect to be upheld"
authors = ["Mats E. Mollestad <mats.mollestad@cheffelo.com>"]
packages = [{include = "data_contracts"}]

[tool.poetry.dependencies]
python = "^3.10"
aligned = { version = "^0.0.129", extras=["azure", "pandas", "redis"]}
azure-storage-blob = "^12.19.0"
azure-identity = "^1.15.0"
pyarrow = "^14.0.0"
pyodbc = {version = "4.0.35", optional = true }
aioodbc = {version = "0.4.1", optional = true }
project-owners = {path = "../../packages/project-owners", develop = true}
polars = "1.28.1"
polars-lts-cpu = "1.28.1"
deltalake = "^0.16.2"
openai = "^1.52.0"
numpy = { version = "1.26.4", optional = true }
tiktoken = { version = "^0.8.0", optional = true }
databricks-connect = { version ="15.4.3", optional = true }
databricks-feature-engineering = { version = "^0.7.0", optional = true }
sqlglot = "^25.30.0"
dbt-core = { version=">=1.0.0,<2.0.0", optional = true }
pydantic_argparser = {path = "../../packages/pydantic-argparser", develop = true}

[tool.poetry.extras]
mssql = ["pyodbc", "aioodbc"]
openai = ["openai", "tiktoken"]
databricks = ["databricks-connect", "databricks-feature-engineering"]
dbt = ["dbt-core"]

[tool.poetry.group.dev.dependencies]
black = "*"
pre-commit = "*"
pytest = "*"
pytest-asyncio = "*"
ruff = "*"
chef = {path = "../../packages/chef", develop = true}
pyright = "^1.1.376"

[tool.pyright]
exclude = ["data_contracts/sql_server.py", ".venv"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
