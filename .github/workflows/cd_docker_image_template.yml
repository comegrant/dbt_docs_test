name: 'Build and Push Docker image'

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: "The project directory to deploy. Should contain a databricks.yml file in the root"

      dockerfile:
        required: true
        type: string
        default: ${{ inputs.working-directory }}/Dockerfile

      image-name:
        required: true
        type: string

      tag:
        type: string
        default: ''

      push-latest:
        type: boolean
        default: false

      push-sha:
        type: boolean
        default: false

      environment:
        type: string
        default: dev

      registry:
        required: true
        type: string

  workflow_dispatch:  # Allows to trigger the workflow manually in GitHub UI

jobs:
  build-docker-image:
    name: 'Build and Push Docker image'
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: 'ACR authentication'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ inputs.registry }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Construct Docker Image
      id: docker-image
      shell: bash
      run: echo "image=${{ inputs.registry }}/${{ inputs.image-name }}" >> $GITHUB_OUTPUT

    - name: Setting SHA
      if: github.event_name == 'pull_request'
      run: echo "GIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

    - name: Setting SHA
      if: github.event_name == 'push'
      run: echo "GIT_SHA=${{ github.sha }}" >> $GITHUB_ENV

    - name: Extract branch name
      id: branch_name
      shell: bash
      run: |
        branch_name=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
        branch_tag=${branch_name/\//-}
        echo "branch_tag=$branch_tag" >> $GITHUB_OUTPUT

    - name: Setting SHA Tag
      if: ${{ inputs.push-sha == true }}
      run: echo "IMAGES=${{ steps.docker-image.outputs.image }}:${{ env.GIT_SHA }}" >> $GITHUB_ENV

    - name: Setting Branch
      if: ${{ inputs.push-sha == false }}
      run: echo "IMAGES=${{ steps.docker-image.outputs.image }}:${{ steps.branch_name.outputs.branch_tag }}" >> $GITHUB_ENV

    - name: Setting Tag
      if: ${{ (inputs.tag == '') || inputs.push-latest }}
      run: echo "IMAGES=$IMAGES,${{ steps.docker-image.outputs.image }}:${{ inputs.environment }}-latest" >> $GITHUB_ENV

    - name: Setting Tag
      if: ${{ inputs.tag != '' }}
      run: echo "IMAGES=$IMAGES,${{ steps.docker-image.outputs.image }}:${{ inputs.tag }}" >> $GITHUB_ENV

    - name: Build and Push to ACR
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ env.IMAGES }}
        file: ${{ inputs.working-directory }}/${{ inputs.dockerfile }}
        build-args: |
          GIT_COMMIT_HASH=${{ env.GIT_SHA }}
