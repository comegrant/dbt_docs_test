---
name: Reusable dbt CI

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: "From which folder this pipeline executes"
      python-version:
        required: false
        type: string
      target-env:
        required: true
        type: string
        description: "Target environment in Github Actions"
      # TODO: Not being used
      install-packages:
        description: "Space seperated list of packages to install using apt-get."
        default: ""
        type: string
      # TODO: Did not understand the message under here
      # To avoid being billed 360 minutes if a step does not terminate
      # (we've seen the setup-python step below do so!)
      ci-timeout:
        description: "The timeout of the ci job. Default is 25min"
        default: 25
        type: number
      dbt-target:
        required: true
        type: string
  workflow_dispatch:  # Allows to trigger the workflow manually in GitHub UI

jobs:
  dbt-ci:
    name: 'Deploy dbt models in ${{inputs.working-directory}}'
    runs-on: ubuntu-22.04
    # TODO: Do not get this fully
    environment: ${{ inputs.target-env }}
    timeout-minutes: 30

    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        timeout-minutes: 5
        with:
          python-version: ${{ inputs.python-version }}
          python-version-file: 'pyproject.toml'
          cache: "poetry"
          cache-dependency-path: |
            poetry.lock
            ${{ inputs.working-directory }}/poetry.lock

      - name: Install Python packages
        run: poetry install --with dev

      - name: Install dbt dependencies
        run: poetry run dbt deps --project-dir ./transform

      - name: dbt build
        # TODO: Should maybe not deploy automatically in prod?
        run: poetry run dbt build --target=${{ inputs.dbt-target }} --full-refresh --project-dir ./transform --profiles-dir ./transform/profiles
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_HTTP_PATH: ${{ secrets.DATABRICKS_HTTP_PATH }}
          DATABRICKS_DBT_TOKEN: ${{ secrets.DATABRICKS_DBT_TOKEN }}
